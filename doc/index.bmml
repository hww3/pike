$version manual

  This manual is far from complete, it still needs a lot of work to cover
  all the aspects required of a good manual. However, I hope that it is
  still useful in it's present state.

 Getting started

  For now this section is made up of example code with line by line
  explanations. If there is a word you don't understand I suggest you
  look it up in the index first time you encouter it because it might
  be essential to understanding that piece of code.

	KEYWORD_LIST examples

	TAG control

 Control structures

  Control structures groups code into blocks and they control the order in
  which statements are executed. Control structures in Pike are basically
  the same as those in C, with a few exceptions.

	KEYWORD_LIST control

	TAG types

 Types

  Data is stored in different ways, integers (eg. 1, 2, 3, 4 etc.) are
  are stored in one way, real numbers (1.0, 1.1, etc.) in another. Each
  different way get its own name. Pike types are part of what makes Pike
  a powerful language. They make it easy to handle data without worrying
  about memory management and other programming obstacles.

	KEYWORD_LIST types

	TAG pike

 Pike and object orientation

  This section is about the more fundamental workings of Pike, such as
  how Pike compiles code and object orientation.

	KEYWORD_LIST pike

 Builtin functions

  Pike has a wide range of builtin functions. Most of these are implemented
  in C, but some are implemented in Pike using the add_constant function.

	LINK pike/efuns Here's a list of all built-in functions.

	TAG operators

	LINK operators/operators Operators

  Pike operators behave much like the onces in C, but have many many additional
  features. Most of this added functionality is related to the new data types.

 Keyword index

  The rest of the written documentation is gathered here, without much
  thought about order. Hopefully you should be able to use this section
  anyway once you've looked at the sections above.

	TAG file

	KEYWORD_INDEX file

	KEYWORD_INDEX programs

	KEYWORD_INDEX other

	LINK pike/all Here's a list of all pages.

 Pike internals

  This section of the manual tries to explain how the inside of Pike works.
  It is intended for people who wants to write extentions to Pike, but
  could also be useful for debugging and/or optimization.

	KEYWORD_LIST internal__internals

