NAME
	hilfe - Hubbe's Incremental LPC FrontEnd

SYNTAX
	$ hilfe
	or
	$ ulpc -Cstay hilfe

DESCRIPTION
	Hilfe is a LPC-script that supplies an incremental environment for
	LPC. It allowes you to evaluate LPC 'on the fly'. If you're running
	UNIX, you only have to write 'hilfe' to start it, otherwise you will
	have to write 'driver -Cstay hilfe' to run it. If you don't know what
	'incremeantal' means in this context, ask you local LISP junkie.

	Hilfe has the following commands:

	quit - exit hilfe
	new  - clear all variables and function definition
	dump - dump all current variables
	.    - clear input buffer

	Hilfe parses a subset of LPC, there many things it doesn't handle. Here
	is a list of what you can do:

	Define a function:
	<type> <name>( <arguments> ) { <statements > }
	Note that hilfe simulates a function defenition by defining a variable
	and setting it to the function pointer. Therefor actual typechecking is
	almost nil. Also note that hilfe doesn't recognize type modifiers such
	as static, private, varargs etc.

	Declare one or many global variables:
	<type> <name> [=<value>], <name> [=value>] ..... ;
	Hilfe simulates variable handling, and typechecking is almost nil,
	therefor all global variables are declared as mixed, whatever the
	<type> may be.

	Evaluate a statement:
	<statement> ;
	Statements include the following examples:
		for(e=0;e<10;e++) ;
	
		e=10;

		write(e);

		if(foo) return bar; else return gazonk;

	Statements beginning with for, while, switch, if, do or return will
	not automatically return anything, and no result will be printed.


SEE ALSO
	script_mode
