Sun Nov 12 21:45:20 1995  Fredrik Hubinette  <hubbe@sparky.signum.se>

	* modules/file: struct file renamed to struct my_file
	* "ÿ" now works

Mon Nov  6 00:26:48 1995  Fredrik Hubinette  <hubbe@sparky.signum.se>

	* indices and values now works on objects

        * v1.0E-12 released

	* master.lpc: now seeds random generator
	* simulate.lpc: call_other removed
	* arrays, mappings, objects and lists added as efuns can now
          be modified. (That is, their contents can be modified.)
	* language.y: catch can now take a block as argument
	* modules/file/file.c: low level fd handling rewritten,
          will behave differently when more than one /precompiled/file
          points to the same fd. No more fatals for select()ing the wrong
          filedescriptors I hope.
	* object.c: added a destructor called destroy. destroy will be
          called in all objects when it is destructed. It can not stop
          the destruction though.
	* interpret.c: added more trace information to -t4
	* moved the testsuite to src/tests/
	* created a testsuite that verifies the doc/ directory
          (test/verifymanual.lpc)
        * lpc_signals.c: fixed to use sigvec/sigaction if possible
          also added checks for EINTR all over the place.

Sat Nov  4 04:08:46 1995  Fredrik Hubinette  <hubbe@sparky.signum.se>

	* modules/file/file.c: Reorganized, changed the underlying
          data structures to work better.

Fri Nov  3 23:26:12 1995  Fredrik Hubinette  <hubbe@sparky.signum.se>

	* language.y: fixed a coredumping bug when the first function
          was missing type.

Thu Nov  2 00:13:20 1995  Fredrik Hubinette  <hubbe@sparky.signum.se>

	* fixed various #include to compile with A/UX
	* fixed signal handling to use sigaction/sigvec/signal

Tue Oct 31 18:57:49 1995  Fredrik Hubinette  <hubbe@sparky.signum.se>

	* Makefile.in, config.h: moved DEBUG to Makefile
	* lpc_signals.c: fixed a warning

Sun Oct 29 04:02:03 1995  Fredrik Hubinette  <hubbe@sparky.signum.se>

        * v1.0E-13 released

	* modified uhttpd.lpc to use class {}
	* file.c: when several file objects were point at one fd, the
          callbacks would be removed even if the callbacks were not to
          that object.
	* program.c: fixed so that checking types against prototypes is
          only done when the prototype isn't inherited
	* language.y: fixed a core-dumping bug when doing foo::bar on an
          unknown identifier
        * compile.h: new file that handles pusing/popping of compile related
          state information
        * program.c: moved state pusing/popping to compile.h
        * lex.c: added keyword class and cleaned up a little
	* language.y: Added class {} and fixed a scope bug 
        * Started using CVS

Tue Oct 24 00:13:18 1995  Fredrik Hubinette  <hubbe@sparky.signum.se>

	* everything; fixed implicit casts to explicits in < > <= >=

	* builtin_efuns.c (f_values & f_indices): fixed a loop with
	  undefined behaviour, now it works.

	* svalue.c (copy_svalues_recursively_no_free): Changed
	  (*to=*from).u.refs[0]++; to *to=*from; from->u.refs[0]++;
          because hp-cc didn't handle the first case. 

Sun Oct 22 22:50:49 1995  Fredrik Hubinette  <hubbe@sparky.signum.se>

	* svalue.c (assign_from_short_svalue_no_free): Moved
	  assignmet to make it work with stupid compilers. (HP-cc)

	* main.c (main): put #ifdef's around usage of RLIM_INFINITY

	* configure.in: Added special patch for HP-UX cc,
	  also changed so that -pipe -g -W -Wunused -Wformat is only
          used with gcc.
          Fixed #ifdef <-> #if problem in test for byteorder
	* all files: removed extra includes of stdlib.h, stdio.h and unistd.h

Sat Oct 21 01:38:37 1995  Fredrik Hubinette  <hubbe@tymin.signum.se>

	* array.c (compact_array): this routine would allocate
          array(int) when given an array(string|zero) if first
	  index was zero.
	* array.c (low_lookup): Failed to lookup zeroes in a short
          string *: FIXED

	* create_testsuite: added a few thousand tests on switch()

	* configure.in: Removed the definition of SOLARIS that
	  causes mutex lock around accept()
	  also added search for -lcrypt
	* mapping.c: fixed so that order_mapping doesn't do
          free(0) sometimes..
	* modules/files/file.c: fixed a missing ; in the simulated
	  socketpair().

Thu Oct 19 12:48:58 1995  Fredrik Hubinette  <hubbe@freeone.signum.se>

	* v1.1E-14 Released

	* array.c: when sorting an array for switch(), it would dump core
	  if there was strings and zeroes, but nothing else. FIXED

Tue Oct 17 21:45:31 1995  Fredrik Hubinette  <hubbe@sparky.signum.se>

	* v1.0E-14 Released

	* las.c (optimize): Fixed a rather nasty bug that caused
	  segfaults in loops like for(something;x++;somethingelse) {}

	* language.y: fixed so you can declare variables as:
	  function(int,int:int) foo;
	* lpc_types.c: fixed a nasty bug in typechecker, also made
	  'mixed' match 'void' (simpler that way)
	* program.c: Fixed a nasty bug that made ::identifier dump
          core if identifier was inherited indirectly.

Sat Oct 14 01:58:13 1995  Fredrik Hubinette  <hubbe@sparky.signum.se>

	* v1.1E-15 Released

	* call_out.c (verify_call_outs): Fixed so that this function
	  is actually run (when compiled with DEBUG and usint -d)
	  Also fixed a bug when doing call_out 0 or less...

	* interpret.c (strict_apply_svalue): Moved fix to a bug
	  to apply_svalue, so I don't cause a new bug.
	  (void functions left droppings on the stack)

Thu Oct 12 22:33:26 1995  Fredrik Hubinette  <hubbe@sparky.signum.se>

	* v1.0E-15 Released

	* Makefile.in: targets 'export' added, and 'depend' fixed
	  make depend now uses a uLPC script to get rid of include
	  and pathnames
	* simulate.lpc: added system()
	* file.c: added file->set_close_on_exec()

	* Changelog started
