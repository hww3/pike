#!/bin/sh

#set -x

SCRIPT="$1"
TARGET="$2"
shift 2

TMP_BUILDDIR="@BUILDDIR@"
TMP_BINDIR="@BINDIR@"
LIBDIR_SRC="@LIBDIR@"
SRCDIR="@srcdir@"

export TMP_BUILDDIR
export LIBDIR_SRC
export TMP_BUILDDIR
export SRCDIR

retries=.

if test "@CROSS@" = "yes"; then
  method="QQQQ"
  retries="....."
else :; fi

if test -f "$TMP_BUILDDIR/precompile-method" ; then
  . "$TMP_BUILDDIR/precompile-method"
else
  :
fi

old_method="${method-}"

while test "$retries" != ............. ; do

RUNPIKE=
case $method in
  Q)
    RUNPIKE="$TMP_BUILDDIR/pike -DNOT_INSTALLED -m$TMP_BUILDDIR/master.pike $PIKEOPTS"
  ;;
  QQ)
    RUNPIKE="$TMP_BUILDDIR/tpike -DNOT_INSTALLED -m$TMP_BUILDDIR/master.pike $PIKEOPTS"
  ;;
  QQQ)
    RUNPIKE=$TMP_BUILDDIR/test-pike
  ;;
  QQQQ)
    LAST_PIKE=pike
    method=QQQQQ
    RUNPIKE="$LAST_PIKE -DOLD"
  ;;
  QQQQQ)
    RUNPIKE="$LAST_PIKE -DOLD"
  ;;
  QQQQQQ)
    ifs_save="${IFS- 	}"
    IFS=" :"
    for dir in $PATH
    do
      for p in pike pike7 pike70 pike71 pike07 pike06 pike-mirar
      do
        if [ -x $dir/$p ]; then
          if [ "x$LAST_PIKE" = xpike ] ; then
            LAST_PIKE=$dir/$p
            RUNPIKE="$dir/$p -DOLD"
            break
          fi

          if [ "x$LAST_PIKE" = "x$dir/$p" ]; then
            LAST_PIKE=pike
          fi
        fi
      done
      if [ "x$RUNPIKE" != x ]; then
        method=QQQQQ
        break
      fi
    done
    IFS="${ifs_save}"
  ;;
  QQQQQQQ)
    method=
  ;;
esac

#
# By linking these two files to the current directory I can make
# $SCRIPT work with older versions of Pike - Hubbe
#

if test -f ./$SCRIPT ; then
  :
else
  ln -s "$TMP_BINDIR/$SCRIPT"  ./$SCRIPT
fi

if test -f ./C.pmod ; then
  :
else
  ln -s "$LIBDIR_SRC/modules/Parser.pmod/C.pmod"  ./C.pmod
fi



if test "x${RUNPIKE-}" != x ; then
echo "precompile: $RUNPIKE ./$SCRIPT $@ >$TARGET (method=$method)"
if $RUNPIKE ./$SCRIPT "$@" >"$TARGET" ; then

cat > "$TMP_BUILDDIR/precompile-method" <<EOF
LAST_PIKE="$LAST_PIKE"
method="$method"
retries="$retries"
EOF

exit 0
fi
fi

method="Q$method"
retries=".$retries"

done # retry
# Total failure
rm "$TARGET"
exit 1