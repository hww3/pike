// - Here we try the regexp module
test_true([[programp(regexp)]])
test_any([[object o; o=clone(regexp); destruct(o); return 1]],1)

// regexp->create
test_any([[object o; o=regexp("^.*$"); destruct(o); return 1]],1)

// regexp->match
test_eq([[regexp("^.*$")->match("")]],1)
test_eq([[regexp(".*")->match("foo")]],1)
test_eq([[regexp("^.*$")->match("a")]],1)
test_eq([[regexp("^.*$")->match("-")]],1)
test_eq([[regexp("^$")->match("")]],1)
test_eq([[regexp("^.$")->match("a")]],1)
test_eq([[regexp("^.$")->match("-")]],1)
test_eq([[regexp("^[abc]$")->match("-")]],0)
test_eq([[regexp("^[abc]$")->match("a")]],1)
test_eq([[regexp("^[abc]$")->match("c")]],1)
test_eq([[regexp("^[^abc]$")->match("-")]],1)
test_eq([[regexp("^[^abc]$")->match("a")]],0)
test_eq([[regexp("^[^abc]$")->match("c")]],0)
test_eq([[regexp("^a*$")->match("aaaa")]],1)
test_eq([[regexp("^(a|bb)*$")->match("aabbabb")]],1)
test_eq([[regexp("^(a|bb)*$")->match("")]],1)
test_eq([[regexp("^(a|bb)+$")->match("")]],0)
test_eq([[regexp("^(a|bb)+$")->match("aaa")]],1)
test_eq([[regexp("^(a|bb)+$")->match("bbb")]],0)
test_eq([[regexp("^(a|bb)+$")->match("bbaabba")]],1)
test_eq([[regexp("^a|b$")->match("a")]],1)
test_eq([[regexp("^a|b$")->match("b")]],1)

// regexp->split
test_equal([[regexp("^(a*)[^a]*$")->split("aaabbb")]],({"aaa"}))

