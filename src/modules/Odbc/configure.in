#
# $Id: configure.in,v 1.15 1999/03/20 00:18:57 marcus Exp $
#
# Configure script for the odbc-module
#
# Henrik Grubbström
#

AC_INIT(odbc.c)
AC_CONFIG_HEADER(config.h)

AC_MODULE_INIT()

AC_PROG_CPP

OLD_LIBS=$LIBS
OLD_LDFLAGS=$LDFLAGS
OLD_CPPFLAGS=$CPPFLAGS

AC_ARG_WITH(odbc,  [  --without-odbc       no support for ODBC databases],[],[with_odbc=yes])

if test x$with_odbc = xyes; then
 if test "x$pike_cv_sys_os" = "xWindows_NT" ; then
   AC_CHECK_HEADERS(windows.h sql.h sqlext.h)

   if test "$ac_cv_header_sql_h$ac_cv_header_sqlext_h" = "yesyes"; then
     AC_DEFINE(HAVE_ODBC)
     LIBS="-lodbc32 $LIBS"
     pike_cv_odbc=yes
     cat <<EOF

ODBC support enabled.

EOF
    fi
 else

  pike_cv_odbc=no;

  AC_MSG_CHECKING(for the ODBC include-directory)

  AC_CACHE_VAL(pike_cv_odbc_include_dir, [
    if test "x$INFORMIXDIR" = "x" ; then 
      foodir=''
    else
      foodir=$INFORMIXDIR/cli/include
    fi

    pike_cv_odbc_include_dir=''

    # MIMER doesn't include the odbc header files.

    for bardir in $foodir /opt/*odbc/*/include \
        /usr/opt/*odbc/*/include /opt/*odbc/include /usr/opt/*odbc/include \
        /usr/local/include /usr/local/odbc/include /usr/local/include/odbc \
	/usr/local/mysql/include /usr/local/mysql/include/mysql \
        /usr/odbc/include /usr/include/odbc /usr/include \
	/include/odbc /include; do
      if test -d $bardir/.; then
        if ls $bardir/qeodbc.h >/dev/null 2>&1; then
          pike_cv_odbc_include_dir="$bardir $pike_cv_odbc_include_dir"
	else
	  if ls $bardir/iodbc.h >/dev/null 2>&1; then
	    pike_cv_odbc_include_dir="$bardir $pike_cv_odbc_include_dir"
	  else
	    :
	  fi
 	fi
      else
	:
      fi
    done
  ])

  AC_MSG_RESULT($pike_cv_odbc_include_dir)

  if test "x$pike_cv_odbc_include_dir" = x; then :; else
    for bardir in $pike_cv_odbc_include_dir; do
      echo Adding $bardir to the include search path.
      CPPFLAGS="-I$bardir ${CPPFLAGS}"
    done
  fi

  AC_MSG_CHECKING(for iODBC driver manager)

  AC_CACHE_VAL(pike_cv_iodbc, [
    pike_cv_iodbc=no
    for iodbc_dir in /usr/local/lib /usr/local/mysql/lib /usr/lib; do
      for dlsuffix in so s.o sl; do
        if ls $iodbc_dir/iodbc-*.$dlsuffix >/dev/null 2>&1 ; then
          pike_cv_iodbc=`ls -1 $iodbc_dir/iodbc-*.$dlsuffix | head -1`
	  break
        else
	  :
        fi
      done
      if test "x$pike_cv_iodbc" = "xno" ; then
        :
      else
        break
      fi
    done
  ])

  AC_MSG_RESULT($pike_cv_iodbc)

  if test "x$pike_cv_iodbc" = "xno" ; then
    :
  else

    AC_CHECK_HEADERS(isql.h isqlext.h)

    AC_MSG_CHECKING(for SQLConnect in $pike_cv_iodbc)

    AC_CACHE_VAL(pike_cv_lib_iodbc_SQLConnect, [
      ac_save_LIBS="$LIBS"
      LIBS="$pike_cv_iodbc $LIBS"
      AC_TRY_LINK([
        char SQLConnect();
      ], [
        SQLConnect();
      ], pike_cv_lib_iodbc_SQLConnect=yes, pike_cv_lib_iodbc_SQLConnect=no)
      LIBS="$ac_save_LIBS"
    ])
    AC_MSG_RESULT($pike_cv_lib_iodbc_SQLConnect)

    if test "x$pike_cv_lib_iodbc_SQLConnect" = xyes; then
      LIBS="$pike_cv_iodbc $LIBS"
      pike_cv_odbc=yes
    else
      :
    fi

  fi

  if test "x$pike_cv_odbc" = xyes; then
    :
  else

    AC_MSG_CHECKING(for ODBC library-directory)

    AC_CACHE_VAL(pike_cv_odbc_lib_dir, [

      # ${INFORMIXDIR:+$INFORMIXDIR/cli/dlls} does not work with stupid sh
      # /Hubbe

      if test "x$INFORMIXDIR" = "x" ; then 
        foodir=''
      else
        foodir=$INFORMIXDIR/cli/dlls
      fi

      for pike_cv_odbc_lib_dir in $foodir /opt/*odbc/*/lib /usr/opt/*odbc/*/lib \
          /opt/*odbc/lib /usr/opt/*odbc/lib /usr/local/lib /usr/local/odbc/lib \
          /usr/local/lib/odbc /usr/odbc/lib /usr/lib/odbc /usr/lib \
          /lib/odbc /lib no; do
        if test -d $pike_cv_odbc_lib_dir/.; then
          if ls $pike_cv_odbc_lib_dir/*odbc* >/dev/null 2>&1 ; then
	    break
	  else
	    :
	  fi
        else
          :
        fi
      done
    ])

    AC_MSG_RESULT($pike_cv_odbc_lib_dir)

    if test x$pike_cv_odbc_lib_dir = xno; then :; else
      echo Adding $pike_cv_odbc_lib_dir to the library search path.
      LDFLAGS="-L$pike_cv_odbc_lib_dir -R$pike_cv_odbc_lib_dir ${LDFLAGS}"
    fi

    # Header file

    AC_CHECK_HEADERS(windows.h qeodbc.h sql.h sqlext.h)

    if test "$ac_cv_header_sql_h$ac_cv_header_sqlext_h" = "yesyes"; then

      # System libs which might be needed

      if echo $LIBS|grep -- -lsocket >&5 2>&5; then
        :
      else
        AC_CHECK_LIB(socket, socket, [
          LIBS="-lsocket $LIBS"
        ], [])
      fi
      if echo $LIBS|grep -- -lnsl >&5 2>&5; then
        :
      else
        AC_CHECK_LIB(nsl, gethostbyname, [
          LIBS="-lnsl $LIBS"
        ], [])
      fi
      if echo $LIBS|grep -- -lm >&5 2>&5; then
        :
      else
        AC_CHECK_LIB(m, floor, [
          LIBS="-lm $LIBS"
        ], [])
      fi

      AC_CHECK_LIB(odbc, SQLConnect, [
        LIBS="-lodbc $LIBS"
        pike_cv_odbc=yes;
      ], [])
    else
      :
    fi

  fi

  if test x$pike_cv_odbc = xno; then
    # Restore variables, so we don't link with unnecessary libs

    LIBS=$OLD_LIBS
    CPPFLAGS=$OLD_CPPFLAGS
    LDFLAGS=$OLD_LDFLAGS
  else
    AC_DEFINE(HAVE_ODBC)

    cat <<EOF

ODBC support enabled.

NOTE:
On most systems you need to configure the files
odbc.ini and odbcinst.ini to reflect your installation
(check the manual for your ODBC library).
You may also need to set LD_LIBRARY_PATH (or equivalent)
so that libodbc.so finds the appropriate files.

EOF

  fi
 fi
else
  :
fi

AC_OUTPUT(Makefile,echo FOO >stamp-h )
