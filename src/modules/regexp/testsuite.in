// - Here we try the regexp module
test_true(programp((program)"/precompiled/regexp"))
test_any(object o; o=clone((program)"/precompiled/regexp"); destruct(o); return 1,1)

// regexp->create
test_any(object o; o=clone((program)"/precompiled/regexp","^.*$"); destruct(o); return 1,1)

// regexp->match
test_eq(clone((program)"/precompiled/regexp","^.*$")->match(""),1)
test_eq(clone((program)"/precompiled/regexp","^.*$")->match("a"),1)
test_eq(clone((program)"/precompiled/regexp","^.*$")->match("-"),1)
test_eq(clone((program)"/precompiled/regexp","^$")->match(""),1)
test_eq(clone((program)"/precompiled/regexp","^.$")->match("a"),1)
test_eq(clone((program)"/precompiled/regexp","^.$")->match("-"),1)
test_eq(clone((program)"/precompiled/regexp","^[abc]$")->match("-"),0)
test_eq(clone((program)"/precompiled/regexp","^[abc]$")->match("a"),1)
test_eq(clone((program)"/precompiled/regexp","^[abc]$")->match("c"),1)
test_eq(clone((program)"/precompiled/regexp","^[^abc]$")->match("-"),1)
test_eq(clone((program)"/precompiled/regexp","^[^abc]$")->match("a"),0)
test_eq(clone((program)"/precompiled/regexp","^[^abc]$")->match("c"),0)
test_eq(clone((program)"/precompiled/regexp","^a*$")->match("aaaa"),1)
test_eq(clone((program)"/precompiled/regexp","^(a|bb)*$")->match("aabbabb"),1)
test_eq(clone((program)"/precompiled/regexp","^(a|bb)*$")->match(""),1)
test_eq(clone((program)"/precompiled/regexp","^(a|bb)+$")->match(""),0)
test_eq(clone((program)"/precompiled/regexp","^(a|bb)+$")->match("aaa"),1)
test_eq(clone((program)"/precompiled/regexp","^(a|bb)+$")->match("bbb"),0)
test_eq(clone((program)"/precompiled/regexp","^(a|bb)+$")->match("bbaabba"),1)
test_eq(clone((program)"/precompiled/regexp","^a|b$")->match("a"),1)
test_eq(clone((program)"/precompiled/regexp","^a|b$")->match("b"),1)

// regexp->split
test_equal(clone((program)"/precompiled/regexp","^(a*)[^a]*$")->split("aaabbb"),({"aaa"}))

