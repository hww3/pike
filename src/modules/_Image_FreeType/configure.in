AC_INIT(freetype.c)
AC_CONFIG_HEADER(config.h)
AC_ARG_WITH(freetype,     [  --with(out)-freetype       Support Freetype via Freetype 2 (Image.FreeType)],[],[with_freetype=yes])

AC_MODULE_INIT()

PIKE_FEATURE_WITHOUT(Image.FreeType)

if test "x$with_freetype" = "xyes" ; then

  PIKE_FEATURE_NODEP(Image.FreeType)

  MY_AC_PATH_PROG(FT_CONFIG, freetype-config, no)

  if test "$FT_CONFIG" = "no" ; then
     :
  else
    OLDCPPFLAGS="$CPPFLAGS"
    OLDLIBS="$LIBS"
    CPPFLAGS="`$FT_CONFIG --cflags` $CPPFLAGS"
    LIBS="`$FT_CONFIG --libs` $LIBS"
    AC_MSG_CHECKING(if freetype actually works)
    AC_TRY_LINK([
#include <freetype/freetype.h> 
], 
[
  FT_Library library;
  FT_Init_FreeType( &library );
], 
[ft_ok=yes], 
[ft_ok=no])
    if test yes = "$ft_ok" ; then
      AC_MSG_RESULT(yes)
      AC_DEFINE(HAVE_LIBFT2)
      PIKE_FEATURE_OK(Image.FreeType)
    else
      AC_MSG_RESULT(no)
      CPPFLAGS="$OLDCPPFLAGS"
      LIBS="$OLDLIBS"
    fi
  fi
fi

AC_OUTPUT(Makefile,echo FOO >stamp-h )
