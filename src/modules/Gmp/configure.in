# $Id: configure.in,v 1.13 2000/07/05 17:35:31 grubba Exp $
AC_INIT(mpz_glue.c)
AC_CONFIG_HEADER(gmp_machine.h)
AC_ARG_WITH(gmp,     [  --with(out)-gmp        Support bignums],[],[with_gmp=yes])
AC_ARG_WITH(bignums, [  --with(out)-bignums    Support automatic bignum conversion],[],[with_bignums=yes])

AC_MODULE_INIT()

#############################################################################
# Copied from ../../configure.in

AC_MSG_CHECKING(how to concatenate two symbols)
AC_CACHE_VAL(pike_cv_cpp_symbol_concat, [
  AC_TRY_COMPILE([
int AABB=0;
#define CONCAT(X,Y)	X##Y
  ], [
    return CONCAT(AA,BB);
  ], pike_cv_cpp_symbol_concat=ANSI, [
    AC_TRY_COMPILE([
int AABB=0;
#define CONCAT(X,Y)	X/**/Y
    ], [
      return CONCAT(AA,BB);
    ], pike_cv_cpp_symbol_concat=KR, [
      pike_cv_cpp_symbol_concat=Unknown
    ])
  ])
])
AC_MSG_RESULT($pike_cv_cpp_symbol_concat)
case "$pike_cv_cpp_symbol_concat" in
  "ANSI")
    AC_DEFINE(HAVE_ANSI_CONCAT)
  ;;
  "KR")
    AC_DEFINE(HAVE_KR_CONCAT)
  ;;
esac

#############################################################################

define([AC_CHECK_GMP],
[
  done=no
  AC_CHECK_HEADERS($2,[

    AC_MSG_CHECKING(working $1)
    AC_CACHE_VAL(pike_cv_working_$1,[
      OLDLIBS="${LIBS-}"
      LIBS="${LIBS-} -l$1"
      AC_TRY_RUN([
#include <stdio.h>

#ifdef HAVE_ANSI_CONCAT
#define __MPN(x) __mpn_##x
#else
#define __MPN(x) __mpn_/**/x
#endif

#include <$2>
int main(int argc, char **argv)
{
 mpz_t tmp,tmp2;
 char buffer[1000];
 mpz_init(tmp);
 mpz_init(tmp2);
 mpz_set_ui(tmp ,1000000000);
 mpz_set_ui(tmp2,1000000000);
 mpz_mul(tmp,tmp,tmp2);
 mpz_mul(tmp,tmp,tmp2);
 mpz_mul(tmp,tmp,tmp2);
 fprintf(stderr,"FNORD: %d\n",mpz_sizeinbase(tmp,10));
  exit( mpz_sizeinbase(tmp,10) !=  9*4+1 );
}

      ],pike_cv_working_$1=yes,pike_cv_working_$1=no,
        AC_TRY_LINK([
#include <stdio.h>

#ifdef HAVE_ANSI_CONCAT
#define __MPN(x) __mpn_##x
#else
#define __MPN(x) __mpn_/**/x
#endif

#include <$2>

        ],[
   	  mpz_t tmp,tmp2;
   	  char buffer[1000];
   	  mpz_init(tmp);
   	  mpz_init(tmp2);
   	  mpz_set_ui(tmp ,1000000000);
   	  mpz_set_ui(tmp2,1000000000);
   	  mpz_mul(tmp,tmp,tmp2);
   	  mpz_mul(tmp,tmp,tmp2);
   	  mpz_mul(tmp,tmp,tmp2);
   	  fprintf(stderr,"FNORD: %d\n",mpz_sizeinbase(tmp,10));
  	  exit( mpz_sizeinbase(tmp,10) !=  9*4+1 );
        ],pike_cv_working_$1=yes,pike_cv_working_$1=no)
      )
    ])
    LIBS="$OLDLIBS"
    if test "x$pike_cv_working_$1" = xyes; then
      AC_MSG_RESULT(yes)
      AC_DEFINE(translit(HAVE_LIB$1,[a-z],[A-Z]))
      LIBS="${LIBS-} -l$1"
      done=yes
    else
      AC_MSG_RESULT(no)
    fi
  ])

  if test $done = no; then
    $3
    :
  fi
])

if test x$with_gmp = xyes ; then
  AC_CHECK_GMP(gmp2,gmp2/gmp.h,[
    AC_CHECK_GMP(gmp,gmp.h,[
      if test "x$with_bignums" = xyes ; then
        AC_MSG_ERROR([Cannot compile --with-bignums without the GMP library
It is highly recommended that you install a working GMP
library on your system as that will add features to Pike
required by many applications.  (Such as Roxen) However,
if you know that you do not need GMP, you may re-run configure
with the option --without-bignums instead.
])
      fi
    ])
  ])
  AC_CHECK_FUNC(__gmpz_popcount, AC_DEFINE_UNQUOTED(HAVE_MPZ_POPCOUNT))
fi

AC_OUTPUT(Makefile,echo FOO >stamp-h )


