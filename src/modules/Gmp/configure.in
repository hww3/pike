# $Id: configure.in,v 1.36 2003/03/28 17:57:02 mast Exp $
AC_INIT(mpz_glue.c)
AC_CONFIG_HEADER(gmp_machine.h)
AC_ARG_WITH(gmp,     [  --with(out)-gmp        Support bignums],[],[with_gmp=yes])
AC_ARG_WITH(bignums, [  --with(out)-bignums    Support automatic bignum conversion],[],[with_bignums=yes])

AC_MODULE_INIT()

#############################################################################
# Copied from ../../configure.in

AC_MSG_CHECKING(how to concatenate two symbols)
AC_CACHE_VAL(pike_cv_cpp_symbol_concat, [
  AC_TRY_COMPILE([
int AABB=0;
#define CONCAT(X,Y)	X##Y
  ], [
    return CONCAT(AA,BB);
  ], pike_cv_cpp_symbol_concat=ANSI, [
    AC_TRY_COMPILE([
int AABB=0;
#define CONCAT(X,Y)	X/**/Y
    ], [
      return CONCAT(AA,BB);
    ], pike_cv_cpp_symbol_concat=KR, [
      pike_cv_cpp_symbol_concat=Unknown
    ])
  ])
])
AC_MSG_RESULT($pike_cv_cpp_symbol_concat)
case "$pike_cv_cpp_symbol_concat" in
  "ANSI")
    AC_DEFINE(HAVE_ANSI_CONCAT)
  ;;
  "KR")
    AC_DEFINE(HAVE_KR_CONCAT)
  ;;
esac

#############################################################################

define([AC_CHECK_GMP],
[
  done=no
  ORIG_CHECK_HEADERS($2,[

    # This test is needed since the __MPN macro
    # is broken on many versions of gmp, since
    # many ANSI compilers only define __STDC__
    # in strict ansi mode. Some of the affected
    # compilers also don't allow redefining
    # __STDC__.
    AC_MSG_CHECKING(prefix for __MPN in $2)
    define(PIKE_PREFIX_NAME,[pike_cv_$1___MPN_prefix])
    AC_CACHE_VAL(PIKE_PREFIX_NAME, [
      AC_EGREP_CPP([__gmpn_.*PiKe], [
#include <$2>
__MPN(PiKe)
      ], [
        PIKE_PREFIX_NAME="__gmpn_"
      ], [
        AC_EGREP_CPP([__mpn_.*PiKe], [
#include <$2>
__MPN(PiKe)
        ], [
  	  PIKE_PREFIX_NAME="__mpn_"
  	], [
	  PIKE_PREFIX_NAME="no"
	])
      ])
    ])
    if test "x$PIKE_PREFIX_NAME" = "xno"; then
      AC_MSG_RESULT(warning -- prefix not found)
    else
      AC_MSG_RESULT($PIKE_PREFIX_NAME)
      AC_DEFINE_UNQUOTED(PIKE_MPN_PREFIX, $PIKE_PREFIX_NAME)
    fi

dnl 
dnl  Autoconf 2.52 seems to barf on this undefine for
dnl  some unknown reason. This file should work just
dnl  as well without it.
dnl
dnl    undefine(PIKE_PREFIX_NAME)

    AC_MSG_CHECKING(working <$2>)
    AC_CACHE_VAL(pike_cv_working_$1,[
      OLDLIBS="${LIBS-}"
      LIBS="${LIBS-} -l$1"
      AC_TRY_RUN([
#include <stdio.h>

/* Kludge for some compilers only defining __STDC__ in strict mode. */
#if !defined(__STDC__) && defined(HAVE_ANSI_CONCAT) && defined(PIKE_MPN_PREFIX)
#define PIKE_LOW_MPN_CONCAT(x,y)	x##y
#define PIKE_MPN_CONCAT(x,y)	PIKE_LOW_MPN_CONCAT(x,y)
#define __MPN(x)	PIKE_MPN_CONCAT(PIKE_MPN_PREFIX,x)
#endif /* !__STDC__ && HAVE_ANSI_CONCAT && PIKE_MPN_PREFIX */

#include <$2>
int main(int argc, char **argv)
{
 mpz_t tmp,tmp2;
 char buffer[1000];
 mpz_init(tmp);
 mpz_init(tmp2);
 mpz_set_ui(tmp ,1000000000);
 mpz_set_ui(tmp2,1000000000);
 mpz_mul(tmp,tmp,tmp2);
 mpz_mul(tmp,tmp,tmp2);
 mpz_mul(tmp,tmp,tmp2);
 /* fprintf(stderr,"FNORD: %d\n",mpz_sizeinbase(tmp,10)); */
  exit( mpz_sizeinbase(tmp,10) !=  9*4+1 );
}

      ],pike_cv_working_$1=yes,pike_cv_working_$1=no,
        AC_TRY_LINK([
#include <stdio.h>

/* Kludge for some compilers only defining __STDC__ in strict mode. */
#if !defined(__STDC__) && defined(HAVE_ANSI_CONCAT) && defined(PIKE_MPN_PREFIX)
#define PIKE_LOW_MPN_CONCAT(x,y)	x##y
#define PIKE_MPN_CONCAT(x,y)	PIKE_LOW_MPN_CONCAT(x,y)
#define __MPN(x)	PIKE_MPN_CONCAT(PIKE_MPN_PREFIX,x)
#endif /* !__STDC__ && HAVE_ANSI_CONCAT && PIKE_MPN_PREFIX */

#include <$2>

        ],[
   	  mpz_t tmp,tmp2;
   	  char buffer[1000];
   	  mpz_init(tmp);
   	  mpz_init(tmp2);
   	  mpz_set_ui(tmp ,1000000000);
   	  mpz_set_ui(tmp2,1000000000);
   	  mpz_mul(tmp,tmp,tmp2);
   	  mpz_mul(tmp,tmp,tmp2);
   	  mpz_mul(tmp,tmp,tmp2);
   	  /* fprintf(stderr,"FNORD: %d\n",mpz_sizeinbase(tmp,10)); */
  	  exit( mpz_sizeinbase(tmp,10) !=  9*4+1 );
        ],pike_cv_working_$1=yes,pike_cv_working_$1=no)
      )
    ])
    LIBS="$OLDLIBS"
    if test "x$pike_cv_working_$1" = xyes; then
      AC_MSG_RESULT(yes)
      LIBS="${LIBS-} -l$1"

      AC_MSG_CHECKING([gmp version])
dnl figure out version; not necessary, but pretty
      rm config.gmpversion 2>/dev/null
      AC_TRY_RUN([
#include <gmp.h>
#include <stdio.h>

int main()
{
   FILE *ver=fopen("config.gmpversion","w+");
   fprintf(ver,"%s\n",gmp_version);
   return 0;
}],[],[],[])
      if test -f config.gmpversion; then
         AC_MSG_RESULT(`cat config.gmpversion`)
         PIKE_FEATURE([Gmp (bignums)],[yes (version `cat config.gmpversion`, using lib$1)])
      else
         AC_MSG_RESULT(unknown)
         PIKE_FEATURE([Gmp (bignums)],[yes (using lib$1)])
      fi
      AC_DEFINE(translit(HAVE_LIB$1,[a-z],[A-Z]))
      done=yes
    else
      AC_MSG_RESULT(no)
    fi
  ])

  if test "x$done" = "xno"; then
    $3
    :
  fi
])

define(CHECK_GMP_FUNC,
[
  AC_MSG_CHECKING([for $1])
  AC_CACHE_VAL([pike_cv_have_gmp_$1], [
    AC_TRY_LINK([
/* Kludge for some compilers only defining __STDC__ in strict mode,
 * which leads to <gmp.h> using the wrong token concat method.
 */
#if !defined(__STDC__) && defined(HAVE_ANSI_CONCAT) && defined(PIKE_MPN_PREFIX)
#define PIKE_LOW_MPN_CONCAT(x,y)	x##y
#define PIKE_MPN_CONCAT(x,y)	PIKE_LOW_MPN_CONCAT(x,y)
#define __MPN(x)	PIKE_MPN_CONCAT(PIKE_MPN_PREFIX,x)
#endif /* !__STDC__ && HAVE_ANSI_CONCAT && PIKE_MPN_PREFIX */

#ifdef HAVE_GMP2_GMP_H
#include <gmp2/gmp.h>
#elif defined (HAVE_GMP_H)
#include <gmp.h>
#endif
      ], [$2], [pike_cv_have_gmp_$1=yes], [pike_cv_have_gmp_$1=no])
  ])
  AC_MSG_RESULT([$pike_cv_have_gmp_$1])
  if test x"$pike_cv_have_gmp_$1" = xyes; then
    AC_DEFINE(HAVE_[]translit($1,[a-z],[A-Z]))
  fi
])

PIKE_FEATURE_WITHOUT([Gmp (bignums)])

if test x$with_gmp = xyes ; then
  PIKE_FEATURE_NODEP([Gmp (bignums)])
  AC_CHECK_GMP(gmp2,gmp2/gmp.h,[
    AC_CHECK_GMP(gmp,gmp.h,[
      if test "x$with_bignums" = xyes ; then
        AC_MSG_ERROR([Cannot compile --with-bignums without the GMP library
It is highly recommended that you install a working GMP
library on your system as that will add features to Pike
required by many applications.  (Such as Roxen) However,
if you know that you do not need GMP, you may re-run configure
with the option --without-bignums instead.
])
      fi
    ])
  ])
  CHECK_GMP_FUNC(mpz_popcount, [mpz_t a; mpz_popcount(a)])
  CHECK_GMP_FUNC(mpz_xor, [mpz_t a, b, c; mpz_xor(a, b, c)])
  CHECK_GMP_FUNC(mpz_getlimbn, [mpz_t a; mp_size_t b; mpz_getlimbn(a, b)])
  CHECK_GMP_FUNC(mpz_import, [mpz_t a; mpz_import(a, 1, 1, 1, 0, 0, 0)])

  AC_MSG_CHECKING([size of mp_limb_t])
  AC_CACHE_VAL([pike_cv_sizeof_mp_limb_t], [
    rm -f confdefs.out.2 2>/dev/null
    AC_TRY_RUN([
/* Kludge for some compilers only defining __STDC__ in strict mode,
 * which leads to <gmp.h> using the wrong token concat method.
 */
#if !defined(__STDC__) && defined(HAVE_ANSI_CONCAT) && defined(PIKE_MPN_PREFIX)
#define PIKE_LOW_MPN_CONCAT(x,y)	x##y
#define PIKE_MPN_CONCAT(x,y)	PIKE_LOW_MPN_CONCAT(x,y)
#define __MPN(x)	PIKE_MPN_CONCAT(PIKE_MPN_PREFIX,x)
#endif /* !__STDC__ && HAVE_ANSI_CONCAT && PIKE_MPN_PREFIX */

#ifdef HAVE_GMP2_GMP_H
#include <gmp2/gmp.h>
#elif defined (HAVE_GMP_H)
#include <gmp.h>
#endif

#include <stdio.h>

int main()
{
  FILE *f = fopen ("confdefs.out.2", "w");
  if (!f) return 1;
  fprintf (f, "%d", sizeof (mp_limb_t));
  fclose (f);
  return 0;
}],
      [pike_cv_sizeof_mp_limb_t=`cat confdefs.out.2`
       rm -f confdefs.out.2 2>/dev/null],
      [pike_cv_sizeof_mp_limb_t=0],
      [pike_cv_sizeof_mp_limb_t=0])
  ])
  AC_MSG_RESULT([$pike_cv_sizeof_mp_limb_t])
  AC_DEFINE_UNQUOTED(SIZEOF_MP_LIMB_T, $pike_cv_sizeof_mp_limb_t)
fi

AC_OUTPUT(Makefile,echo FOO >stamp-h )
