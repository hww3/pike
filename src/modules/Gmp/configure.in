# $Id: configure.in,v 1.27 2001/08/29 16:19:32 mast Exp $
AC_INIT(mpz_glue.c)
AC_CONFIG_HEADER(gmp_machine.h)
AC_ARG_WITH(gmp,     [  --with(out)-gmp        Support bignums],[],[with_gmp=yes])
AC_ARG_WITH(bignums, [  --with(out)-bignums    Support automatic bignum conversion],[],[with_bignums=yes])

AC_MODULE_INIT()

# Check if we're cross-compiling.

CROSS="$ac_cv_prog_cc_cross"
# newer autoconf
if test x"$CROSS" = x; then
   CROSS="$cross_compiling"
fi
AC_SUBST(CROSS)

#############################################################################
# Copied from ../../configure.in

AC_MSG_CHECKING(how to concatenate two symbols)
AC_CACHE_VAL(pike_cv_cpp_symbol_concat, [
  AC_TRY_COMPILE([
int AABB=0;
#define CONCAT(X,Y)	X##Y
  ], [
    return CONCAT(AA,BB);
  ], pike_cv_cpp_symbol_concat=ANSI, [
    AC_TRY_COMPILE([
int AABB=0;
#define CONCAT(X,Y)	X/**/Y
    ], [
      return CONCAT(AA,BB);
    ], pike_cv_cpp_symbol_concat=KR, [
      pike_cv_cpp_symbol_concat=Unknown
    ])
  ])
])
AC_MSG_RESULT($pike_cv_cpp_symbol_concat)
case "$pike_cv_cpp_symbol_concat" in
  "ANSI")
    AC_DEFINE(HAVE_ANSI_CONCAT)
  ;;
  "KR")
    AC_DEFINE(HAVE_KR_CONCAT)
  ;;
esac

#############################################################################

define([AC_CHECK_GMP],
[
  done=no
  ORIG_CHECK_HEADERS($2,[

    # This test is needed since the __MPN macro
    # is broken on many versions of gmp, since
    # many ANSI compilers only define __STDC__
    # in strict ansi mode. Some of the affected
    # compilers also don't allow redefining
    # __STDC__.
    AC_MSG_CHECKING(prefix for __MPN in $2)
    define(PIKE_PREFIX_NAME,[pike_cv_$1___MPN_prefix])
    AC_CACHE_VAL(PIKE_PREFIX_NAME, [
      AC_EGREP_CPP([__gmpn_.*PiKe], [
#include <$2>
__MPN(PiKe)
      ], [
        PIKE_PREFIX_NAME="__gmpn_"
      ], [
        AC_EGREP_CPP([__mpn_.*PiKe], [
#include <$2>
__MPN(PiKe)
        ], [
  	  PIKE_PREFIX_NAME="__mpn_"
  	], [
	  PIKE_PREFIX_NAME="no"
	])
      ])
    ])
    if test "x$PIKE_PREFIX_NAME" = "xno"; then
      AC_MSG_RESULT(warning -- prefix not found)
    else
      AC_MSG_RESULT($PIKE_PREFIX_NAME)
      AC_DEFINE_UNQUOTED(PIKE_MPN_PREFIX, $PIKE_PREFIX_NAME)
    fi
    undefine(PIKE_PREFIX_NAME)

    AC_MSG_CHECKING(working <$2>)
    AC_CACHE_VAL(pike_cv_working_$1,[
      OLDLIBS="${LIBS-}"
      LIBS="${LIBS-} -l$1"
      AC_TRY_RUN([
#include <stdio.h>

/* Kludge for some compilers only defining __STDC__ in strict mode. */
#if !defined(__STDC__) && defined(HAVE_ANSI_CONCAT) && defined(PIKE_MPN_PREFIX)
#define PIKE_LOW_MPN_CONCAT(x,y)	x##y
#define PIKE_MPN_CONCAT(x,y)	PIKE_LOW_MPN_CONCAT(x,y)
#define __MPN(x)	PIKE_MPN_CONCAT(PIKE_MPN_PREFIX,x)
#endif /* !__STDC__ && HAVE_ANSI_CONCAT && PIKE_MPN_PREFIX */

#include <$2>
int main(int argc, char **argv)
{
 mpz_t tmp,tmp2;
 char buffer[1000];
 mpz_init(tmp);
 mpz_init(tmp2);
 mpz_set_ui(tmp ,1000000000);
 mpz_set_ui(tmp2,1000000000);
 mpz_mul(tmp,tmp,tmp2);
 mpz_mul(tmp,tmp,tmp2);
 mpz_mul(tmp,tmp,tmp2);
 /* fprintf(stderr,"FNORD: %d\n",mpz_sizeinbase(tmp,10)); */
  exit( mpz_sizeinbase(tmp,10) !=  9*4+1 );
}

      ],pike_cv_working_$1=yes,pike_cv_working_$1=no,
        AC_TRY_LINK([
#include <stdio.h>

/* Kludge for some compilers only defining __STDC__ in strict mode. */
#if !defined(__STDC__) && defined(HAVE_ANSI_CONCAT) && defined(PIKE_MPN_PREFIX)
#define PIKE_LOW_MPN_CONCAT(x,y)	x##y
#define PIKE_MPN_CONCAT(x,y)	PIKE_LOW_MPN_CONCAT(x,y)
#define __MPN(x)	PIKE_MPN_CONCAT(PIKE_MPN_PREFIX,x)
#endif /* !__STDC__ && HAVE_ANSI_CONCAT && PIKE_MPN_PREFIX */

#include <$2>

        ],[
   	  mpz_t tmp,tmp2;
   	  char buffer[1000];
   	  mpz_init(tmp);
   	  mpz_init(tmp2);
   	  mpz_set_ui(tmp ,1000000000);
   	  mpz_set_ui(tmp2,1000000000);
   	  mpz_mul(tmp,tmp,tmp2);
   	  mpz_mul(tmp,tmp,tmp2);
   	  mpz_mul(tmp,tmp,tmp2);
   	  /* fprintf(stderr,"FNORD: %d\n",mpz_sizeinbase(tmp,10)); */
  	  exit( mpz_sizeinbase(tmp,10) !=  9*4+1 );
        ],pike_cv_working_$1=yes,pike_cv_working_$1=no)
      )
    ])
    LIBS="$OLDLIBS"
    if test "x$pike_cv_working_$1" = xyes; then
      PIKE_FEATURE_OK([Gmp (bignums)])
      AC_MSG_RESULT(yes)
      AC_DEFINE(translit(HAVE_LIB$1,[a-z],[A-Z]))
      LIBS="${LIBS-} -l$1"
      done=yes
    else
      AC_MSG_RESULT(no)
    fi
  ])

  if test "x$done" = "xno"; then
    $3
    :
  fi
])

PIKE_FEATURE_WITHOUT([Gmp (bignums)])

if test x$with_gmp = xyes -a "x$enable_binary" != "xno" ; then
  PIKE_FEATURE_NODEP([Gmp (bignums)])
  AC_CHECK_GMP(gmp2,gmp2/gmp.h,[
    AC_CHECK_GMP(gmp,gmp.h,[
      if test "x$with_bignums" = xyes ; then
        AC_MSG_ERROR([Cannot compile --with-bignums without the GMP library
It is highly recommended that you install a working GMP
library on your system as that will add features to Pike
required by many applications.  (Such as Roxen) However,
if you know that you do not need GMP, you may re-run configure
with the option --without-bignums instead.
])
      fi
    ])
  ])
  AC_CHECK_FUNC(__gmpz_popcount, AC_DEFINE_UNQUOTED(HAVE_MPZ_POPCOUNT))
fi

AC_MSG_CHECKING(if INT_TYPE is bigger then signed long int)

AC_CACHE_VAL(pike_cv_big_pike_int, [

  AC_TRY_RUN([
  #include "global.h"
  
  int main()
  {
     return !(sizeof(INT_TYPE)<=sizeof(signed long int));
  }],[
    pike_cv_big_pike_int=no
  ],[
    AC_TRY_RUN([
    #include "global.h"
    
    int main()
    {
       return !(sizeof(INT_TYPE)>sizeof(signed long int));
    }],[
      pike_cv_big_pike_int=yes
    ],[
      :
    ],[
      :
    ])
  ], [
    # FIXME: Add proper test.
    :
  ])
])
  
if test "x$pike_cv_big_pike_int" = "xyes"; then
  AC_DEFINE(BIG_PIKE_INT)
  AC_MSG_RESULT(yes)
else
  if test "x$pike_cv_big_pike_int" = "xno"; then
    AC_MSG_RESULT(no)
  else
    AC_MSG_RESULT(unknown)
  fi
fi  
AC_OUTPUT(Makefile,echo FOO >stamp-h )


