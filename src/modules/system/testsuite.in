// $Id: testsuite.in,v 1.6 1998/07/18 17:47:36 grubba Exp $


// system.c:

// RegGetValue		__NT__
// cp			__NT__
// chmod
// chown		HAVE_CHOWN
// chroot		HAVE_CHROOT
// cleargroups		HAVE_SETGROUPS
// getegid		HAVE_GETEUID
ifefun(getegid, [[ test_true(intp(getegid())) ]])
// geteuid		HAVE_GETEUID
ifefun(geteuid, [[ test_true(intp(geteuid())) ]])
// getgid		HAVE_GETGID
ifefun(getgid, [[ test_true(intp(getgid())) ]])
// getgroups		HAVE_GETGROUPS
ifefun(getgroups, [[ test_true(arrayp(getgroups())) ]])
// gethostbyaddr	GETHOST_DECLARE
// gethostbyname	GETHOST_DECLARE
// gethostname		HAVE_GETHOSTNAME || HAVE_UNAME
ifefun(gethostname, [[ test_true(stringp(gethostname())) ]])
// getpgrp		HAVE_GETPGRP
ifefun(getpgrp, [[ test_true(intp(getpgrp())) ]])
// getpid
test_true(intp(getpid()))
// getppid		HAVE_GETPPID
ifefun(getppid, [[ test_true(intp(getppid())) ]])
// getuid		HAVE_GETUID
ifefun(getuid, [[ test_true(intp(getuid())) ]])
// hardlink		HAVE_LINK
// initgroups		HAVE_INITGROUPS
// readlink		HAVE_READLINK
// setegid		HAVE_SETEGID || HAVE_SETRESGID
// seteuid		HAVE_SETEUID || HAVE_SETRESUID
// setgid		HAVE_SETGID
// setgroups		HAVE_SETGROUPS
// setuid		HAVE_SETUID
// symlink		HAVE_SYMLINK
// uname		HAVE_UNAME


// passwords.c:

// endgrent		HAVE_ENDGRENT
// endpwent		HAVE_ENDPWENT
// get_all_groups	HAVE_GETGRENT
ifefun(get_all_groups, [[
  test_any([[
    array a = get_all_groups();
    if (!arrayp(a)) {
      return(sprintf("a is %t", a));
    }
    foreach(a, array b) {
      if (!arrayp(b)) {
	return(sprintf("b is %t", b));
      }
      if (sizeof(b) != 4) {
	return(sprintf("b has bad size %d", sizeof(b)));
      }
      if (!stringp(b[0]) || !stringp(b[1]) || !intp(b[2]) || !arrayp(b[3])) {
	return(sprintf("b has bad contents: %O", b));
      }
    }
    return 0;
  ]], 0)
]])
// get_all_users	HAVE_GETPWENT
ifefun(get_all_users, [[
  test_any([[
    array a = get_all_users();
    if (!arrayp(a)) {
      return(sprintf("a is %t", a));
    }
    foreach(a, array b) {
      if (!arrayp(b)) {
	return(sprintf("b is %t", b));
      }
      if (sizeof(b) != 7) {
	return(sprintf("b has bad size %d", sizeof(b)));
      }
      if (!stringp(b[0]) || !stringp(b[1]) || !intp(b[2]) || !intp(b[3]) ||
	  !stringp(b[4]) || !stringp(b[5]) || !stringp(b[6])) {
	return(sprintf("b has bad contents: %O", b));
      }
    }
    return 0;
  ]], 0)
]])
// get_groups_for_user	HAVE_GETPWENT
ifefun(get_groups_for_user, [[
  test_true(arrayp(get_groups_for_user(0)||({})))
]])
// getgrent		HAVE_GETGRENT
// getgrgid		HAVE_GETGRGID
// getgrnam		HAVE_GETGRNAM
// getpwent		HAVE_GETPWENT
// getpwnam		HAVE_GETPWNAM
// getpwuid		HAVE_GETPWUID
ifefun(getpwuid, [[
  test_any([[
    array b = getpwuid(0);
    if (b) {
      if (!arrayp(b)) {
	return(sprintf("b is %t", b));
      }
      if (!stringp(b[0]) || !stringp(b[1]) || !intp(b[2]) || !intp(b[3]) ||
	  !stringp(b[4]) || !stringp(b[5]) || !stringp(b[6])) {
	return(sprintf("b has bad contents: %O", b));
      }
    }
    return 0;
  ]], 0)
]])
cond([[ all_constants()->getpwuid && all_constants()->getpwnam && getpwuid(0) ]], [[
  test_equal([[ getpwnam(getpwuid(0)[0]) ]], [[ getpwuid(0) ]])
]])
// setgrent		HAVE_SETGRENT
// setpwent		HAVE_SETPWENT


// syslog.c:

// closelog		HAVE_SYSLOG
// openlog		HAVE_SYSLOG
// syslog		HAVE_SYSLOG
