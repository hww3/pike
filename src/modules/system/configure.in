# $Id: configure.in,v 1.32 1999/10/27 14:38:08 grubba Exp $
AC_INIT(system.c)
AC_CONFIG_HEADER(system_machine.h)

AC_MODULE_INIT()

AC_CHECK_LIB(bind, __inet_ntoa)
AC_CHECK_LIB(socket, socket)
AC_CHECK_LIB(nsl, gethostbyname)

AC_HAVE_HEADERS(syslog.h sys/syslog.h sys/types.h errno.h unistd.h pwd.h \
	sys/conf.h sys/socket.h netinet/in.h arpa/inet.h netdb.h stdarg.h \
	sys/utsname.h pwd.h passwd.h shadow.h grp.h sys/stat.h winsock.h \
        sys/systeminfo.h windows.h sys/param.h)

AC_HAVE_FUNCS(syslog link symlink readlink resolvepath chown \
	initgroups setgroups getgroups seteuid setresuid setegid setresgid \
        geteuid getpgrp getpgid getppid getuid getgid setuid setgid \
	getpwnam getspnam getgrnam getpwuid getgrgid \
	getgrent setgrent endgrent getpwent setpwent endpwent \
	chroot fchroot uname sysinfo gethostname gethostbyname \
        getgrnam_r getgrent_r getgrgid_r \
        getpwnam_r getpwent_r getpwuid_r \
        getspnam_r innetgr)


AC_CHECK_LIB(nsl, gethostbyname)

AC_MSG_CHECKING(for solaris style gethostbyname_r)

AC_CACHE_VAL(pike_cv_have_solaris_gethostbyname_r,
[
AC_TRY_LINK([
#define _REENTRANT
#define _THREAD_SAFE
#include <netdb.h>
],[
  char data[2000];
  int h_errno;
  struct hostent result,*bar;
  gethostbyname_r("foo",&result, data, sizeof(data), h_errno)->h_name;
],pike_cv_have_solaris_gethostbyname_r=yes,
pike_cv_have_solaris_gethostbyname_r=no)
])

AC_MSG_RESULT($pike_cv_have_solaris_gethostbyname_r)

if test $pike_cv_have_solaris_gethostbyname_r = yes; then
  AC_DEFINE(HAVE_SOLARIS_GETHOSTBYNAME_R)
fi


AC_MSG_CHECKING(for OSF1 style gethostbyname_r)

AC_CACHE_VAL(pike_cv_have_osf1_gethostbyname_r,
[
AC_TRY_LINK([
#define _REENTRANT
#define _THREAD_SAFE
#include <netdb.h>
],[
  int bar;
  struct hostent result;
  struct hostent_data data;
  bar=gethostbyname_r("foo",&result, &data);
],pike_cv_have_osf1_gethostbyname_r=yes,
pike_cv_have_osf1_gethostbyname_r=no)
])

AC_MSG_RESULT($pike_cv_have_osf1_gethostbyname_r)

if test $pike_cv_have_osf1_gethostbyname_r = yes; then
  AC_DEFINE(HAVE_OSF1_GETHOSTBYNAME_R)
fi

if test "$ac_cv_func_getspnam_r" = "yes"; then
  AC_MSG_CHECKING([if getspnam_r takes 4 (Solaris) or 5 (Linux) arguments])
  AC_CACHE_VAL(pike_cv_have_solaris_getspnam_r, [
    AC_TRY_LINK([
#define _REENTRANT
#define _THREAD_SAFE
#ifdef HAVE_PASSWD_H
# include <passwd.h>
# include <group.h>
#endif /* HAVE_PASSWD_H */

#ifdef HAVE_PWD_H
# include <pwd.h>
#endif /* HAVE_PWD_H */

#ifdef HAVE_GRP_H
# include <grp.h>
#endif /* HAVE_GRP_H */

#ifdef HAVE_SHADOW_H
# include <shadow.h>
#endif /* HAVE_SHADOW_H */
    ], [
      struct spwd sbuf;
      char buf[2048];
      char *foo = getspnam_r("root", &sbuf, buf, sizeof(buf))->sp_pwdp;
      return 0;
    ], [
      pike_cv_have_solaris_getspnam_r="yes"
    ], [
      pike_cv_have_solaris_getspnam_r="no"
    ])
  ])
  if test "$pike_cv_have_solaris_getspnam_r" = "yes"; then
    AC_MSG_RESULT([4 - Solaris])
    AC_DEFINE(HAVE_SOLARIS_GETSPNAM_R)
  else
    AC_MSG_RESULT([5 - Linux])
  fi
else :; fi

AC_MSG_CHECKING(for h_addr_list)
AC_CACHE_VAL(pike_cv_struct_has_h_addr_list,
[
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
],[
struct hostent foo;
foo.h_addr_list[0];
],pike_cv_struct_has_h_addr_list=yes,pike_cv_struct_has_h_addr_list=no)
])
 
if test "$pike_cv_struct_has_h_addr_list" = yes; then
  AC_MSG_RESULT(yes)
  AC_DEFINE(HAVE_H_ADDR_LIST)
else
  AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(for in_addr_t)
AC_CACHE_VAL(pike_cv_type_in_addr_t,
[
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
],[
  in_addr_t foo;
],pike_cv_type_in_addr_t=yes,pike_cv_type_in_addr_t=no)
])
 
if test "$pike_cv_type_in_addr_t" = yes; then
  AC_MSG_RESULT(yes)
  AC_DEFINE(HAVE_IN_ADDR_T)
else
  AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(whether struct passwd has the pw_gecos field)
AC_CACHE_VAL(pike_cv_struct_has_pw_gecos,
[
AC_TRY_COMPILE([
#ifdef HAVE_PASSWD_H
# include <passwd.h>
# include <group.h>
#endif /* HAVE_PASSWD_H */

#ifdef HAVE_PWD_H
# include <pwd.h>
#endif /* HAVE_PWD_H */

#ifdef HAVE_GRP_H
# include <grp.h>
#endif /* HAVE_GRP_H */

#ifdef HAVE_SHADOW_H
# include <shadow.h>
#endif /* HAVE_SHADOW_H */
], [
  static struct passwd ent;
  char *gecos;
  gecos = ent.pw_gecos;
], pike_cv_struct_has_pw_gecos=yes, pike_cv_struct_has_pw_gecos=no)
])

if test "$pike_cv_struct_has_pw_gecos" = yes; then
  AC_MSG_RESULT(yes)
  AC_DEFINE(HAVE_PW_GECOS)
else
  AC_MSG_RESULT(no)
fi

AC_OUTPUT(Makefile,echo FOO >stamp-h )


