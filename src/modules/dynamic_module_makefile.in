PREFLAGS=$(DEFINES) -I. -I$(SRCDIR) -I$(SRCDIR)/../.. -I../.. -I. $(MODULE_CPPFLAGS)
CFLAGS=$(PREFLAGS) $(OTHERFLAGS) @CCSHARED@ $(MODULE_CFLAGS)

MAKE_FLAGS = "prefix=$(prefix)" "exec_prefix=$(exec_prefix)" "CC=$(CC)" "OTHERFLAGS=$(OTHERFLAGS)" "TMP_BINDIR=$(TMP_BINDIR)" "DEFINES=$(DEFINES)" "TMP_LIBDIR=$(TMP_LIBDIR)" "RUNPIKE=$(RUNPIKE)" "INSTALL=$(INSTALL)"

all: module.@SO@ dummy

dummy:	$(DUMMY) linker_options modlist_headers modlist_segment
	tmp="$(INSTALL_NAME)" ; if test x$$tmp = x ; then tmp="$(MODNAME)"; fi ; $(INSTALL) module.so $(TMP_LIBDIR)/modules/$$tmp.so

linker_options: Makefile
	echo "$(LINKER_OPTIONS)" >linker_options

modlist_headers: Makefile
	echo "" >modlist_headers

modlist_segment: Makefile
	echo "" >modlist_segment

module.so: $(OBJS)
	$(TMP_BINDIR)/smartlink "@LDSHARED@" -o module.@SO@ $(OBJS) $(MODULE_LDFLAGS)
	if test @SO@ != so ; then mv module.@SO@ module.so ; fi

clean:
	-rm -f *.o *.a *.so module.so
	if test "$(MODULE_SUBDIRS)" != "" ; then for a in $(MODULE_SUBDIRS) ; do echo cleaing $$a ; ( cd $$a ; $(MAKE) $(MAKE_FLAGS) clean ) ; done ; fi


depend:
	gcc -MM $(PREFLAGS) $(SRCDIR)/*.c | $(TMP_BINDIR)/fixdepends.sh $(SRCDIR)
	if test "$(MODULE_SUBDIRS)" != "" ; then for a in $(MODULE_SUBDIRS) ; do echo making depend in $$a ; ( cd $$a ; $(MAKE) $(MAKE_FLAGS) clean ) ; done ; fi

#verify / debug
module_testsuite: $(SRCDIR)/testsuite.in
	$(TMP_BINDIR)/mktestsuite $(SRCDIR)/testsuite.in >module_testsuite -DSRCDIR=$(SRCDIR) 

verify: module_testsuite
	$(RUNPIKE) $(TMP_BINDIR)/test_pike.pike module_testsuite

verbose_verify: module_testsuite
	$(RUNPIKE) $(TMP_BINDIR)/test_pike.pike module_testsuite --verbose

gdb_verify: module_testsuite
	@echo >.gdbinit handle SIGUSR1 nostop noprint pass
	@echo >>.gdbinit run -DNOT_INSTALLED -M.. -m $(SRCDIR)/../../../lib/master.pike $(PIKEOPTS) $(SRCDIR)/../../../bin/test_pike.pike module_testsuite -v -v -f
	gdb ../../pike
	@rm .gdbinit


install:
	$(INSTALL) module.so @prefix@/lib/pike/modules/$(MODNAME).so
