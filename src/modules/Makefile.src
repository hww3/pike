@SET_MAKE@

MODULES=@subdirs@
MODULE_OBJS=@MODULE_OBJS@

MAKE_FLAGS = "prefix=$(prefix)" "exec_prefix=$(exec_prefix)" "CC=$(CC)" "OTHERFLAGS=$(OTHERFLAGS)" "TMP_BINDIR=$(TMP_BINDIR)" "TMP_LIBDIR=$(TMP_LIBDIR)" "RUNPIKE=$(RUNPIKE)" "DEFINES=$(DEFINES)"

all: modules

modules:
	for a in $(MODULES) ; do ( cd $$a ; $(MAKE) $(MAKE_FLAGS) ) ; done
	$(MAKE) linker_options lib_dirs

linker_options: $(MODULE_OBJS)
	( for a in $(MODULES) ; do echo modules/$$a/$$a.a ; \
	if test -f $$a/linker_options ; then cat $$a/linker_options ; else : ; fi ; \
	done ; ) >linker_options

lib_dirs: $(MODULE_OBJS)
	( ( if test -f master_lib_dirs; then cat master_lib_dirs; else :; fi; \
            for a in $(MODULES) ; do \
	      if test -f $$a/lib_dirs ; then cat $$a/lib_dirs ; else : ; fi ; \
	    done ; ) | sort | uniq | tr '\012' ':'; echo "" )| \
	sed -e 's/:$$//' -e 's/^/-R/' -e 's/^-R$$//' >lib_dirs

depend:
	for a in $(MODULES) ; do ( cd $$a ; ${MAKE} $(MAKE_FLAGS) depend ) ; done

clean:
	for a in $(MODULES) ; do ( cd $$a ; ${MAKE} $(MAKE_FLAGS) clean ) ; done

verify:
	for a in $(MODULES) ; do ( cd $$a ; echo verifying $$a ; ${MAKE} $(MAKE_FLAGS) verify ) ; done

verbose_verify:
	for a in $(MODULES) ; do ( cd $$a ; ${MAKE} $(MAKE_FLAGS) verbose_verify ) ; done
