# Makefile for builtin Pike libmird

# $Id: Makefile.in,v 1.6 2002/04/06 23:45:32 mast Exp $
SRCDIR=@srcdir@
VPATH=@srcdir@:@srcdir@/../../..:../../..

OBJS = blocks.o cells.o database.o debug.o dmalloc.o errors.o frags.o  \
	freelist.o hashtrie.o journal.o skeys.o tables.o transaction.o \
	usage.o

@SET_MAKE@
PIKE_SRC_DIR=@PIKE_SRC_DIR@
BUILD_BASE=@BUILD_BASE@

CC=@CC@
CPP=@CPP@
# AR=ar
RANLIB=@RANLIB@
REAL_LDFLAGS=@LDFLAGS@
REAL_CFLAGS=@CFLAGS@
REAL_CPPFLAGS=@CPPFLAGS@
MIRD_CFLAGS=@MIRD_CFLAGS@

PREFLAGS=-I. -I$(SRCDIR) $(MODULE_CPPFLAGS) $(DEFINES) 
CFLAGS=$(PREFLAGS) $(OTHERFLAGS) $(MODULE_CFLAGS) @CCSHARED@ 

all: libmird.a

.SUFFIXES: .c .o

# GCC dumps core on some files @ OSF1
# This kluge should work around that...
# FIXME: Make this a configure option
.c.o:
	@echo "Compiling $<" ;\
	if $(CC) $(CFLAGS) $(MIRD_CFLAGS) -c $< -o $@ ; then : ;\
	else \
	  echo "WARNING: Compiler failure! Trying without optimization!" >&2;\
	  echo "echo $(CC) $(PREFLAGS) $(NOOPTFLAGS) -c $< -o $@" >&2;\
	  NO_ULIMIT=yes $(CC) $(PREFLAGS) $(NOOPTFLAGS) -c $< -o $@ ;\
	fi

libmird.a : $(OBJS)
	rm -f libmird.a
	$(AR) cq libmird.a $(OBJS)
	$(RANLIB) libmird.a

depend:
	gcc -MM $(PREFLAGS) $(SRCDIR)/*.c | $(TMP_BINDIR)/fixdepends.sh $(SRCDIR)

clean:
	-rm -f *.o *.a *.so module.so

pike: all
	cd ../../..; $(MAKE)

pure: all
	cd ../../..; $(MAKE) pure

Makefile: $(SRCDIR)/Makefile.in $(SRCDIR)/dependencies config.status
	CONFIG_FILES=Makefile CONFIG_HEADERS="$(CONFIG_HEADERS)" ./config.status
	touch remake
	@echo "Run make again" >&2
	@exit 1

$(SRCDIR)/configure: $(SRCDIR)/configure.in $(PIKE_SRC_DIR)/aclocal.m4
	cd $(SRCDIR) && autoconf --localdir=$(PIKE_SRC_DIR)
	if [ -f $(SRCDIR)/acconfig.h ]; then \
	  cd $(SRCDIR) && autoheader; \
	else :; fi

config.status: $(SRCDIR)/configure
	CFLAGS="$(REAL_CFLAGS)" LDFLAGS="$(REAL_LDFLAGS)" CPPFLAGS="$(REAL_CPPFLAGS)" BUILDDIR="$(TMP_BUILDDIR)" BINDIR="$(TMP_BINDIR)" PIKE_SRC_DIR="$(PIKE_SRC_DIR)" BUILD_BASE="$(BUILD_BASE)" ./config.status --recheck

mird.h: $(SRCDIR)/mird.h.in config.status
	CONFIG_FILES=mird.h CONFIG_HEADERS="" ./config.status

config.h: $(SRCDIR)/config.h.in config.status
	CONFIG_FILES="" CONFIG_HEADERS=config.h ./config.status

@dependencies@
