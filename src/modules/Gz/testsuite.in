// $Id: testsuite.in,v 1.18 2004/02/04 14:34:53 nilsson Exp $

cond_resolv(Gz.deflate,
[[
  test_true(Gz.deflate())
  test_true(Gz.deflate()->deflate)
  test_true(Gz.inflate())
  test_true(Gz.inflate()->inflate)

define(dotest,[[
  test_do([[add_constant("____gz_tmp_constant",$1);]])
  test_true([[Gz.deflate(1)->deflate(____gz_tmp_constant)]])
  test_true([[Gz.inflate()->inflate(Gz.deflate(1)->deflate(____gz_tmp_constant))==____gz_tmp_constant]])
  test_true([[Gz.inflate()->inflate(Gz.deflate(9)->deflate(____gz_tmp_constant))==____gz_tmp_constant]])
  test_true([[object o=Gz.deflate(); Gz.inflate()->inflate(o->deflate(____gz_tmp_constant,o->PARTIAL_FLUSH) + o->deflate(____gz_tmp_constant,o->FINISH)) == (____gz_tmp_constant)+(____gz_tmp_constant)]])
  test_do([[add_constant("____gz_tmp_constant");]])
]])

  dotest("")
  dotest("foo")
  dotest(sprintf("%'fomp'1000n"))
  dotest(sprintf("%'fomp'100000n"))

  test_false(Process.system(RUNPIKE+" SRCDIR/flushtest.pike"))
  test_false(Process.system(RUNPIKE+" SRCDIR/buffertest.pike"))

  test_true(Gz.File)
  test_any([[
    string orig = ((string) Array.enumerate(256)) * 1024;
    object f = Gz.File("gz_test.gz", "wb");
    f->write(orig);
    f->close();
    f = Gz.File("gz_test.gz", "rb");
    rm("gz_test.gz");
    string readback = f->read();
    f->close();
    return orig==readback;
]], 1)

  dotest(random_string(32768))
  dotest(random_string(524288))
  dotest(random_string(8388500))
]])
