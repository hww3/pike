test_any([[# 1 "-"


#7 "testsuite.in.in"
object img1=Image.PNM.decode("P1\n5 5\n0 1 1 1 1\n1 0 1 1 1\n1 1 0 1 1\n1 1 1 0 1\n1 1 1 1 0");
object img2=Image.PNM.decode("P4\n5 5\nx¸Øèð");
if (img1!=img2) return ( "differ\n" );
return "ok";

]], "ok")
test_any([[# 1 "-"


#13 "testsuite.in.in"
if ("hejsan, hoppsan" != MIME.decode_base64("aGVqc2FuLCBob3Bwc2Fu\n"))
return ( "differ" );
return "ok";

]], "ok")
test_any([[# 1 "-"


#18 "testsuite.in.in"
object img1=Image.GIF.decode(MIME.decode_base64("R0lGODlhBQAFAIAAAAAAAP///ywAAAAABQAFAAACCAxwEWrY8BwoADs="));
object img2=Image.PNM.decode("P4\n5 5\nx\00èØèð");
if (img1!=img2) return ( "differ\n" );
return "ok";


]], "ok")
test_any([[# 1 "-"


#27 "testsuite.in.in"
object img=Image.image();
if (!img ||
img->xsize() ||
img->ysize()) return ( "have size" );
return "ok";

]], "ok")
test_any([[# 1 "-"


#34 "testsuite.in.in"
object img=Image.image(100,100);
if (!img ||
img->xsize()!=100 ||
img->ysize()!=100) return ( "wrong size" );
if (img!=0) return ( "wrong color" );
return "ok";

]], "ok")
test_any([[# 1 "-"


#42 "testsuite.in.in"
int x=1; while ((x<<1)>0) x=(x<<1)+1;
if (!catch { Image.image(x,2); }) return ( x+"x2 permitted" );
if (!catch { Image.image(x/32768,65537); }) return ( (x/32768)+"x65537 permitted" );
if (!catch { Image.image(x/(32768*3),65537); }) return ( (x/(32768*3))+"x65537 permitted" );
return "ok";

]], "ok")
test_any([[# 1 "-"


#49 "testsuite.in.in"
object img=Image.image(1000,1000,17,42,96);
if (!img ||
img->xsize()!=1000 ||
img->ysize()!=1000) return ( "wrong size" );
if (img!=({17,42,96})) return ( "wrong color" );
return "ok";


]], "ok")
test_any([[# 1 "-"


#60 "testsuite.in.in"
object img=Image.image(10,10);
img=img->test();
if (equal(img->max(),({0,0,0}))) return ( "failed" );
img->setpixel(2,2,0,255,0);
if (img==img->invert()) return ( "failed" );
return "ok";


]], "ok")
test_any([[# 1 "-"


#71 "testsuite.in.in"
object img=Image.image(100,100)->test();
if (img!=img->copy()) return ( "differ" );
if (img->copy(25,25,75,75)!=img->copy(25,25,75,75)) return ( "subregion differ" );
if (img->copy(25,25,75,75)==img) return ( "subregion doesn't differ" );
img->setpixel(2,2,0,255,0);
if (img->copy()==img->invert()->copy()) return ( "copy of other doesn't differ" );
return "ok";

]], "ok")
test_any([[# 1 "-"


#80 "testsuite.in.in"
object img=Image.image(100,100)->test();
if (img->clear()==img) return ( "doesn't differ" );
if (img->clear(0,0,0)!=0) return ( "wrong color (black)" );
if (img->clear(1,255,0)!=({1,255,0})) return ( "wrong color (color)" );
return "ok";

]], "ok")
test_any([[# 1 "-"


#87 "testsuite.in.in"
object img=Image.image(100,100)->test();
if (img!=img->clone()) return ( "differ" );
img->setpixel(2,2,0,255,0);
if (img->clone()==img->invert()->clone()) return ( "clone of other doesn't differ" );
return "ok";


]], "ok")
test_any([[# 1 "-"


#97 "testsuite.in.in"
array a=({0,0,0});
array b=copy_value(a); b[0]=17; b[1]=42; b[2]=128;
if (!equal( ({0,0,0}), a)) return ( "differ (1)" );
if (!equal( ({17,42,128}), b)) return ( "differ (2)" );
return "ok";

]], "ok")
test_any([[# 1 "-"


#104 "testsuite.in.in"
if (!equal( ({0,0,0}), 
Image.image(10,10,0,0,0)->max() ))
return ( "erranous (1)" );
if (!equal( ({17,42,36}), 
Image.image(10,10,17,42,36)->max() ))
return ( "erranous (2)" );
if (!equal( ({17,42,36}), 
Image.image(10,10,0,0,0)
->setpixel(5,5,17,42,36)->max() ))
return ( "erranous (3)" );
if (!equal( ({17,42,36}), 
Image.image(10,10,0,0,0)
->setpixel(2,2,1,2,3)
->setpixel(3,3,17,42,36)
->setpixel(4,4,3,2,1)
->max()))
return ( "erranous (4)" );
if (!equal( ({17,42,36}), 
Image.image(10,10,0,0,0)
->setpixel(2,2,17,2,3)
->setpixel(3,3,2,42,5)
->setpixel(4,4,3,2,36)
->max()))
return ( "erranous (5)" );
return "ok";


]], "ok")
test_any([[# 1 "-"


#134 "testsuite.in.in"
object img=Image.image(10,10,255,0,0);
if (!equal(img->getpixel(5,5),({255,0,0}))) return ( "getpixel erranous" );
img->setpixel(5,5,1,2,3);
if (!equal(img->getpixel(5,5),({1,2,3}))) return ( "failed" );
return "ok";

]], "ok")
test_any([[# 1 "-"


#141 "testsuite.in.in"
object img=Image.image(10,10,255,0,0);
img->setpixel(5,5,0,255,0,127);
if (!equal(img->getpixel(5,5),({127,128,0}))) return ( "failed" );
return "ok";

]], "ok")
test_any([[# 1 "-"


#147 "testsuite.in.in"
object img=Image.image(100,100,0,0,0);
foreach (({40,50,60}),int z)
{ 
img->line(50-z,0,50,50,255,255,255);
img->line(50-z,100,50,50,255,255,255);
img->line(100,50+z,50,50,255,255,255);
img->line(100,50-z,50,50,255,255,255);
}
object img1=Image.GIF.decode(MIME.decode_base64(
"R0lGODlhZABkAIAAAAAAAP///ywAAAAAZABkAAAC/wxwiGC7/l6UktZ6Mdatdr9toSiSZQmCjPihqPu+MdLST23Lsr7vGF7DrXw+YhEF3AiFx2NTFiwtnU5qMYpUVqvbrAT7/XG5Y3HYfD6TyWsw+vZms68qaTw3n/tazE/AvcCkpwcH95OkFkhIaGdYdwfIyDikePeIVzk5yacFdUmpOcfpIUiaiBnK5Wfp6YiaerT6SecKCrtX++o0mnnb+vrHyKvr+xgpKttbbDxLmGy77Hi86VoK28FnrfesTY3a7VwdjTc8HowJToZ9Ok6unLoemA6fOR+L3u5Fab/T8JzfaR89UPyKnYsnjFzBaP6IVWnoEGAjiKLcSXyYY6EihP8Xd2VkY8Cfxo7BKN4z2RHkCn4hI6Y8CS0LypcVW/ZbOZImCJsvSuq85hMJz5/wzrEYSrRonz85kwoFYtSpwagMqEr1xfRG06u4aGzliusrWFpjASIta1Ae2qnYrK51RjXr201u5c5FttTt3X561YqVmtVa0L2ezooxTDgM4sNVE2tZ/Njl25Ysh/zNF7SgzcsMP6qzzPkWxJEUQ4caHU4gWtQJVXM9+E7lPtOq6g38RxNhaJO0u7oeSFCn7mUc+07t1ft3zLTI23Fcfk0cZmXJg8cmTp02N5K5OEctN/3d33LVWXT3Rv0nbuM3a5XvmQv6r2+A47ME/35+zHmR8rdPj82eeM2ox45k/a1WoHwHrgWeLlYhwmCC31ni32cJWkYhYdM4yAqCEmboGDTdTBGiiPB1eNeGy1UIXHwrljjLNCxi9UYfMAZkiI034hhIAQA7"));
if (img!=img1) return ( "differ" );
return "ok";

]], "ok")
test_any([[# 1 "-"


#161 "testsuite.in.in"
object img=Image.image(100,100,0,0,0);
img->line(40,0,0,40);
if (!equal( ({0,0,0}), img->max() )) return ( "differ (reset)" );
img->line(10,10,20,20,128,13,42);
if (!equal( ({128,13,42}), img->max() )) return ( "differ (direct)" );
img->setcolor(200,19,99);
img->line(30,20,20,30);
if (!equal( ({200,19,99}), img->max() )) return ( "differ (setcolor)" );
return "ok";

]], "ok")
test_any([[# 1 "-"


#172 "testsuite.in.in"
object img=Image.image(100,100,0,0,0);
foreach (({40,60,50}),int z)
{ 
img->box(z,0,50,50,255,z,255);
img->box(z,100,50,50,255,z,0);
img->box(100,z,50,50,0,z,255);
img->box(0,z,50,50,0,z,0);
}
object img1=Image.GIF.decode(MIME.decode_base64(
"R0lGODlhZABkALMAAAAAAAAyAAA8AAAoAP8oAP8yAAAo/wAy/wA8//88AP8o//8y//88/wAAAAAAAAAAACwAAAAAZABkAAME/xAAOWe1Fue8OVAKGIbhwjAniqKe17ouHMcznZEkbq7rats/IFA4nORypV6PVSw2nU4bErlb+qJRbDY7zVWtjO1WPKZ1SV9rubxmf86K9NLtpkfhcfC1XudL4XI9fX2DZoB6TISEijeHiIuLkBZ4gXuRkYSUiGGYmJmOep6efZqPo6NspaGoqGOqYK2tW69qsrJOtHO3t0O5gry8f2eVicHBHr6Wx8eToLDMzI3Dm9HRzdOm1tHJxdrB3Jzex+DizOTl38616Lfn7LLu76jx8p709ZH3+J/Yq/uY+v65CSiwDMGCs9TpYjZgQEOHDiFGjDiRIkWLFy9mJMbAgAGPH/8/hhQpkmTJkidRatS4kiVLly8HcESJkmbNmjdLxoy5kydPhzNx4hQ6dOjPn0eRUgxatGjTokqVRuXJ1KlTqyqlStWqserVq18NbN06dukmsGDRfiRLlq3Ms2nTgm3blqxXuXJr1q0r9W7evCIDBBA8eHBhw4YRJ068mDFjxwEOHJA8eXJly5YxZ868mTNnzgIEhBYtmnTp0qdRo1a9enXrAggQxJYtm3bt2rdx49a9e/du166BBw8+nLgA2L59J1eunLly48ahR48uGnnz5texY8dNnXp376itb98+njx38ODRGxdv3nz75unTxw/O3r17++fly9df/f59/77tt5/lgMf995+BtQ044H71HXggeQsumF6DDz7YnDYEEJChhhpqWEACCYAYYoghIrRIhx2i+CGJJJJoIiEppuhhiy2W+GIdMsq4Yo0u3uhGjinuyGMCPv4I5IxD2ljkGEcimeSSZTRJgJA8Qslkk1TWaOUWUmbZ4pZZdJmkkmAOIeaYZTpx5pNpmonlmES2CcSaQ8o555to2kkDnVXqGQOfWvrpAqBfCuoBoT0amgGiZCoKAKNxOjoBpJJaQGmlj+LJZqWXcqppnZh2KqmojpKqqKmGoiqoqn6yqqerdsIqp6xt0pqmrYtEAAA7"));
if (img!=img1) return ( "differ" );
return "ok";

]], "ok")
test_any([[# 1 "-"


#186 "testsuite.in.in"
object img=Image.image(100,100,0,0,0);
img->box(40,0,0,40);
if (!equal( ({0,0,0}), img->max() )) return ( "differ (reset)" );
img->box(10,10,20,20,128,13,42);
if (!equal( ({128,13,42}), img->max() )) return ( "differ (direct)" );
img->setcolor(200,19,99);
img->box(30,20,20,30);
if (!equal( ({200,19,99}), img->max() )) return ( "differ (setcolor)" );
return "ok";


]], "ok")
test_any([[# 1 "-"


#200 "testsuite.in.in"
object img=Image.image(100,100,0,0,0);
float x=0,y=0.2;
img->setcolor(255,254,253);
img->polygone(({10+x,15+y,15+x,10+y,15+x,15+y}),
({20+x,15+y,25+x,15+y,20+x,10+y}),
({10+x,20+y,15+x,20+y,15+x,25+y}),
({20+x,25+y,25+x,20+y,20+x,20+y}),

({30+2*10+x,15+y,30+2*15+x,10+y,30+2*15+x,15+y}),
({30+2*20+x,15+y,30+2*25+x,15+y,30+2*20+x,10+y}),
({30+2*10+x,20+y,30+2*15+x,20+y,30+2*15+x,25+y}),
({30+2*20+x,25+y,30+2*25+x,20+y,30+2*20+x,20+y}),

({10+x,30+2*15+y,15+x,30+2*10+y,15+x,30+2*15+y}),
({20+x,30+2*15+y,25+x,30+2*15+y,20+x,30+2*10+y}),
({10+x,30+2*20+y,15+x,30+2*20+y,15+x,30+2*25+y}),
({20+x,30+2*25+y,25+x,30+2*20+y,20+x,30+2*20+y}));

object img1=Image.GIF.decode(MIME.decode_base64(
"R0lGODlhZABkAMQAAAAAAAICAgUFBQoKChYWFigoKC0tLTAwMDIyMjMyMj8/P1lYWFFRUHJycXp5eYyLi6OioaWlpK2srLW0s8vLyszLytbV1Ojn5vTz8vn49/z7+v/+/QAAAAAAAAAAAAAAACwAAAAAZABkAAQF/yAAiONYmiaapivLuu8byzJd1zeO6/ve+z5gMDgkEo3HY1KpZDabTyhUOp1WrVZsNrvlcr3fb1gsJpfLZzRafWSw3Osd4bF7EOLtDCsDx6fmGBs7Gxh2fjgMGYIpG3yHAIAbG4s1k4SGjyaJkyyTjnGRlpQyopd3j5ucjJ59X6Glg6WmhwYICLYst7cGaAW6uro7wMAIBZmZx8jIysvLzc7O0GUOFBTVLNbWDmgKE9nZ1jvg4BMKhwISlp2TEgJrAw0XsrGiFw0DmeiqJuzuePDy1OGod8+Zvk7tMgHcR2qDPXzRAKBjkXAZwB0PI6bwZ4KjM4g1QGrUOJIkSZMnT+6mVKmSZcuWL2HClDlzZk2bNnHmzLmTJ0+fP38GFSqUaNGiR5EiVbp0aVOnTqFGjTqV6hdjKbBadRaBRdetywpoYKFBK9hDEUYB2PD1rB+xajeUdesnbVy2dOPAvTs3bxm7d/H6vapBIL9JfQdbARxYsOIpBxIkkMxi8uQDjx9n1qyZc+fOn0GDFj169CMI4LBlg2D6yAJR6yYtaE0kgAXDIyxZCECbyGuGa2X3rn377u7hvoELRx7EdtzjzIO87jQ7enMLLKBb91HdRPftO3inEA8efHnz5tGnT7+ePXv379/Hly+ffv369/HjPxQCADs="));
if (img-img1>16) return ( "differ too much" );
if (!equal(img->max(),({255,254,253}))) return ( "wrong maxcolor" );
return "ok";

]], "ok")
test_any([[# 1 "-"


#225 "testsuite.in.in"
object img=Image.image(100,100,0,0,0);
float x=-0.2,y=-0.2;
img->setcolor(255,254,253);
img->polygone(({10+x,15+y,15+x,10+y,15+x,15+y}),
({20+x,15+y,25+x,15+y,20+x,10+y}),
({10+x,20+y,15+x,20+y,15+x,25+y}),
({20+x,25+y,25+x,20+y,20+x,20+y}),

({30+2*10+x,15+y,30+2*15+x,10+y,30+2*15+x,15+y}),
({30+2*20+x,15+y,30+2*25+x,15+y,30+2*20+x,10+y}),
({30+2*10+x,20+y,30+2*15+x,20+y,30+2*15+x,25+y}),
({30+2*20+x,25+y,30+2*25+x,20+y,30+2*20+x,20+y}),

({10+x,30+2*15+y,15+x,30+2*10+y,15+x,30+2*15+y}),
({20+x,30+2*15+y,25+x,30+2*15+y,20+x,30+2*10+y}),
({10+x,30+2*20+y,15+x,30+2*20+y,15+x,30+2*25+y}),
({20+x,30+2*25+y,25+x,30+2*20+y,20+x,30+2*20+y}));

object img1=Image.GIF.decode(MIME.decode_base64(
"R0lGODlhZABkANUAAAAAAAICAgUFBQcHBwoKChQUFBYWFh4eHiMjIyYmJS0tLTAwMDMyMigoKFFRUFlYWHp5eX9+fnJycYyLi56dnDIyMqOioaWlpMHBwMvLyszLytHQz9bV1Orp6Ojn5vTz8vz7+v/+/QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAZABkAAUG/0AAQDgcFo1GZDK5ZDKdz2dUKqVWq1csVrvddr1ecDg8JpPN53NarWa32284XD6f1+12fD6/5/P9f3+BgoKEhYVqAkmKiGQEWAMBjW0FFEkMEZNYBhMYWBUcD5KaWwUbGZchmaRGnB8hqFUVISGho6xJprCpqqyutLuywLWiuEO6wUMMwKuIv8OxUrPDxLeTAhQZGRkWSQ3b2w6FAQ8Y4ODcWN/o4BYNxsbw8fHz9PT29/f5ggIMDP7vjBD49w/BuAUECf4LKGWgQoUHWEUAFg3AMlodFCBqcAEEtWRPplHzIOGRRFoVL2bUxNEjxU8jS9KbmDLESlYtUcKkRdLkvf8IKW8aa1mRyaye+pKIM4JAo74GELAkkJk0aVWrVrFmzbqVK1evX7+GFSuWbNmyZ9GiVbt2bVu3buHGjTuXLl27d+/m1auXb9++fwEDFjx4cGHDhvlYs5b43oMkCxg2jmfAkxEGFybfm5AShGTNmgx8qJkZNKsJIJd5Nh36Vc0QpVkjQp2a1mrZgkTrvAwsNu48tGvb/vxbDQFz27oZWbctavHiz6FDlz59enXr1rFnz152QIUK3yUTAA8+AfczATi85A1MwvkzD9YrA+bB5/st6XfPp+X+Ppn4wtXnHxn5vdbfgGHEV5OACIaRXk0HNujFAykxKKEXASinTIQXbiEk2QH2ddihiCOOWKKJJqKYYoorssiiiy++GKOMMtJYY4034hYEADs="));
if (img-img1>16) return ( "differ too much" );
if (!equal(img->max(),({255,254,253}))) return ( "wrong maxcolor" );
return "ok";


]], "ok")
test_any([[# 1 "-"


#251 "testsuite.in.in"
object img=Image.image(100,100,0,0,0);
int i;

array a=({}),b=({});
foreach (({0,1,2,3,4}),i)
{
a+=({ 50+50*sin(i*2*3.1415926535/5+0.11),
50+50*cos(i*2*3.1415926535/5+0.11) });
a+=({ 50+19*sin((i+0.5)*2*3.1415926535/5+0.11),
50+19*cos((i+0.5)*2*3.1415926535/5+0.11) });
b+=({ 50+19*sin(i*2*3.1415926535/5+0.1),
50+19*cos(i*2*3.1415926535/5+0.1) });
b+=({ 50+0.5*5*sin((i+0.5)*2*3.1415926535/5+0.1),
50+0.5*5*cos((i+0.5)*2*3.1415926535/5+0.1) });
}

img->setcolor(128,0,16);
img->polyfill(a,b);

a=({}),b=({});
foreach (({0,1,2,3,4,5,6}),i)
{
a+=({ 50+50*sin(i*2*3.1415926535/7+0.11),
50+50*cos(i*2*3.1415926535/7+0.11) });
a+=({ 50+19*sin((i+0.5)*2*3.1415926535/7+0.11),
50+19*cos((i+0.5)*2*3.1415926535/7+0.11) });
b+=({ 50+0.9*50*sin(i*2*3.1415926535/7+0.1),
50+0.9*50*cos(i*2*3.1415926535/7+0.1) });
b+=({ 50+0.5*19*sin((i+0.5)*2*3.1415926535/7+0.1),
50+0.5*19*cos((i+0.5)*2*3.1415926535/7+0.1) });
}

img->setcolor(255,128,0);
img->polyfill(a,b);

object img1=Image.GIF.decode(MIME.decode_base64(
"R0lGODlhZABkAPcAAAAAAAEAAAIAAAMAAAQAAAMBAAUAAAYAAAcAAAUCAAYDAAcDAAIBAAgAAQkAAQgEAAkEAAsAAQsBAAoAAQwAAQ4AAQoFAAwGAAsFAA0GAA4HAAQCAA8AARAAAhIAAhMAAhUAAhQAAhADABEAAhYAAhgAAxoAAxsAAxwAAx0AAxAEABEIABAIABIJAA8HABcAAh0EARMKABQKABUKABULABYLABcLABgMABkMABsNABwOAB0OAB0PAA0AAR4AAx8AAyAABCIABCEABCMGAiQAAyUABCQAAycABCgABSkABSoABSsABSwABS4ABS8ABTAABjEABjIABjMABjUABjYABjcABjkABzoABzkHBD4ABzwAB0AACD0ABz0HBR4PACAQAB8PACEQACIRACMRACQSACUSACYTACgTACcUACgUACkUACoVACwWAC0WAC0XADEPAS4XADAYADEYADIZADQaADUaADYbADgbADodADgcADweAD0eAD8fAEAgAEEgAEEhAEYACEcCBksACFAACVUACVgACl0AC2IADFkAC2gADGsBC3IADnEADXgBDXwADn0BDkcACEwaAkQfAFEdAk4mAFIoAFMpAFspAHAPCXYZBl4sAHQrAmUyAGw1AHA3AHo5AH8AD4AAD4AAEIEBD4ICD4ABD4MDD4QED4QFDoAIDYcGDowKDo0LDpAPDZISDJQUDZcWDJkaC5wcDJ4eDKEiCqUlC6gnCpYzBKsqCaswCLAuCbIyCbM0CbY4CLo5CLw8CGAHCYFBAIpFAIxIAJFKAJlNAKFQAKRTAMBBB7hOBMRFBshKBq1XALhdALteAMVjAMxNBtBPBdJWBNlYBNpbBNZjAuBgA+RlAtVrANpuAORuAeVzAOpsAu9xAet2APB2APF4ALNZAPR1AfN0AfV2AfZ2AfN6APR6APV6APZ4APZ7APZ3Afl5APl6APh5APd8APh8APl7APp7APp8APl9APp9APV7APt8APx9APx+APt+AP1/AP1+AP5/APd4AP+AACwAAAAAZABkAAcI/wABABA4cGBBgwYRJky4kCFDhw8fRpQokWLFihcxYtS4cWNHjx5Bhgw5kqTEACZNplSpkiXGDZpatpQ5c6bKT59s2tS5c2fCNfBi+vQ5lCjJAs/+SZI4wajRhBqetvz07x+ch0UASZVqp9PW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"));


if (img-img1>16) return ( "differ too much" );



return "ok";


]], "ok")
test_any([[# 1 "-"


#298 "testsuite.in.in"
int i;
array a=({});
foreach (({0,1,2,3,4}),i)
{
a+=({ 50+50*sin(i*2*3.1415926535/5+0.11),
50+50*cos(i*2*3.1415926535/5+0.11) });
a+=({ 50+20*sin((i+0.5)*2*3.1415926535/5+0.11),
50+20*cos((i+0.5)*2*3.1415926535/5+0.11) });
}

object img=Image.image(100,100,0,0,0);
img->setcolor(128,0,16);
img->polyfill(a);

object img1=Image.GIF.decode(MIME.decode_base64(
"R0lGODlhZABkAOYAAAAAAAIAAAEAAAQAAAUAAAYAAAMAAAgAAQkAAQoAAQsAAQwAAQ0AAQ4AAQ8AAQcAABAAAhEAAhIAAhMAAhUAAhQAAhYAAhcAAhgAAxkAAxoAAxsAAxwAAx0AAx4AAx8AAyAABCEABCIABCMABCQABCUABCYABCcABCgABSkABSoABSsABSwABS0ABS4ABS8ABTAABjEABjIABjMABjQABjUABjYABjcABjgABzkABzoABzsABzwABz0ABz4ABz8AB0AACEMACEIACEYACEcACEgACUkACUoACUsACUwACU0ACU4ACU8ACVAAClIAClEAClMAClUAClgAC1cAClkAC1YAClsAC1wAC10AC14AC18AC2AADGEADGIADGMADGQADGUADGYADGcADGgADWkADWoADWsADWwADW0ADW4ADW8ADXAADnEADnMADnQADnUADnIADncADngAD3kAD3YADnoAD3sAD3wAD0EACH0AD38AD34AD4AAEAAAAAAAAAAAACwAAAAAZABkAAYH/4AAAIKDg4WGhoiJiYuMjI6Pj5GSkpSVlZeYmJqbm52enqChoaOkpKanp6mqqqytra+wsLKzs7W2tri5ubu8hgq+vsHClSpFxMTIxDl6NMnJz7YCRnx8HNDQ2KoEUtV6BdnZ4Z4KX9V8aOLi6pUTaud8UeukKC3zsx508Hw9954HdcKI8EdqxZ19fEoQ3ISEj54rFxZW2qEHIZ8GEitRqMhnzxMHGQcJaGiRTshKWeDdGXJAIgEqFqtlOSnpBMI4Owb4UxAmZrUhNB8JeIeQzQsB6yoQ9eki6CMdPsmQyPYhjs9zEZ0mAnhViwZiLQ5e5XMngFZGSsbqgRKBFw+OY//FnGVkAa7PO0USwBo5Fh6TuYy09K0mpweBUwWsDD6HA3AiFIurwZGBdNMCMZGrgXBsSMCazHzMnMBE4XNmPS05D9oBuhqXa4xAyGm9RrUhBHZaO6wywZALsaCl2Da0RHe1PEgU+LCbGc/wQReYg85jvFqK54O2VK9+ri12Fdy5z8E+KACb8Ma5kB/EA73uI+sBJMjtPrOM+ACY1M/8NT4G6ftZtIdO+HURYF9l4DfICgeOBYWCAAQAR4M+7QAhAD1QGNN1ECYAnIbn1MGDARA2AaJFZ4yg4H8nIqRHFSDF50WLFtXRA4nYdTAbjRahMdVwItTBo096SAGBaid8OKT/RXb8QOBZLVC3ZF9pmHDWDHtMGRkV3p3EjJaZ2QHEkwv9ACCYY6kx2kJDoFmdFRLcw5eb1d0hxGHZBOAEneitwSExBnTDp3tX9OYLAVgMut8dQeA5ywMGKhogGyrMkkBPkjaYRQWqMFBGpvXdgcYVSOigggWnQJAGqK3p0UYXT+ABwwcNVAZLBROyetUcY0hBhA0lUECmLxi8oes5eaiRhRI8sLCBXv5wYFWmaUARhAwhQGDWSSHMwaqVZ5lAX6Z6IHDWClJyZ8caX1ChhBA2nFGdGWfFkGVfetSRhhdTIAFEDSl4IMEDkrxQ3RJa3QCXHnKgwUUVR/wwAwocROCo1ioBmNZaDE5F0IMMJmzgwLDJ1GAcpxfOMoAbrZmUsi2sgUbFy7YUMG1kPNBsCx6gfaCzpUIulgfJP4dCRGRfFD0LA0r6RITSs6Q1WKVQtyLBvVfpwUDVsEDRlxpcwxLdWE6EDQtMV9VgdisdnFkNBmu3ol1Mc9gadygj+ITF3a2AERMQfKuSQkwqBn6KGQjtQbDhpBi8zxiMnxLAUtUgEfkpJsPT1OWhrAzPkZyHEjMfbYROis3VVGE6KTzzkcPqoSAgJGywb0KEHTjWjgkDM+nuCQVzBQIAOw=="));

if (img-img1>16) return ( "differ too much" );
if (!equal(img->max(),({128,0,16}))) 
return ( "wrong maxcolor ("+img->max()[0]+","+img->max()[1]+","+img->max()[2]+")" );
return "ok";

]], "ok")
