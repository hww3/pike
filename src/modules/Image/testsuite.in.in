#module Image.image
{
//-----------------------------------------------------------------------
#chapter testuite

#test Image.PNM.decode, ==
   object img1=Image.PNM.decode("P1\n5 5\n0 1 1 1 1\n1 0 1 1 1\n1 1 0 1 1\n1 1 1 0 1\n1 1 1 1 0");
   object img2=Image.PNM.decode("P4\n5 5\nx¸Øèð");
   if (img1!=img2) fail("differ\n");
   ok();

#test MIME.decode_base64
   if ("hejsan, hoppsan" != MIME.decode_base64("aGVqc2FuLCBob3Bwc2Fu\n"))
      fail("differ");
   ok();

#test Image.GIF.decode, MIME.decode_base64, ==
   object img1=Image.GIF.decode(MIME.decode_base64("R0lGODlhBQAFAIAAAAAAAP///ywAAAAABQAFAAACCAxwEWrY8BwoADs="));
   object img2=Image.PNM.decode("P4\n5 5\nx\00èØèð");
   if (img1!=img2) fail("differ\n");
   ok();

//-----------------------------------------------------------------------
#chapter create

#test Image.image() no image
   object img=Image.image();
   if (!img ||
       img->xsize() ||
       img->ysize()) fail("have size");
   ok();

#test Image.image() image
   object img=Image.image(100,100);
   if (!img ||
       img->xsize()!=100 ||
       img->ysize()!=100) fail("wrong size");
   if (img!=0) fail("wrong color");
   ok();

#test Image.image() too big
   int x=1; while ((x<<1)>0) x=(x<<1)+1;
   if (!catch { Image.image(x,2); }) fail(x+"x2 permitted");
   if (!catch { Image.image(x/32768,65537); }) fail((x/32768)+"x65537 permitted");
   if (!catch { Image.image(x/(32768*3),65537); }) fail((x/(32768*3))+"x65537 permitted");
   ok();

#test Image.image() color
   object img=Image.image(1000,1000,17,42,96);
   if (!img ||
       img->xsize()!=1000 ||
       img->ysize()!=1000) fail("wrong size");
   if (img!=({17,42,96})) fail("wrong color");
   ok();

//-----------------------------------------------------------------------
#chapter testsuite II

#test Image.image->test(), ==
   object img=Image.image(10,10);
   img=img->test();
   if (equal(img->max(),({0,0,0}))) fail("failed");
   img->setpixel(2,2,0,255,0);
   if (img==img->invert()) fail("failed");
   ok();
   
//-----------------------------------------------------------------------
#chapter copy

#test Image.image->copy
   object img=Image.image(100,100)->test();
   if (img!=img->copy()) fail("differ");
   if (img->copy(25,25,75,75)!=img->copy(25,25,75,75)) fail("subregion differ");
   if (img->copy(25,25,75,75)==img) fail("subregion doesn't differ");
   img->setpixel(2,2,0,255,0);
   if (img->copy()==img->invert()->copy()) fail("copy of other doesn't differ");
   ok();

#test Image.image->clear
   object img=Image.image(100,100)->test();
   if (img->clear()==img) fail("doesn't differ");
   if (img->clear(0,0,0)!=0) fail("wrong color (black)");
   if (img->clear(1,255,0)!=({1,255,0})) fail("wrong color (color)");
   ok();

#test Image.image->clone
   object img=Image.image(100,100)->test();
   if (img!=img->clone()) fail("differ");
   img->setpixel(2,2,0,255,0);
   if (img->clone()==img->invert()->clone()) fail("clone of other doesn't differ");
   ok();

//-----------------------------------------------------------------------
#chapter testuite III

#test equal, copy_value
   array a=({0,0,0});
   array b=copy_value(a); b[0]=17; b[1]=42; b[2]=128;
   if (!equal( ({0,0,0}), a)) fail("differ (1)");
   if (!equal( ({17,42,128}), b)) fail("differ (2)");
   ok();

#test Image.image->max()
   if (!equal( ({0,0,0}), 
	       Image.image(10,10,0,0,0)->max() ))
      fail("erranous (1)");
   if (!equal( ({17,42,36}), 
	       Image.image(10,10,17,42,36)->max() ))
      fail("erranous (2)");
   if (!equal( ({17,42,36}), 
	       Image.image(10,10,0,0,0)
	       ->setpixel(5,5,17,42,36)->max() ))
      fail("erranous (3)");
   if (!equal( ({17,42,36}), 
	       Image.image(10,10,0,0,0)
	       ->setpixel(2,2,1,2,3)
	       ->setpixel(3,3,17,42,36)
	       ->setpixel(4,4,3,2,1)
	       ->max()))
      fail("erranous (4)");
   if (!equal( ({17,42,36}), 
	       Image.image(10,10,0,0,0)
	       ->setpixel(2,2,17,2,3)
	       ->setpixel(3,3,2,42,5)
	       ->setpixel(4,4,3,2,36)
	       ->max()))
      fail("erranous (5)");
   ok();

//-----------------------------------------------------------------------
#chapter plain

#test setpixel, getpixel
   object img=Image.image(10,10,255,0,0);
   if (!equal(img->getpixel(5,5),({255,0,0}))) fail("getpixel erranous");
   img->setpixel(5,5,1,2,3);
   if (!equal(img->getpixel(5,5),({1,2,3}))) fail("failed");
   ok();

#test setpixel alpha
   object img=Image.image(10,10,255,0,0);
   img->setpixel(5,5,0,255,0,127);
   if (!equal(img->getpixel(5,5),({127,128,0}))) fail("failed");
   ok();

#test Image.image->line structure
   object img=Image.image(100,100,0,0,0);
   foreach (({40,50,60}),int z)
   { 
      img->line(50-z,0,50,50,255,255,255);
      img->line(50-z,100,50,50,255,255,255);
      img->line(0,50-z,50,50,255,255,255);
      img->line(100,50-z,50,50,255,255,255);
   }
   object img1=Image.GIF.decode(MIME.decode_base64(
      "R0lGODlhZABkAIAAAAAAAP///ywAAAAAZABkAAAC/wxwCGaq/l6UktZ6Mdat9sdsmziOpWl6WPMpYZrCcTxLLfLdi07Tve9brFQeXjB4RIKGQ5tQqYRGccTN7TWdZlPXWNeo1Wq7zqoLLBYjyWZXUa1Ws526Kzoeby5H2L37npfn5kcUEGDY1icoqEe10qL4dMbIaFXW9pcIWBkFacknOTjJWenZaHWoSSpoarO50yr0uvrpeBmkmDNLe1s3FhqayquUc0osLLozjEuIs4va+8xZfJt3SO28bIKdzNjXgaxdNTcdDi4dB+6qbT4qbhu73J79rt7Mjnwubt9dn99Pip+yd48GhVvF4h5BEPYOlrIFbOEbRw6tQUTH6xpFjP9N9En0ISyhN3gfj1FkRbKkSVkcqQhUiSthRWYsWpZMxQDdC5swcUaksROmtxC7ggodKovmwKMPNQKNxJTVtTs+o9KaygWq1aEzYfHcuq2iU7D4IHUlG9DcV7RP3bElqPUtO7k36X5ca9fL2byl9vKVivfvo8CCXREu7CwuYjFEFwdM6rjpz8i/FFOO+eTwX5Ga+XK+nO4kaMaiR3cSOdn0NlGd6fJrLfe1amKsZ2O+aBsoIdhoufEm6zu3l93Cwzb7bTUe8qjKi9eCmFp4c+fr7i0XSi767OzXe2LqrpI7dbfQoUs3pn20L0y511c7zx488+fjFaaHz74+D/lH99cJR2+efqD890ABADs="));
   if (img!=img1) fail("differ");
   ok();

#test Image.image->line color 
   object img=Image.image(100,100,0,0,0);
   img->line(40,0,0,40);
   if (!equal( ({0,0,0}), img->max() )) fail("differ (reset)");
   img->line(10,10,20,20,128,13,42);
   if (!equal( ({128,13,42}), img->max() )) fail("differ (direct)");
   img->setcolor(200,19,99);
   img->line(30,20,20,30);
   if (!equal( ({200,19,99}), img->max() )) fail("differ (setcolor)");
   ok();

#test Image.image->polyfill 1 (right triangle 0.0, 0.2)
   object img=Image.image(100,100,0,0,0);
   float x=0,y=0.2;
   img->setcolor(255,254,253);
   img->polygone(({10+x,15+y,15+x,10+y,15+x,15+y}),
		 ({20+x,15+y,25+x,15+y,20+x,10+y}),
		 ({10+x,20+y,15+x,20+y,15+x,25+y}),
		 ({20+x,25+y,25+x,20+y,20+x,20+y}),
		 
		 ({30+2*10+x,15+y,30+2*15+x,10+y,30+2*15+x,15+y}),
		 ({30+2*20+x,15+y,30+2*25+x,15+y,30+2*20+x,10+y}),
		 ({30+2*10+x,20+y,30+2*15+x,20+y,30+2*15+x,25+y}),
		 ({30+2*20+x,25+y,30+2*25+x,20+y,30+2*20+x,20+y}),
		 
		 ({10+x,30+2*15+y,15+x,30+2*10+y,15+x,30+2*15+y}),
		 ({20+x,30+2*15+y,25+x,30+2*15+y,20+x,30+2*10+y}),
		 ({10+x,30+2*20+y,15+x,30+2*20+y,15+x,30+2*25+y}),
		 ({20+x,30+2*25+y,25+x,30+2*20+y,20+x,30+2*20+y}));

   object img1=Image.GIF.decode(MIME.decode_base64(
      "R0lGODlhZABkAMQAAAAAAAICAgUFBQoKChYWFigoKC0tLTAwMDIyMjMyMj8/P1lYWFFRUHJycXp5eYyLi6OioaWlpK2srLW0s8vLyszLytbV1Ojn5vTz8vn49/z7+v/+/QAAAAAAAAAAAAAAACwAAAAAZABkAAQF/yAAiONYmiaapivLuu8byzJd1zeO6/ve+z5gMDgkEo3HY1KpZDabTyhUOp1WrVZsNrvlcr3fb1gsJpfLZzRafWSw3Osd4bF7EOLtDCsDx6fmGBs7Gxh2fjgMGYIpG3yHAIAbG4s1k4SGjyaJkyyTjnGRlpQyopd3j5ucjJ59X6Glg6WmhwYICLYst7cGaAW6uro7wMAIBZmZx8jIysvLzc7O0GUOFBTVLNbWDmgKE9nZ1jvg4BMKhwISlp2TEgJrAw0XsrGiFw0DmeiqJuzuePDy1OGod8+Zvk7tMgHcR2qDPXzRAKBjkXAZwB0PI6bwZ4KjM4g1QGrUOJIkSZMnT+6mVKmSZcuWL2HClDlzZk2bNnHmzLmTJ0+fP38GFSqUaNGiR5EiVbp0aVOnTqFGjTqV6hdjKbBadRaBRdetywpoYKFBK9hDEUYB2PD1rB+xajeUdesnbVy2dOPAvTs3bxm7d/H6vapBIL9JfQdbARxYsOIpBxIkkMxi8uQDjx9n1qyZc+fOn0GDFj169CMI4LBlg2D6yAJR6yYtaE0kgAXDIyxZCECbyGuGa2X3rn377u7hvoELRx7EdtzjzIO87jQ7enMLLKBb91HdRPftO3inEA8efHnz5tGnT7+ePXv379/Hly+ffv369/HjPxQCADs="));
   if (img-img1>16) fail("differ too much");
   if (!equal(img->max(),({255,254,253}))) fail("wrong maxcolor");
   ok();

#test Image.image->polyfill 2 (right triangle -0.2, -0.2)
   object img=Image.image(100,100,0,0,0);
   float x=-0.2,y=-0.2;
   img->setcolor(255,254,253);
   img->polygone(({10+x,15+y,15+x,10+y,15+x,15+y}),
		 ({20+x,15+y,25+x,15+y,20+x,10+y}),
		 ({10+x,20+y,15+x,20+y,15+x,25+y}),
		 ({20+x,25+y,25+x,20+y,20+x,20+y}),
		 
		 ({30+2*10+x,15+y,30+2*15+x,10+y,30+2*15+x,15+y}),
		 ({30+2*20+x,15+y,30+2*25+x,15+y,30+2*20+x,10+y}),
		 ({30+2*10+x,20+y,30+2*15+x,20+y,30+2*15+x,25+y}),
		 ({30+2*20+x,25+y,30+2*25+x,20+y,30+2*20+x,20+y}),
		 
		 ({10+x,30+2*15+y,15+x,30+2*10+y,15+x,30+2*15+y}),
		 ({20+x,30+2*15+y,25+x,30+2*15+y,20+x,30+2*10+y}),
		 ({10+x,30+2*20+y,15+x,30+2*20+y,15+x,30+2*25+y}),
		 ({20+x,30+2*25+y,25+x,30+2*20+y,20+x,30+2*20+y}));

   object img1=Image.GIF.decode(MIME.decode_base64(
      "R0lGODlhZABkANUAAAAAAAICAgUFBQcHBwoKChQUFBYWFh4eHiMjIyYmJS0tLTAwMDMyMigoKFFRUFlYWHp5eX9+fnJycYyLi56dnDIyMqOioaWlpMHBwMvLyszLytHQz9bV1Orp6Ojn5vTz8vz7+v/+/QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAZABkAAUG/0AAQDgcFo1GZDK5ZDKdz2dUKqVWq1csVrvddr1ecDg8JpPN53NarWa32284XD6f1+12fD6/5/P9f3+BgoKEhYVqAkmKiGQEWAMBjW0FFEkMEZNYBhMYWBUcD5KaWwUbGZchmaRGnB8hqFUVISGho6xJprCpqqyutLuywLWiuEO6wUMMwKuIv8OxUrPDxLeTAhQZGRkWSQ3b2w6FAQ8Y4ODcWN/o4BYNxsbw8fHz9PT29/f5ggIMDP7vjBD49w/BuAUECf4LKGWgQoUHWEUAFg3AMlodFCBqcAEEtWRPplHzIOGRRFoVL2bUxNEjxU8jS9KbmDLESlYtUcKkRdLkvf8IKW8aa1mRyaye+pKIM4JAo74GELAkkJk0aVWrVrFmzbqVK1evX7+GFSuWbNmyZ9GiVbt2bVu3buHGjTuXLl27d+/m1auXb9++fwEDFjx4cGHDhvlYs5b43oMkCxg2jmfAkxEGFybfm5AShGTNmgx8qJkZNKsJIJd5Nh36Vc0QpVkjQp2a1mrZgkTrvAwsNu48tGvb/vxbDQFz27oZWbctavHiz6FDlz59enXr1rFnz152QIUK3yUTAA8+AfczATi85A1MwvkzD9YrA+bB5/st6XfPp+X+Ppn4wtXnHxn5vdbfgGHEV5OACIaRXk0HNujFAykxKKEXASinTIQXbiEk2QH2ddihiCOOWKKJJqKYYoorssiiiy++GKOMMtJYY4034hYEADs="));
   if (img-img1>16) fail("differ too much");
   if (!equal(img->max(),({255,254,253}))) fail("wrong maxcolor");
   ok();

   
#test Image.image->polyfill 2 (hollow stars)
   object img=Image.image(100,100,0,0,0);
   int i;

   array a=({}),b=({});
   foreach (({0,1,2,3,4}),i)
   {
      a+=({ 50+50*sin(i*2*3.1415926535/5+0.11),
	    50+50*cos(i*2*3.1415926535/5+0.11) });
      a+=({ 50+19*sin((i+0.5)*2*3.1415926535/5+0.11),
	    50+19*cos((i+0.5)*2*3.1415926535/5+0.11) });
      b+=({ 50+19*sin(i*2*3.1415926535/5+0.1),
	    50+19*cos(i*2*3.1415926535/5+0.1) });
      b+=({ 50+0.5*5*sin((i+0.5)*2*3.1415926535/5+0.1),
	    50+0.5*5*cos((i+0.5)*2*3.1415926535/5+0.1) });
   }

   img->setcolor(128,0,16);
   img->polyfill(a,b);

   a=({}),b=({});
   foreach (({0,1,2,3,4,5,6}),i)
   {
      a+=({ 50+50*sin(i*2*3.1415926535/7+0.11),
	    50+50*cos(i*2*3.1415926535/7+0.11) });
      a+=({ 50+19*sin((i+0.5)*2*3.1415926535/7+0.11),
	    50+19*cos((i+0.5)*2*3.1415926535/7+0.11) });
      b+=({ 50+0.9*50*sin(i*2*3.1415926535/7+0.1),
	    50+0.9*50*cos(i*2*3.1415926535/7+0.1) });
      b+=({ 50+0.5*19*sin((i+0.5)*2*3.1415926535/7+0.1),
	    50+0.5*19*cos((i+0.5)*2*3.1415926535/7+0.1) });
   }

   img->setcolor(255,128,0);
   img->polyfill(a,b);

   object img1=Image.GIF.decode(MIME.decode_base64(
      "R0lGODlhZABkAPcAAAAAAAEAAAIAAAMAAAMBAAQAAAUAAAYAAAQCAAUCAAYDAAIBAAcAAAcDAAgEAAgAAQkAAQoAAQsAAQwAAAwAAQkDAAkEAAoFAAsFAAwGAA0AARAAAhEAAhIAAhQAAg8AARUAAhYAAhcAARcAAhgAAxoAAxsAAw0GAA4HAA8HABAIABEIABIJABMKABMJABYLABQKABgMABkMABkNABoNABsNAA4AARwAAx0AAx4AAyEABCIABB8AAyIIASAABCQABCUABCYABCcABCkABSgABSoABSsABSwABS0ABSwBBC4ABTAABi8ABTEABjIABjMABjYABjUABjgABzkABzoABzoBBjsABzwABz0ABz4ABx0PAB0OAB4PAB8PACEOACEQACIRACMRACAQACQSACUSACcMACgMASYTACgTACgUACkUACkVACoVADcABjELAjQKAy4UACwWAC0WAC0XADAYADEYADIZADMaADQaADYbADcbADkcADgcADweAD0eAD4fAEEABkUACEoACUsACFEAClYAClYACV4AC0YACGQAC2cADG4ADXMADXQMCncADnsADkIVAUEgAEUiAEgjAFIIBk4mAFMpAFUqAGwTB3AYBWQfAl4uAGQxAGk0AGs1AHI1AH0AD34AD38AD4AAD4AAEIABD4EBD4ICD4QED4MDD4cGDogHDooKDY0MDowSC5AQDZISDZYUDZcXDJgYDJgRDZocC54dDKAdC6AiCqYkC6gkCqsrCq4tCrMxCbU1Cbc2CHU6AHc9AHs/AIJCAIdAAYxHAJVDApdMAIhEAJ9NAaVJAqtXALw8B7xMBbRbALxeAcJCB8VEB8ZMBcxMBcpaAtNUBdhYBNxdA8NiAMlmANJqANlsAdpnAelqAuJyAOl2AZFJAO53AO9xAfFxAfJyAfJzAfN1APV1AfB4APB4APF5APR6APN6APV7APZ3Afd4APh5APh6APl6APh7APp7APd3Afh8APd8APl9APt9APt9APx+AP1+AO93AP5/AP+AACwAAAAAZABkAAcI/wABABA4cGBBgwYRJky4kCFDDw4dRpQokWLFihcxYtTIsFCEjRtBhgw5kiRJjI6ynJQYYOVKly9fGuxAylEBmQMRbMKJk2dPh0dIkXLSUxiwnz+R9kQkdBFONvZ2Jk06deUhoaSAvCSQ7Z8k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"));
   
   if (img-img1>16) fail("differ too much");
   if (!equal(img->max(),({255,128,16}))) fail("wrong maxcolor");
   ok();

