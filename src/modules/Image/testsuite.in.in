#module Image.image
{
//-----------------------------------------------------------------------
#chapter testsuite

#test Image.PNM.decode, ==
   object img1=Image.PNM.decode("P1\n5 5\n0 1 1 1 1\n1 0 1 1 1\n1 1 0 1 1\n1 1 1 0 1\n1 1 1 1 0");
   object img2=Image.PNM.decode("P4\n5 5\nx¸Øèð");
   if (img1!=img2) fail("differ\n");
   ok();

#test MIME.decode_base64
   if ("hejsan, hoppsan" != MIME.decode_base64("aGVqc2FuLCBob3Bwc2Fu\n"))
      fail("differ");
   ok();

#test Image.GIF.decode, MIME.decode_base64, ==
   object img1=Image.GIF.decode(MIME.decode_base64("R0lGODlhBQAFAIAAAAAAAP///ywAAAAABQAFAAACCAxwEWrY8BwoADs="));
   object img2=Image.PNM.decode("P4\n5 5\nx\00èØèð");
   if (img1!=img2) fail("differ\n");
   ok();

//-----------------------------------------------------------------------
#chapter create

#test Image.image() no image
   object img=Image.image();
   if (!img ||
       img->xsize() ||
       img->ysize()) fail("have size");
   ok();

#test Image.image() image
   object img=Image.image(100,100);
   if (!img ||
       img->xsize()!=100 ||
       img->ysize()!=100) fail("wrong size");
   if (img!=0) fail("wrong color");
   ok();

#test Image.image() too big
   int x=1; while ((x<<1)>0) x=(x<<1)+1;
   if (!catch { Image.image(x,2); }) fail(x+"x2 permitted");
   if (!catch { Image.image(x/32768,65537); }) fail((x/32768)+"x65537 permitted");
   if (!catch { Image.image(x/(32768*3),65537); }) fail((x/(32768*3))+"x65537 permitted");
   ok();

#test Image.image() color
   object img=Image.image(1000,1000,17,42,96);
   if (!img ||
       img->xsize()!=1000 ||
       img->ysize()!=1000) fail("wrong size");
   if (img!=({17,42,96})) fail("wrong color");
   ok();

//-----------------------------------------------------------------------
#chapter testsuite II

#test Image.image->test(), ==
   object img=Image.image(10,10);
   img=img->test();
   if (equal(img->max(),({0,0,0}))) fail("failed");
   img->setpixel(2,2,0,255,0);
   if (img==img->invert()) fail("failed");
   ok();
   
//-----------------------------------------------------------------------
#chapter copy

#test Image.image->copy
   object img=Image.image(100,100)->test();
   if (img!=img->copy()) fail("differ");
   if (img->copy(25,25,75,75)!=img->copy(25,25,75,75)) fail("subregion differ");
   if (img->copy(25,25,75,75)==img) fail("subregion doesn't differ");
   img->setpixel(2,2,0,255,0);
   if (img->copy()==img->invert()->copy()) fail("copy of other doesn't differ");
   ok();

#test Image.image->clear
   object img=Image.image(100,100)->test();
   if (img->clear()==img) fail("doesn't differ");
   if (img->clear(0,0,0)!=0) fail("wrong color (black)");
   if (img->clear(1,255,0)!=({1,255,0})) fail("wrong color (color)");
   ok();

#test Image.image->clone
   object img=Image.image(100,100)->test();
   if (img!=img->clone()) fail("differ");
   img->setpixel(2,2,0,255,0);
   if (img->clone()==img->invert()->clone()) fail("clone of other doesn't differ");
   ok();

//-----------------------------------------------------------------------
#chapter testsuite III

#test equal, copy_value
   array a=({0,0,0});
   array b=copy_value(a); b[0]=17; b[1]=42; b[2]=128;
   if (!equal( ({0,0,0}), a)) fail("differ (1)");
   if (!equal( ({17,42,128}), b)) fail("differ (2)");
   ok();

#test Image.image->max()
   if (!equal( ({0,0,0}), 
	       Image.image(10,10,0,0,0)->max() ))
      fail("erranous (1)");
   if (!equal( ({17,42,36}), 
	       Image.image(10,10,17,42,36)->max() ))
      fail("erranous (2)");
   if (!equal( ({17,42,36}), 
	       Image.image(10,10,0,0,0)
	       ->setpixel(5,5,17,42,36)->max() ))
      fail("erranous (3)");
   if (!equal( ({17,42,36}), 
	       Image.image(10,10,0,0,0)
	       ->setpixel(2,2,1,2,3)
	       ->setpixel(3,3,17,42,36)
	       ->setpixel(4,4,3,2,1)
	       ->max()))
      fail("erranous (4)");
   if (!equal( ({17,42,36}), 
	       Image.image(10,10,0,0,0)
	       ->setpixel(2,2,17,2,3)
	       ->setpixel(3,3,2,42,5)
	       ->setpixel(4,4,3,2,36)
	       ->max()))
      fail("erranous (5)");
   ok();

//-----------------------------------------------------------------------
#chapter plain

#test setpixel, getpixel
   object img=Image.image(10,10,255,0,0);
   if (!equal(img->getpixel(5,5),({255,0,0}))) fail("getpixel erranous");
   img->setpixel(5,5,1,2,3);
   if (!equal(img->getpixel(5,5),({1,2,3}))) fail("failed");
   ok();

#test setpixel alpha
   object img=Image.image(10,10,255,0,0);
   img->setpixel(5,5,0,255,0,127);
   if (!equal(img->getpixel(5,5),({127,128,0}))) fail("failed");
   ok();

#test Image.image->line structure
   object img=Image.image(100,100,0,0,0);
   foreach (({40,50,60}),int z)
   { 
      img->line(50-z,0,50,50,255,255,255);
      img->line(50-z,100,50,50,255,255,255);
      img->line(100,50+z,50,50,255,255,255);
      img->line(100,50-z,50,50,255,255,255);
   }
   object img1=Image.GIF.decode(MIME.decode_base64(
      "R0lGODlhZABkAIAAAAAAAP///ywAAAAAZABkAAAC/wxwiGC7/l6UktZ6Mdatdr9toSiSZQmCjPihqPu+MdLST23Lsr7vGF7DrXw+YhEF3AiFx2NTFiwtnU5qMYpUVqvbrAT7/XG5Y3HYfD6TyWsw+vZms68qaTw3n/tazE/AvcCkpwcH95OkFkhIaGdYdwfIyDikePeIVzk5yacFdUmpOcfpIUiaiBnK5Wfp6YiaerT6SecKCrtX++o0mnnb+vrHyKvr+xgpKttbbDxLmGy77Hi86VoK28FnrfesTY3a7VwdjTc8HowJToZ9Ok6unLoemA6fOR+L3u5Fab/T8JzfaR89UPyKnYsnjFzBaP6IVWnoEGAjiKLcSXyYY6EihP8Xd2VkY8Cfxo7BKN4z2RHkCn4hI6Y8CS0LypcVW/ZbOZImCJsvSuq85hMJz5/wzrEYSrRonz85kwoFYtSpwagMqEr1xfRG06u4aGzliusrWFpjASIta1Ae2qnYrK51RjXr201u5c5FttTt3X561YqVmtVa0L2ezooxTDgM4sNVE2tZ/Njl25Ysh/zNF7SgzcsMP6qzzPkWxJEUQ4caHU4gWtQJVXM9+E7lPtOq6g38RxNhaJO0u7oeSFCn7mUc+07t1ft3zLTI23Fcfk0cZmXJg8cmTp02N5K5OEctN/3d33LVWXT3Rv0nbuM3a5XvmQv6r2+A47ME/35+zHmR8rdPj82eeM2ox45k/a1WoHwHrgWeLlYhwmCC31ni32cJWkYhYdM4yAqCEmboGDTdTBGiiPB1eNeGy1UIXHwrljjLNCxi9UYfMAZkiI034hhIAQA7"));
   if (img!=img1) fail("differ");
   ok();

#test Image.image->line color 
   object img=Image.image(100,100,0,0,0);
   img->line(40,0,0,40);
   if (!equal( ({0,0,0}), img->max() )) fail("differ (reset)");
   img->line(10,10,20,20,128,13,42);
   if (!equal( ({128,13,42}), img->max() )) fail("differ (direct)");
   img->setcolor(200,19,99);
   img->line(30,20,20,30);
   if (!equal( ({200,19,99}), img->max() )) fail("differ (setcolor)");
   ok();

#test Image.image->box structure
   object img=Image.image(100,100,0,0,0);
   foreach (({40,60,50}),int z)
   { 
      img->box(z,0,50,50,255,z,255);
      img->box(z,100,50,50,255,z,0);
      img->box(100,z,50,50,0,z,255);
      img->box(0,z,50,50,0,z,0);
   }
   object img1=Image.GIF.decode(MIME.decode_base64(
      "R0lGODlhZABkALMAAAAAAAAyAAA8AAAoAP8oAP8yAAAo/wAy/wA8//88AP8o//8y//88/wAAAAAAAAAAACwAAAAAZABkAAME/xAAOWe1Fue8OVAKGIbhwjAniqKe17ouHMcznZEkbq7rats/IFA4nORypV6PVSw2nU4bErlb+qJRbDY7zVWtjO1WPKZ1SV9rubxmf86K9NLtpkfhcfC1XudL4XI9fX2DZoB6TISEijeHiIuLkBZ4gXuRkYSUiGGYmJmOep6efZqPo6NspaGoqGOqYK2tW69qsrJOtHO3t0O5gry8f2eVicHBHr6Wx8eToLDMzI3Dm9HRzdOm1tHJxdrB3Jzex+DizOTl38616Lfn7LLu76jx8p709ZH3+J/Yq/uY+v65CSiwDMGCs9TpYjZgQEOHDiFGjDiRIkWLFy9mJMbAgAGPH/8/hhQpkmTJkidRatS4kiVLly8HcESJkmbNmjdLxoy5kydPhzNx4hQ6dOjPn0eRUgxatGjTokqVRuXJ1KlTqyqlStWqserVq18NbN06dukmsGDRfiRLlq3Ms2nTgm3blqxXuXJr1q0r9W7evCIDBBA8eHBhw4YRJ068mDFjxwEOHJA8eXJly5YxZ868mTNnzgIEhBYtmnTp0qdRo1a9enXrAggQxJYtm3bt2rdx49a9e/du166BBw8+nLgA2L59J1eunLly48ahR48uGnnz5texY8dNnXp376itb98+njx38ODRGxdv3nz75unTxw/O3r17++fly9df/f59/77tt5/lgMf995+BtQ044H71HXggeQsumF6DDz7YnDYEEJChhhpqWEACCYAYYoghIrRIhx2i+CGJJJJoIiEppuhhiy2W+GIdMsq4Yo0u3uhGjinuyGMCPv4I5IxD2ljkGEcimeSSZTRJgJA8Qslkk1TWaOUWUmbZ4pZZdJmkkmAOIeaYZTpx5pNpmonlmES2CcSaQ8o555to2kkDnVXqGQOfWvrpAqBfCuoBoT0amgGiZCoKAKNxOjoBpJJaQGmlj+LJZqWXcqppnZh2KqmojpKqqKmGoiqoqn6yqqerdsIqp6xt0pqmrYtEAAA7"));
   if (img!=img1) fail("differ");
   ok();

#test Image.image->box color 
   object img=Image.image(100,100,0,0,0);
   img->box(40,0,0,40);
   if (!equal( ({0,0,0}), img->max() )) fail("differ (reset)");
   img->box(10,10,20,20,128,13,42);
   if (!equal( ({128,13,42}), img->max() )) fail("differ (direct)");
   img->setcolor(200,19,99);
   img->box(30,20,20,30);
   if (!equal( ({200,19,99}), img->max() )) fail("differ (setcolor)");
   ok();

//-----------------------------------------------------
#chapter advanced drawing

#test Image.image->polyfill 1 (right triangle 0.0, 0.2)
   object img=Image.image(100,100,0,0,0);
   float x=0,y=0.2;
   img->setcolor(255,254,253);
   img->polygone(({10+x,15+y,15+x,10+y,15+x,15+y}),
		 ({20+x,15+y,25+x,15+y,20+x,10+y}),
		 ({10+x,20+y,15+x,20+y,15+x,25+y}),
		 ({20+x,25+y,25+x,20+y,20+x,20+y}),
		 
		 ({30+2*10+x,15+y,30+2*15+x,10+y,30+2*15+x,15+y}),
		 ({30+2*20+x,15+y,30+2*25+x,15+y,30+2*20+x,10+y}),
		 ({30+2*10+x,20+y,30+2*15+x,20+y,30+2*15+x,25+y}),
		 ({30+2*20+x,25+y,30+2*25+x,20+y,30+2*20+x,20+y}),
		 
		 ({10+x,30+2*15+y,15+x,30+2*10+y,15+x,30+2*15+y}),
		 ({20+x,30+2*15+y,25+x,30+2*15+y,20+x,30+2*10+y}),
		 ({10+x,30+2*20+y,15+x,30+2*20+y,15+x,30+2*25+y}),
		 ({20+x,30+2*25+y,25+x,30+2*20+y,20+x,30+2*20+y}));

   object img1=Image.GIF.decode(MIME.decode_base64(
      "R0lGODlhZABkAMQAAAAAAAICAgUFBQoKChYWFigoKC0tLTAwMDIyMjMyMj8/P1lYWFFRUHJycXp5eYyLi6OioaWlpK2srLW0s8vLyszLytbV1Ojn5vTz8vn49/z7+v/+/QAAAAAAAAAAAAAAACwAAAAAZABkAAQF/yAAiONYmiaapivLuu8byzJd1zeO6/ve+z5gMDgkEo3HY1KpZDabTyhUOp1WrVZsNrvlcr3fb1gsJpfLZzRafWSw3Osd4bF7EOLtDCsDx6fmGBs7Gxh2fjgMGYIpG3yHAIAbG4s1k4SGjyaJkyyTjnGRlpQyopd3j5ucjJ59X6Glg6WmhwYICLYst7cGaAW6uro7wMAIBZmZx8jIysvLzc7O0GUOFBTVLNbWDmgKE9nZ1jvg4BMKhwISlp2TEgJrAw0XsrGiFw0DmeiqJuzuePDy1OGod8+Zvk7tMgHcR2qDPXzRAKBjkXAZwB0PI6bwZ4KjM4g1QGrUOJIkSZMnT+6mVKmSZcuWL2HClDlzZk2bNnHmzLmTJ0+fP38GFSqUaNGiR5EiVbp0aVOnTqFGjTqV6hdjKbBadRaBRdetywpoYKFBK9hDEUYB2PD1rB+xajeUdesnbVy2dOPAvTs3bxm7d/H6vapBIL9JfQdbARxYsOIpBxIkkMxi8uQDjx9n1qyZc+fOn0GDFj169CMI4LBlg2D6yAJR6yYtaE0kgAXDIyxZCECbyGuGa2X3rn377u7hvoELRx7EdtzjzIO87jQ7enMLLKBb91HdRPftO3inEA8efHnz5tGnT7+ePXv379/Hly+ffv369/HjPxQCADs="));
   if (!(img-img1<16)) fail("differ too much");
   if (!equal(img->max(),({255,254,253}))) fail("wrong maxcolor");
   ok();

#test Image.image->polyfill 2 (right triangle -0.2, -0.2)
   object img=Image.image(100,100,0,0,0);
   float x=-0.2,y=-0.2;
   img->setcolor(255,254,253);
   img->polygone(({10+x,15+y,15+x,10+y,15+x,15+y}),
		 ({20+x,15+y,25+x,15+y,20+x,10+y}),
		 ({10+x,20+y,15+x,20+y,15+x,25+y}),
		 ({20+x,25+y,25+x,20+y,20+x,20+y}),
		 
		 ({30+2*10+x,15+y,30+2*15+x,10+y,30+2*15+x,15+y}),
		 ({30+2*20+x,15+y,30+2*25+x,15+y,30+2*20+x,10+y}),
		 ({30+2*10+x,20+y,30+2*15+x,20+y,30+2*15+x,25+y}),
		 ({30+2*20+x,25+y,30+2*25+x,20+y,30+2*20+x,20+y}),
		 
		 ({10+x,30+2*15+y,15+x,30+2*10+y,15+x,30+2*15+y}),
		 ({20+x,30+2*15+y,25+x,30+2*15+y,20+x,30+2*10+y}),
		 ({10+x,30+2*20+y,15+x,30+2*20+y,15+x,30+2*25+y}),
		 ({20+x,30+2*25+y,25+x,30+2*20+y,20+x,30+2*20+y}));

   object img1=Image.GIF.decode(MIME.decode_base64(
      "R0lGODlhZABkANUAAAAAAAICAgUFBQcHBwoKChQUFBYWFh4eHiMjIyYmJS0tLTAwMDMyMigoKFFRUFlYWHp5eX9+fnJycYyLi56dnDIyMqOioaWlpMHBwMvLyszLytHQz9bV1Orp6Ojn5vTz8vz7+v/+/QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAZABkAAUG/0AAQDgcFo1GZDK5ZDKdz2dUKqVWq1csVrvddr1ecDg8JpPN53NarWa32284XD6f1+12fD6/5/P9f3+BgoKEhYVqAkmKiGQEWAMBjW0FFEkMEZNYBhMYWBUcD5KaWwUbGZchmaRGnB8hqFUVISGho6xJprCpqqyutLuywLWiuEO6wUMMwKuIv8OxUrPDxLeTAhQZGRkWSQ3b2w6FAQ8Y4ODcWN/o4BYNxsbw8fHz9PT29/f5ggIMDP7vjBD49w/BuAUECf4LKGWgQoUHWEUAFg3AMlodFCBqcAEEtWRPplHzIOGRRFoVL2bUxNEjxU8jS9KbmDLESlYtUcKkRdLkvf8IKW8aa1mRyaye+pKIM4JAo74GELAkkJk0aVWrVrFmzbqVK1evX7+GFSuWbNmyZ9GiVbt2bVu3buHGjTuXLl27d+/m1auXb9++fwEDFjx4cGHDhvlYs5b43oMkCxg2jmfAkxEGFybfm5AShGTNmgx8qJkZNKsJIJd5Nh36Vc0QpVkjQp2a1mrZgkTrvAwsNu48tGvb/vxbDQFz27oZWbctavHiz6FDlz59enXr1rFnz152QIUK3yUTAA8+AfczATi85A1MwvkzD9YrA+bB5/st6XfPp+X+Ppn4wtXnHxn5vdbfgGHEV5OACIaRXk0HNujFAykxKKEXASinTIQXbiEk2QH2ddihiCOOWKKJJqKYYoorssiiiy++GKOMMtJYY4034hYEADs="));
   if (!(img-img1<16)) fail("differ too much");
   if (!equal(img->max(),({255,254,253}))) fail("wrong maxcolor");
   ok();

   
#test Image.image->polyfill 3 (hollow stars)
   object img=Image.image(100,100,0,0,0);
   int i;

   array a=({}),b=({});
   foreach (({0,1,2,3,4}),i)
   {
      a+=({ 50+50*sin(i*2*3.1415926535/5+0.11),
	    50+50*cos(i*2*3.1415926535/5+0.11) });
      a+=({ 50+19*sin((i+0.5)*2*3.1415926535/5+0.11),
	    50+19*cos((i+0.5)*2*3.1415926535/5+0.11) });
      b+=({ 50+19*sin(i*2*3.1415926535/5+0.1),
	    50+19*cos(i*2*3.1415926535/5+0.1) });
      b+=({ 50+0.5*5*sin((i+0.5)*2*3.1415926535/5+0.1),
	    50+0.5*5*cos((i+0.5)*2*3.1415926535/5+0.1) });
   }

   img->setcolor(128,0,16);
   img->polyfill(a,b);

   a=({}),b=({});
   foreach (({0,1,2,3,4,5,6}),i)
   {
      a+=({ 50+50*sin(i*2*3.1415926535/7+0.11),
	    50+50*cos(i*2*3.1415926535/7+0.11) });
      a+=({ 50+19*sin((i+0.5)*2*3.1415926535/7+0.11),
	    50+19*cos((i+0.5)*2*3.1415926535/7+0.11) });
      b+=({ 50+0.9*50*sin(i*2*3.1415926535/7+0.11),
	    50+0.9*50*cos(i*2*3.1415926535/7+0.11) });
      b+=({ 50+0.5*19*sin((i+0.5)*2*3.1415926535/7+0.11),
	    50+0.5*19*cos((i+0.5)*2*3.1415926535/7+0.11) });
   }

   img->setcolor(255,128,0);
   img->polyfill(a,b);

   object img1=Image.GIF.decode(MIME.decode_base64(
      "R0lGODlhZABkAPcAAAAAAAEAAAIBAAQAAAIAAAMBAAUAAAQCAAUCAAMAAAcAAAgAAQYAAAcDAAkAAQsAAQwAAQsBAAoAAQkEAAoFAAsFAAwGAAgEAA0AAQ4AAQ8AARAAAhIAAhMAAhADABEAAhQAAhUAAhYAAhgAAxoAAxsAAw0GAA8HABEIABAIABEJABIJABMKAA4HABcAAhcIABUKABQKABYLABcLABkMABgMABoNABsNABwAAx0AAx4AAx8AAx0EASAABCEABCIABCQABCUABCYAAyQCAiYABCcABCgABSkABSsABSoABSwABS4ABS8ABTAABjEABjIABjAEBDMABjUABjcABjgABzcCBTYABjkABzoABzsABz0ABz4ABxwOAB0OAB4PAB0PAB8PACAQACEQACIRACMRACQSACcPACYTACcTACUSACgUACkUACkVACsWACoVACwWAC0WAC0XADEPAS4XAC8XADEYADIZADkHBDMaADUaADcbADYbADodADgcADweAD0eAEMACEQLBUkACE4ACU8ACFcAClkACmAACmAAC2gADGkADHAADXUADncADnkADnwAD0IXAUEfAEMhAEolAEokAFAnAFgnAFksAFcpAF4vAHQVB3QeBGEwAGYyAGkzAHY3AEoACX4AD38ADn8AD4AAEIAAD4EBD4ICD4MDD4MEDoUFD4cIDYoLDosKDosIDo4NDpEQDZMUDJYVDZkZDJsdC58fDKEgC6QgC6cnCqkpCqAvBqwrCq0yCLMyCbQzCLg3CHY7AH1AAH9BAIhFAI1IAJRKAJpGAp5QAHk8AKxLArw9B79GBapWALNbAL5bAb9hAMdHBs1NBs9RBNVWBNJTBM1kANtcBOJjAtBpANhsANpuAOFwAOhpAuptAeZzAOt2AadTAO9vAfBxAfByAfB4AO92APF5APNzAfN0AfV2AfF3APN6APN5APV6APd4APh5APd8APh7APl6APp7APl9APt8APp9APt+APx9APx+AP1+AP1/AO93AP5/AP5+AP+AACwAAAAAZABkAAcI/wABABA4cGBBgwYRJky4kCFDhw8fRpQokWLFihcxYtS4cWNHjx5Bhgw5kqTEACZNplSpkiXGA5datpQ5c6ZKZMBs2tS5c2dCN/Ay+fQ5lKjJAtX+SZIowajRhC2etgQG79+ch0EASZW6x9PW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"));

   
   if (!(img-img1<16)) fail("differ too much");
//    known failure
//    if (!equal(img->max(),({255,128,16}))) 
//       fail("wrong maxcolor ("+img->max()[0]+","+img->max()[1]+","+img->max()[2]+")");
   ok();


#test Image.image->polyfill 4 (star)
   int i;
   array a=({});
   foreach (({0,1,2,3,4}),i)
   {
      a+=({ 50+50*sin(i*2*3.1415926535/5+0.11),
	    50+50*cos(i*2*3.1415926535/5+0.11) });
      a+=({ 50+20*sin((i+0.5)*2*3.1415926535/5+0.11),
	    50+20*cos((i+0.5)*2*3.1415926535/5+0.11) });
   }

   object img=Image.image(100,100,0,0,0);
   img->setcolor(128,0,16);
   img->polyfill(a);

   object img1=Image.GIF.decode(MIME.decode_base64(
"R0lGODlhZABkAOYAAAAAAAIAAAEAAAQAAAUAAAYAAAMAAAgAAQkAAQoAAQsAAQwAAQ0AAQ4AAQ8AAQcAABAAAhEAAhIAAhMAAhUAAhQAAhYAAhcAAhgAAxkAAxoAAxsAAxwAAx0AAx4AAx8AAyAABCEABCIABCMABCQABCUABCYABCcABCgABSkABSoABSsABSwABS0ABS4ABS8ABTAABjEABjIABjMABjQABjUABjYABjcABjgABzkABzoABzsABzwABz0ABz4ABz8AB0AACEMACEIACEYACEcACEgACUkACUoACUsACUwACU0ACU4ACU8ACVAAClIAClEAClMAClUAClgAC1cAClkAC1YAClsAC1wAC10AC14AC18AC2AADGEADGIADGMADGQADGUADGYADGcADGgADWkADWoADWsADWwADW0ADW4ADW8ADXAADnEADnMADnQADnUADnIADncADngAD3kAD3YADnoAD3sAD3wAD0EACH0AD38AD34AD4AAEAAAAAAAAAAAACwAAAAAZABkAAYH/4AAAIKDg4WGhoiJiYuMjI6Pj5GSkpSVlZeYmJqbm52enqChoaOkpKanp6mqqqytra+wsLKzs7W2tri5ubu8hgq+vsHClSpFxMTIxDl6NMnJz7YCRnx8HNDQ2KoEUtV6BdnZ4Z4KX9V8aOLi6pUTaud8UeukKC3zsx508Hw9954HdcKI8EdqxZ19fEoQ3ISEj54rFxZW2qEHIZ8GEitRqMhnzxMHGQcJaGiRTshKWeDdGXJAIgEqFqtlOSnpBMI4Owb4UxAmZrUhNB8JeIeQzQsB6yoQ9eki6CMdPsmQyPYhjs9zEZ0mAnhViwZiLQ5e5XMngFZGSsbqgRKBFw+OY//FnGVkAa7PO0USwBo5Fh6TuYy09K0mpweBUwWsDD6HA3AiFIurwZGBdNMCMZGrgXBsSMCazHzMnMBE4XNmPS05D9oBuhqXa4xAyGm9RrUhBHZaO6wywZALsaCl2Da0RHe1PEgU+LCbGc/wQReYg85jvFqK54O2VK9+ri12Fdy5z8E+KACb8Ma5kB/EA73uI+sBJMjtPrOM+ACY1M/8NT4G6ftZtIdO+HURYF9l4DfICgeOBYWCAAQAR4M+7QAhAD1QGNN1ECYAnIbn1MGDARA2AaJFZ4yg4H8nIqRHFSDF50WLFtXRA4nYdTAbjRahMdVwItTBo096SAGBaid8OKT/RXb8QOBZLVC3ZF9pmHDWDHtMGRkV3p3EjJaZ2QHEkwv9ACCYY6kx2kJDoFmdFRLcw5eb1d0hxGHZBOAEneitwSExBnTDp3tX9OYLAVgMut8dQeA5ywMGKhogGyrMkkBPkjaYRQWqMFBGpvXdgcYVSOigggWnQJAGqK3p0UYXT+ABwwcNVAZLBROyetUcY0hBhA0lUECmLxi8oes5eaiRhRI8sLCBXv5wYFWmaUARhAwhQGDWSSHMwaqVZ5lAX6Z6IHDWClJyZ8caX1ChhBA2nFGdGWfFkGVfetSRhhdTIAFEDSl4IMEDkrxQ3RJa3QCXHnKgwUUVR/wwAwocROCo1ioBmNZaDE5F0IMMJmzgwLDJ1GAcpxfOMoAbrZmUsi2sgUbFy7YUMG1kPNBsCx6gfaCzpUIulgfJP4dCRGRfFD0LA0r6RITSs6Q1WKVQtyLBvVfpwUDVsEDRlxpcwxLdWE6EDQtMV9VgdisdnFkNBmu3ol1Mc9gadygj+ITF3a2AERMQfKuSQkwqBn6KGQjtQbDhpBi8zxiMnxLAUtUgEfkpJsPT1OWhrAzPkZyHEjMfbYROis3VVGE6KTzzkcPqoSAgJGywb0KEHTjWjgkDM+nuCQVzBQIAOw=="));

   if (!(img-img1<16)) fail("differ too much");
   if (!equal(img->max(),({128,0,16}))) 
      fail("wrong maxcolor ("+img->max()[0]+","+img->max()[1]+","+img->max()[2]+")");
   ok();

//-----------------------------------------------------
#chapter colortable

#test colortable - standard
   object img=Image.image(200,200)->test();
   img->tuned_box(50,50,150,150,({({0,0,0}),({255,0,0}),({0,255,0}),({0,0,255})}));
   object c=Image.colortable(img,1000)->cubicles(16,16,16,4);
   if (sizeof(c)<200) fail("too few colors");
   object img1=(c*img);
   if (!(img-img1<50)) fail("differ too much ("+(img-img1)->max()[0]+","+(img-img1)->max()[1]+","+(img-img1)->max()[2]+","+")");
   ok();

#test colortable - floyd-steinberg
   object img=Image.image(200,200)->test();
   img->tuned_box(50,50,150,150,({({0,0,0}),({255,0,0}),({0,255,0}),({0,0,255})}));
   object c=Image.colortable(32,32,32)->floyd_steinberg();
   object img1=(c*img);
   if (!(img-img1<50)) fail("differ too much ("+(img-img1)->max()[0]+","+(img-img1)->max()[1]+","+(img-img1)->max()[2]+","+")");
   ok();
   
#test colortable - ordered
   object img=Image.image(200,200)->test();
   img->tuned_box(50,50,150,150,({({0,0,0}),({255,0,0}),({0,255,0}),({0,0,255})}));
   object c=Image.colortable(32,32,32)->ordered();
   object img1=(c*img);
   if (!(img-img1<32)) fail("differ too much ("+(img-img1)->max()[0]+","+(img-img1)->max()[1]+","+(img-img1)->max()[2]+","+")");
   ok();


//-----------------------------------------------------
#chapter encoding/decoding

#test Image.PNM.encode/decode
   object img=Image.image(100,100)->test();
   object img1=Image.PNM.decode(Image.PNM.encode(img));
   if (img!=img1) fail("differ");
   ok();

#test Image.GIF.encode/decode
   object img=Image.image(100,100)->test();
   object c=Image.colortable(img,250)->cubicles(10,10,10,1)->floyd_steinberg();
   img=c*img;
   object img1=Image.GIF.decode(Image.GIF.encode(img));
   if (img!=img1) fail("differ ("+(img-img1)->max()[0]+","+(img-img1)->max()[1]+","+(img-img1)->max()[2]+","+")");
   ok();

#test Image.GIF.encode/decode colortable 
   object img=Image.image(100,100)->test();
   object c=Image.colortable(img,256)->cubicles(16,16,16,1);
   img=c*img;
   object img1=Image.GIF.decode(Image.GIF.encode(img,c));
   if (img!=img1) fail("differ ("+(img-img1)->max()[0]+","+(img-img1)->max()[1]+","+(img-img1)->max()[2]+","+")");
   ok();

#test Image.GIF.encode/decode colortable w/ floyd-steinberg
   object img=Image.image(100,100)->test();
   object c=Image.colortable(img,256)->floyd_steinberg()->cubicles(16,16,16);
   img=c*img;
   object img1=Image.GIF.decode(Image.GIF.encode(img,c));
   if (!(img-img1<50)) fail("differ too much ("+(img-img1)->max()[0]+","+(img-img1)->max()[1]+","+(img-img1)->max()[2]+","+")");
   ok();

