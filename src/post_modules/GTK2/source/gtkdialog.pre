/* -*- C -*- */
class GTK2.Dialog;
inherit GTK2.Window;

//! A dialog is a window with a few default widgets added.
//! The 'vbox' is the main content area of the widget. The
//! 'action_area' is allocated for buttons (ok, cancel etc)

//! Properties:
//! int has-separator
//! <p>
//! Style properties:
//! int action-area-border
//! int button-spacing
//! int content-area-border

signal close;
signal response;

void create(?mapping(string:mixed) props)
//! Create a new dialog widget.
{
  pgtk2_verify_not_inited();
  pgtk2_verify_setup();
  if (args) {
    INIT_WITH_PROPS(GTK_TYPE_DIALOG);
    pgtk2_pop_n_elems(args);
  } else {
    GtkWidget *gd;
    gd=gtk_dialog_new();
    THIS->obj=G_OBJECT(gd);
  }
  pgtk2__init_this_object();
}

int run();
//! Run the selected dialog.

void response(int response_id);
//! Emits the "response" signal with the given response ID.

+GTK2.Widget add_button(string button_text, int response_id);
//! Adds a button with the given text (or a stock button)
//! and sets things up so that clicking the button will emit
//! the "response" signal with the given response_id.

void add_action_widget(GTK2.Widget child, int response_id);
//! Adds an activatable widget to the action area, connecting
//! a signal handler that will emit the "response" signal on
//! the dialog when the widget is activated.

int get_has_separator();
//! Accessor for whether the dialog has a separator.

void set_default_response(int response_id);
//! Sets the last widget in the action area with the given response_id as the
//! default widget.  Pressing "Enter" normally activates the default widget.

void set_has_separator(int setting);
//! Sets whether this dialog has a separator above the buttons.  True by
//! default.

void set_response_sensitive(int response_id, int setting);
//! Calls GTK2.Widget->set_sensitive() for each widget in the dialog's action
//! area with the given response_id.

require gtk28;
int get_response_for_widget(GTK2.Widget widget);
//! Gets the response id of a widget in the action area.
endrequire;

member GTK2.Vbox vbox;
//! The vertical box that should contain the contents of the dialog
member GTK2.HbuttonBox action_area;
//! The action area, this is where the buttons (ok, cancel etc) go
