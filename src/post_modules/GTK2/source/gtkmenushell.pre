/* -*- C -*- */
class GTK2.MenuShell;
inherit GTK2.Container;

//! A GTK2.MenuShell is the abstract base class used to derive the
//! W(Menu) and W(MenuBar) subclasses.
//! <p>
//! A GTK2.MenuShell is a container of W(MenuItem) objects arranged in a
//! list which can be navigated, selected, and activated by the user to
//! perform application functions. A W(MenuItem) can have a submenu
//! associated with it, allowing for nested hierarchical menus.
//! </p>

signal activate_current;
//! An action signal that activates the current menu item within the
//! menu shell.
signal cancel;
//! An action signal which cancels the selection within the menu
//! shell.  Causes the selection-done signal to be emitted.
signal cycle_focus;
signal deactivate;
//! This signal is emitted when a menu shell is deactivated.
signal move_current;
//! An action signal which moves the current menu item in the direction
//! specified.
signal move_selected;
signal selection_done;
//! This signal is emitted when a selection has been completed within a
//! menu shell.

void append(GTK2.Widget what);
//! Adds a new W(MenuItem) to the end of the menu shell's item
//! list. Same as 'add'.

void prepend(GTK2.Widget what);
//! Add a menu item to the start of the widget (for a menu: top, for a
//! bar: left)

void insert(GTK2.Widget what, int where);
//! Add a widget after the specified location

void deactivate();
//! Deactivates the menu shell. Typically this results in the menu
//! shell being erased from the screen.

void select_item(GTK2.Widget menuitem);
//! Selects the menu item from the menu shell.

require gtk22;
void select_first(int search_sensitive);
//! Select the first visible or selectable child of the menu shell;
//! don't select tearoff items unless the only item is a tearoff item.
endrequire;

void deselect();
//! Deselects the currently selected item from the menu shell, if any.

void activate_item(GTK2.Widget menu_item, int force_deactivate);
//! Activates the menu item within the menu shell.

array(GTK2.MenuItem) get_children()
//! This function returns all children of the menushell as an array.
{
  GList *g;
  int n=0;
  pgtk2_pop_n_elems(args);
  g=GTK_MENU_SHELL(THIS->obj)->children;
  while(g) {
    push_gobjectclass(GTK_MENU_ITEM(g->data),pgtk2_menu_item_program);
    g_object_ref(g->data);
    n++;
    g=g_list_next(g);
  }
  f_aggregate(n);
}

require gtk24;
void cancel();
//! Cancels the selection within the menu shell.
endrequire;

require gtk28;
void set_take_focus(int setting);
//! If setting is TRUE (the default), the menu shell will take the keyboard
//! focus so that it will receive all keyboard events which is needed to enable
//! keyboard navigation in menus.

int get_take_focus();
//! Returns TRUE if the menu shell will take the keyboard focus on popup.
endrequire;
