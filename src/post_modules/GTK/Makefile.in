# This line is needed on some machines.
@make_variables@
VPATH=@srcdir@:@srcdir@/../..:../..:.
MODNAME=GTK
DEST=@prefix@/lib/pike/modules/
OBJS=dummy.o
MODULE_LDFLAGS=@LDFLAGS@ @LIBS@ @DATABOX_LIBS@ @PGTK_LIBS@ @GNOME_LIBS@ @LIBGLADE_LIBS@
MODULE_CFLAGS=@PGTK_CFLAGS@ @GNOME_CFLAGS@ @LIBGLADE_CFLAGS@
CONFIG_HEADERS=config.h
MODULE_CLEAN_EXTRA=pgtk*.c

# OK.. This is somewhat confusing
#
# WITH_GTK == 1
#   override -> sources1 -> [SET OBJS] -> all
#
# WITH_GTK == 0
#   override -> sources0 -> all
#

MYRUNPIKE=../../pike -DNOT_INSTALLED -m../../master.pike


override:  sources@WITH_GTK@
	@:

@dynamic_module_makefile@

sources1:
	$(RUNPIKE) $(SRCDIR)/make_sources.pike $(SRCDIR)/source
	$(MAKE)  \
         CFLAGS="`echo $(CFLAGS) | sed -e 's/-g//g' -e 's/-W[^ ]*//g' -e 's/-O[^ ]*//g'` -O"  \
         SOURCES="`cat sources`" doit

always_build_files_to_compile: $(SOURCES)
	$(RUNPIKE) $(SRCDIR)/build_pgtk.pike $(SRCDIR)

doit: always_build_files_to_compile
	@$(MAKE) OBJS="`cat files_to_compile`" all

sources0:
	@echo "Pike-GTK disabled."
	$(MAKE) all

docs: docs@WITH_GTK@
	@:

wmml: wmml@WITH_GTK@
	@:

docs1:
	-@mkdir xmldocs
	-$(MYRUNPIKE) $(SRCDIR)/dump_cursors.pike xmldocs/cursor_
	$(MYRUNPIKE) $(SRCDIR)/build_pgtk.pike $(SRCDIR) docs


docs0:
	@echo "Pike-GTK disabled."

wmml1:
	-@mkdir wmml
	-@mkdir wmml/gtkimg
	-$(MYRUNPIKE) $(SRCDIR)/dump_cursors.pike wmml/gtkimg/cursor_
	$(MYRUNPIKE) $(SRCDIR)/build_pgtk.pike $(SRCDIR) --wmml


wmml0:
	@echo "Pike-GTK disabled."
pgtk_globals.o: pgtk_globals.c	 Makefile
	@echo Building pgtk_globals.o with optimization $(OPTIMIZE); \
	if $(CC) $(CFLAGS) $(OPTIMIZE) -c $< -o $@ ; then : ;\
	else \
	  echo "WARNING: Compiler failure! Trying without optimization!" >&2;\
	  echo "echo $(CC) $(NOOPT_CFLAGS) -c $< -o $@" >&2;\
	  NO_ULIMIT=yes $(CC) $(NOOPT_CFLAGS) -c $< -o $@ ;\
	fi


#
# Many machines have problems compiling this file with full optimization.
#
pgtk.o: pgtk.c Makefile
	@echo "Compiling $< with less optimization" ;\
	if $(CC) $(NOOPT_CFLAGS) -c $< -o $@ ; then : ;\
	else \
	  echo "WARNING: Compiler failure! Trying without optimization!" >&2;\
	  echo "echo $(CC) $(NOOPT_CFLAGS) -c $< -o $@" >&2;\
	  NO_ULIMIT=yes $(CC) $(NOOPT_CFLAGS) -c $< -o $@ ;\
	fi


# Some hand-made dependencies:
$(OBJS) : \
 $(SRCDIR)/../../global.h \
 $(SRCDIR)/../../svalue.h \
 $(SRCDIR)/../../program.h \
 $(SRCDIR)/../../pike_types.h \
 $(SRCDIR)/../../interpret.h \
 $(SRCDIR)/../../module_support.h \
 $(SRCDIR)/../../error.h \
 $(SRCDIR)/../../array.h \
 $(SRCDIR)/../../backend.h \
 $(SRCDIR)/../../stralloc.h \
 $(SRCDIR)/../../mapping.h \
 $(SRCDIR)/../../object.h \
 $(SRCDIR)/../../threads.h \
 $(SRCDIR)/../../operators.h
