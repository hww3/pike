AC_INIT(build_pgtk.pike)
AC_CONFIG_HEADER(config.h)

AC_MODULE_INIT()

AC_CHECK_FUNCS( gethrtime signal sigaction )

dnl Force prototypes from X's headerfiles.
AC_DEFINE(FUNCPROTO)

AC_HEADER_STDC
AC_CHECK_HEADERS( signal.h netinet/in.h arpa/inet.h )

AC_ARG_WITH(GTK, [  --without-GTK           no support for GTK],[],[with_GTK=yes])

if test "x$with_GTK" = "xyes" ; then

dnl AM_PATH_LIBGLADE([ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]])
dnl Test to see if libglade is installed, and define LIBGLADE_CFLAGS, LIBS
dnl
AC_DEFUN(AM_PATH_LIBGLADE,
[dnl
dnl Get the cflags and libraries from the libglade-config script
dnl
AC_ARG_WITH(libglade-config,
[  --with-libglade-config=LIBGLADE_CONFIG  Location of libglade-config],
LIBGLADE_CONFIG="$withval")

module_args=
for module in . $3; do
  case "$module" in
    gnome)
      module_args="$module_args gnome"
      ;;
  esac
done

AC_PATH_PROG(LIBGLADE_CONFIG, libglade-config, no)
AC_MSG_CHECKING(for libglade)
if test "$LIBGLADE_CONFIG" = "no"; then
  AC_MSG_RESULT(no)
  ifelse([$2], , :, [$2])
else
  if $LIBGLADE_CONFIG --check $module_args; then
    LIBGLADE_CFLAGS=`$LIBGLADE_CONFIG --cflags $module_args`
    LIBGLADE_LIBS=`$LIBGLADE_CONFIG --libs $module_args`
    AC_MSG_RESULT(yes)
    ifelse([$1], , :, [$1])
  else
    echo ""
    echo "*** libglade was not compiled with support for $module_args" 1>&2
    AC_MSG_RESULT(no)
    ifelse([$2], , :, [$2])
  fi
fi
AC_SUBST(LIBGLADE_CFLAGS)
AC_SUBST(LIBGLADE_LIBS)
])

dnl Configure paths for GTK+
dnl Owen Taylor     97-11-3

dnl AM_PATH_GTK([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]]])
dnl Test for GTK, and define GTK_CFLAGS and GTK_LIBS
dnl
AC_DEFUN(AM_PATH_GTK,
[dnl
dnl Get the cflags and libraries from the gtk-config script
dnl
AC_ARG_WITH(gtk-prefix,[  --with-gtk-prefix=PFX   Prefix where GTK is installed (optional)],
            gtk_config_prefix="$withval", gtk_config_prefix="")
AC_ARG_WITH(gtk-exec-prefix,[  --with-gtk-exec-prefix=PFX Exec prefix where GTK is installed (optional)],
            gtk_config_exec_prefix="$withval", gtk_config_exec_prefix="")
AC_ARG_ENABLE(gtktest, [  --disable-gtktest       Do not try to compile and run a test GTK program],
		    , enable_gtktest=yes)

  if test x$gtk_config_exec_prefix != x ; then
     gtk_config_args="$gtk_config_args --exec-prefix=$gtk_config_exec_prefix"
     if test x${GTK_CONFIG+set} != xset ; then
        GTK_CONFIG=$gtk_config_exec_prefix/bin/gtk-config
     fi
  fi
  if test x$gtk_config_prefix != x ; then
     gtk_config_args="$gtk_config_args --prefix=$gtk_config_prefix"
     if test x${GTK_CONFIG+set} != xset ; then
        GTK_CONFIG=$gtk_config_prefix/bin/gtk-config
     fi
  fi

  AC_PATH_PROG(GTK_CONFIG, gtk-config, no)
  min_gtk_version=ifelse([$1], ,0.99.7,$1)
  AC_MSG_CHECKING(for GTK - version >= $min_gtk_version)
  no_gtk=""
  if test "$GTK_CONFIG" = "no" ; then
    no_gtk=yes
  else
    GTK_CFLAGS=`$GTK_CONFIG $gtk_config_args --cflags`
    GTK_LIBS=`$GTK_CONFIG $gtk_config_args --libs`
    gtk_config_major_version=`$GTK_CONFIG $gtk_config_args --version | \
           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\1/'`
    gtk_config_minor_version=`$GTK_CONFIG $gtk_config_args --version | \
           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`
    gtk_config_micro_version=`$GTK_CONFIG $gtk_config_args --version | \
           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`
    if test "x$enable_gtktest" = "xyes" ; then
      ac_save_CFLAGS="$CFLAGS"
      ac_save_LIBS="$LIBS"
      CFLAGS="$CFLAGS $GTK_CFLAGS"
      LIBS="$LIBS $GTK_LIBS"
dnl
dnl Now check if the installed GTK is sufficiently new. (Also sanity
dnl checks the results of gtk-config to some extent
dnl
      rm -f conf.gtktest
      AC_TRY_RUN([
#include <gtk/gtk.h>
#include <stdio.h>

int
main ()
{
  int major, minor, micro;
  char *tmp_version;

  system ("touch conf.gtktest");

  /* HP/UX 9 (%@#!) writes to sscanf strings */
  tmp_version = g_strdup("$min_gtk_version");
  if (sscanf(tmp_version, "%d.%d.%d", &major, &minor, &micro) != 3) {
     printf("%s, bad version string\n", "$min_gtk_version");
     exit(1);
   }

  if ((gtk_major_version != $gtk_config_major_version) ||
      (gtk_minor_version != $gtk_config_minor_version) ||
      (gtk_micro_version != $gtk_config_micro_version))
    {
      printf("\n*** 'gtk-config --version' returned %d.%d.%d, but GTK+ (%d.%d.%d)\n",
             $gtk_config_major_version, $gtk_config_minor_version, $gtk_config_micro_version,
             gtk_major_version, gtk_minor_version, gtk_micro_version);
      printf ("*** was found! If gtk-config was correct, then it is best\n");
      printf ("*** to remove the old version of GTK+. You may also be able to fix the error\n");
      printf("*** by modifying your LD_LIBRARY_PATH enviroment variable, or by editing\n");
      printf("*** /etc/ld.so.conf. Make sure you have run ldconfig if that is\n");
      printf("*** required on your system.\n");
      printf("*** If gtk-config was wrong, set the environment variable GTK_CONFIG\n");
      printf("*** to point to the correct copy of gtk-config, and remove the file config.cache\n");
      printf("*** before re-running configure\n");
    }
  else
    {
      if ((gtk_major_version > major) ||
        ((gtk_major_version == major) && (gtk_minor_version > minor)) ||
        ((gtk_major_version == major) && (gtk_minor_version == minor) && (gtk_micro_version >= micro)))
      {
        return 0;
       }
     else
      {
        printf("\n*** An old version of GTK+ (%d.%d.%d) was found.\n",
               gtk_major_version, gtk_minor_version, gtk_micro_version);
        printf("*** You need a version of GTK+ newer than %d.%d.%d. The latest version of\n",
	       major, minor, micro);
        printf("*** GTK+ is always available from ftp://ftp.gtk.org.\n");
        printf("***\n");
        printf("*** If you have already installed a sufficiently new version, this error\n");
        printf("*** probably means that the wrong copy of the gtk-config shell script is\n");
        printf("*** being found. The easiest way to fix this is to remove the old version\n");
        printf("*** of GTK+, but you can also set the GTK_CONFIG environment to point to the\n");
        printf("*** correct copy of gtk-config. (In this case, you will have to\n");
        printf("*** modify your LD_LIBRARY_PATH enviroment variable, or edit /etc/ld.so.conf\n");
        printf("*** so that the correct libraries are found at run-time))\n");
      }
    }
  return 1;
}
],, no_gtk=yes,[
        # Cross-compiling
        AC_TRY_LINK([
#include <gtk/gtk.h>
#include <stdio.h>
        ], [
  return ((gtk_major_version) || (gtk_minor_version) || (gtk_micro_version));
        ], [
          echo $ac_n "cross compiling; looks ok... $ac_c"
        ], [
          no_gtk=yes
          echo $ac_n "cross compiling; linking failed... $ac_c"
        ])
      ])
      CFLAGS="$ac_save_CFLAGS"
      LIBS="$ac_save_LIBS"
    fi
  fi
  if test "x$no_gtk" = x ; then
     AC_MSG_RESULT(yes)
     ifelse([$2], , :, [$2])
  else
     AC_MSG_RESULT(no)
     if test "$GTK_CONFIG" = "no" ; then
       echo "*** The gtk-config script installed by GTK could not be found"
       echo "*** If GTK was installed in PREFIX, make sure PREFIX/bin is in"
       echo "*** your path, or set the GTK_CONFIG environment variable to the"
       echo "*** full path to gtk-config."
     else
       if test -f conf.gtktest ; then
        :
       else
          echo "*** Could not run GTK test program, checking why..."
          CFLAGS="$CFLAGS $GTK_CFLAGS"
          LIBS="$LIBS $GTK_LIBS"
          AC_TRY_LINK([
#include <gtk/gtk.h>
#include <stdio.h>
],      [ return ((gtk_major_version) || (gtk_minor_version) || (gtk_micro_version)); ],
        [ echo "*** The test program compiled, but did not run. This usually means"
          echo "*** that the run-time linker is not finding GTK or finding the wrong"
          echo "*** version of GTK. If it is not finding GTK, you'll need to set your"
          echo "*** LD_LIBRARY_PATH environment variable, or edit /etc/ld.so.conf to point"
          echo "*** to the installed location  Also, make sure you have run ldconfig if that"
          echo "*** is required on your system"
	  echo "***"
          echo "*** If you have an old version installed, it is best to remove it, although"
          echo "*** you may also be able to get things to work by modifying LD_LIBRARY_PATH"
          echo "***"
          echo "*** If you have a RedHat 5.0 system, you should remove the GTK package that"
          echo "*** came with the system with the command"
          echo "***"
          echo "***    rpm --erase --nodeps gtk gtk-devel" ],
        [ echo "*** The test program failed to compile or link. See the file config.log for the"
          echo "*** exact error that occured. This usually means GTK was incorrectly installed"
          echo "*** or that you have moved GTK since it was installed. In the latter case, you"
          echo "*** may want to edit the gtk-config script: $GTK_CONFIG" ])
          CFLAGS="$ac_save_CFLAGS"
          LIBS="$ac_save_LIBS"
       fi
     fi
     GTK_CFLAGS=""
     GTK_LIBS=""
     ifelse([$3], , :, [$3])
  fi
  AC_SUBST(GTK_CFLAGS)
  AC_SUBST(GTK_LIBS)
  rm -f conf.gtktest
])


dnl Must be before..
AC_SUBST(have_gtk_120)
AM_PATH_GTK(1.2.0,[have_gtk_120=gtk_120],[have_gtk_120=no_gtk_120])

dnl Must be after..
if test x$have_gtk_120 = xno_gtk_120 ; then
  AM_PATH_GTK(1.1.13,[WITH_GTK=1],[WITH_GTK=0])
else
  WITH_GTK=1
fi

if test "x$WITH_GTK" = x1 ; then
AC_SUBST(WITH_GTK)
WITH_GTK=1

AC_SUBST(pgtk_has_libglade)
AM_PATH_LIBGLADE([
pgtk_has_libglade=libglade], [
 echo "********************************************************************"
 echo "Support for libglade not being compiled in."
 echo "See http://glade.pn.org/ and http://www.daa.com.au/~james/gnome/"
 echo "for more information."
 echo "********************************************************************"
 pgtk_has_libglade=nolibglade])
AC_SUBST(PGTK_CFLAGS)
AC_SUBST(PGTK_LIBS)
PGTK_CFLAGS="$GTK_CFLAGS"
PGTK_LIBS="$GTK_LIBS"

CFLAGS="$CFLAGS $GTK_CFLAGS"
LIBS="$MODULE_LDFLAGS $LIBS"

dnl Check for GL/MesaGL libraries
AC_ARG_WITH(GL-prefix,  [  --with-GL-prefix=DIR    Prefix where GL/MesaGL is installed])
AC_ARG_WITH(lib-GL,     [  --with-lib-GL           use '-lGL'])
AC_ARG_WITH(lib-MesaGL, [  --with-lib-MesaGL       use '-lMesaGL'])

if test "x$with_GL_prefix" = "x" ; then
 GL_LDOPTS=""
 GL_CFLAGS=""
else
 GL_LDOPTS="-L$with_GL_prefix/lib"
 GL_CFLAGS="-I$with_GL_prefix/include"
fi

saved_LIBS="$LIBS"

AC_ARG_WITH(gnome, [  --without-gnome         no support for gnome],[],[with_gnome=yes])

if test "x$with_gnome" = "xyes"; then

AC_SUBST(GNOME_CFLAGS)
AC_SUBST(GNOME_LIBS)

AC_SUBST(pgtk_has_gnome)
AC_SUBST(pgtk_has_docklets)
AC_PATH_PROG(GNOME_CONFIG,gnome-config,no)

if test "$GNOME_CONFIG" = "no"; then
  :
else
  case "`$GNOME_CONFIG --version`" in
    gnome-libs\ 1.0.*)
      GNOME_CONFIG=no
      AC_MSG_WARN(Gnome 1.0.x not supported)
    ;;
  esac
fi

AC_MSG_CHECKING([gnome])

if test "$GNOME_CONFIG" = "no"; then
  pgtk_has_gnome=nognome
  AC_MSG_RESULT(no);
else
  GNOME_CFLAGS="`$GNOME_CONFIG --cflags gnome gnomeui gnorba gtkxmhtml applets`"
  GNOME_LIBS="`$GNOME_CONFIG --libs gnome gnomeui gnorba gtkxmhtml applets`"
  pgtk_has_gnome=gnome
  AC_DEFINE(HAVE_GNOME)
  AC_MSG_RESULT(yes);
fi

AC_MSG_CHECKING([gnome docklets])
if test "$GNOME_CONFIG" = "no"; then
  pgtk_has_docklets=nodocklets
  AC_MSG_RESULT(no);
else
  GNOME_DOCKLETS_LIBS="`$GNOME_CONFIG --libs docklets 2>/dev/null`"
  if test x"$GNOME_DOCKLETS_LIBS" = x ; then
    pgtk_has_docklets=nodocklets
    AC_MSG_RESULT(no);
  else
    pgtk_has_docklets=docklets
    GNOME_LIBS="`$GNOME_CONFIG --libs gnome gnomeui gnorba gtkxmhtml applets docklets`"
    GNOME_CFLAGS="`$GNOME_CONFIG --cflags gnome gnomeui gnorba gtkxmhtml applets docklets`"
    AC_MSG_RESULT(yes);
  fi
fi

AC_CHECK_HEADERS( X11/xpm.h )
AC_CHECK_LIB(Xpm, XpmReadFileToXpmImage)

# End of gnome dependent stuff.
fi

AC_CHECK_LIB(gtkdatabox, main,,,`gtk-config --libs`)
AC_CHECK_HEADERS(gtkdatabox.h)

AC_SUBST(pgtk_have_gtkdatabox)
AC_SUBST(DATABOX_LIBS)
DATABOX_LIBS=""
AC_MSG_CHECKING([gtkdatabox support]);
if test x$ac_cv_lib_gtkdatabox_main = xyes ; then
  if test x$ac_cv_header_gtkdatabox_h = xyes; then
    AC_MSG_RESULT(yes)
    DATABOX_LIBS=-lgtkdatabox
    pgtk_has_gtkdatabox=gtkdatabox
  else
    AC_MSG_RESULT(no)
    pgtk_has_gtkdatabox=nogtkdatabox
    echo "*******************************************"
    echo " Warning: Partial gtkdatabox installation  "
    echo " Library found, but no header files.       "
    echo " Databox support will be disabled.         "
    echo " The widget is available from              "
    echo " http://www.eudoxos.net/gtk/gtkdatabox/    "
    echo "*******************************************"
  fi
else
  pgtk_has_gtkdatabox=nogtkdatabox
fi


AC_MSG_CHECKING([OpenGL])

LIBS="$saved_LIBS $GL_LDOPTS -lGL"
AC_TRY_LINK( ,[ char glBegin(); glBegin(); ], have_GL=yes, have_GL=no)
AC_MSG_RESULT($have_GL)

if test "x$have_GL" = "xno" ; then
  AC_MSG_CHECKING([Mesa])
  LIBS="$saved_LIBS $GL_LDOPTS -lMesaGL"
  AC_TRY_LINK( ,[ char glBegin(); glBegin(); ], have_MesaGL=yes, have_MesaGL=no)
  AC_MSG_RESULT($have_MesaGL)

  if test "x$have_MesaGL" = "xno"; then
   AC_MSG_CHECKING([Mesa with pthreads])
   LIBS="$saved_LIBS $GL_LDOPTS -lMesaGL -lpthread"
   AC_TRY_LINK( ,[ char glBegin(); glBegin(); ], have_MesaGL_pthread=yes, have_MesaGL_pthread=no)
   AC_MSG_RESULT($have_MesaGL_pthread)
  fi
fi

LIBS="$saved_LIBS"


if test "x$with_lib_GL" = "xyes"; then

 if test "x$have_GL" = "xyes"; then
  GL_LIBS="$GL_LDOPTS  -lGL"
 else
  AC_MSG_ERROR([Missing GL library])
 fi

elif test "x$with_lib_MesaGL" = "xyes"; then

 if test "x$have_MesaGL" = "xyes"; then
  GL_LIBS="$GL_LDOPTS -lMesaGL"
 elif test "x$have_MesaGL_pthread" = "xyes"; then
  GL_LIBS="$GL_LDOPTS -lMesaGL -lpthread"
 else
  AC_MSG_ERROR([Missing MesaGL library])
 fi

else

 if test "x$have_GL" = "xyes"; then
  GL_LIBS="$GL_LDOPTS -lGL"
 elif test "x$have_MesaGL" = "xyes"; then
  GL_LIBS="$GL_LDOPTS  -lMesaGL"
 elif test "x$have_MesaGL_pthread" = "xyes"; then
  GL_LIBS="$GL_LDOPTS  -lMesaGL -lpthread"
 else
  have_GL=no
 fi
fi
fi

CFLAGS="$GL_CFLAGS $CFLAGS"

AC_SUBST(pgtk_has_glarea)
pgtk_has_glarea=noglarea

if test "x$have_GL" = "xyes" ; then
  AC_CHECK_LIB(gtkgl, main,,,`gtk-config --libs` $GL_LIBS)
  if test x$ac_cv_lib_gtkgl_main = xyes ; then
    pgtk_has_glarea=glarea
    LIBS="$GL_LIBS $LIBS"
  else
    unset ac_cv_lib_gtkgl_main
    echo "*********************************************"
    echo " Warning: Failed to find the GTK GL widget.  "
    echo " GL-support will be disabled.                "
    echo " The widget is available from                "
    echo " http://www.student.oulu.fi/~jlof/gtkglarea/ "
    echo "*********************************************"
  fi
fi
else
  WITH_GTK=0
fi

AC_OUTPUT(Makefile options)
