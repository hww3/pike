class GTK.MenuShell;
inherit GTK.Container;
//! A GTK.MenuShell is the abstract base class used to derive the
//! W(Menu) and W(MenuBar) subclasses.
//! <p>
//! A GTK.MenuShell is a container of W(MenuItem) objects arranged in a
//! list which can be navigated, selected, and activated by the user to
//! perform application functions. A W(MenuItem) can have a submenu
//! associated with it, allowing for nested hierarchical menus.
//! </p>

signal deactivate;
//! This signal is emitted when a menu shell is deactivated.
signal selection_done;
//! This signal is emitted when a selection has been completed within a
//! menu shell.
signal move_current;
//! An action signal which moves the current menu item in the direction
//! specified by the third argument.
signal activate_current;
//! An action signal that activates the current menu item within the
//! menu shell.
signal cancel;
//! An action signal which cancels the selection within the menu
//! shell. Causes the selection_done signal to be emitted.
member int active;
//! 1 if the menu shell is currently active.

void append( GTK.Widget what );
//! Adds a new W(MenuItem) to the end of the menu shell's item
//! list. Same as 'add'.
void prepend( GTK.Widget what );
//! Add a menu item to the start of the widget (for a menu: top, for a
//! bar: left)
void insert( GTK.Widget what, int where );
//! Add a widget after the specified location
void deactivate();
//! Deactivates the menu shell. Typically this results in the menu
//! shell being erased from the screen.
void select_item( GTK.Widget menuitem );
//! Selects the menu item from the menu shell.
void activate_item( GTK.Widget menu_item, int force_deactivate );
//! Activates the menu item within the menu shell.

array(GTK.MenuItem) children()
//! This function returns all children of the menushell as an array.
{
  GList *g;
  int n = 0;
  my_pop_n_elems(args);
  g = GTK_MENU_SHELL( THIS->obj )->children;
  while(g)
  {
    push_gtkobjectclass( GTK_OBJECT( g->data ), pgtk_menu_item_program );
    n++;
    g = g->next;
  }
  f_aggregate(n);
}


