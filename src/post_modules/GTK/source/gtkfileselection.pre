/* -*- C -*- */
class GTK.FileSelection;
inherit GTK.Window;
//! GtkFileSelection should be used to retrieve file or directory names
//! from the user. It will create a new dialog window containing a
//! directory list, and a file list corresponding to the current
//! working directory. The filesystem can be navigated using the
//! directory list, the drop-down history menu, or the TAB key can be
//! used to navigate using filename completion common in text based
//! editors such as emacs and jed.
//! <p>
//! The default filename can be set using set_filename() and the
//! selected filename retrieved using get_filename().
//! </p><p>
//! Use complete() to display files that match a given pattern. This
//! can be used for example, to show only *.txt files, or only files
//! beginning with gtk*.
//! </p><p>
//! Simple file operations; create directory, delete file, and rename
//! file, are available from buttons at the top of the dialog. These
//! can be hidden using hide_fileop_buttons() and shown again using
//! show_fileop_buttons().
//! </p><p>
//! TIMG: GTK.FileSelection("File selector")
//! </p>

member GTK.Button ok_button;
//! The ok button
member GTK.Button cancel_button;
//! The cancel button
member GTK.Button help_button;
//! The help button
member GTK.Button fileop_c_dir;
//! The create directory button in the file operation button group
member GTK.Button fileop_del_file;
//! The delete file button in the file operation button group
member GTK.Button fileop_ren_file;
//! The rename file button in the file operation button group
member GTK.Clist dir_list;
//! The list of directories
member GTK.Clist file_list;
//! The list of files
member GTK.OptionMenu history_pulldown;
//! Used to create the drop-down directory histor

string get_filename();
//! Returns the currently entered filename as a string
void create( string window_title );
//! Creates a new file selection dialog box. By default it will list
//! the files in the current working directory. Operation buttons
//! allowing the user to create a directory, delete files, and rename
//! files will also be present by default.
void set_filename( string fname );
//! Sets a default path for the file requestor. If filename includes a
//! directory path, then the requestor will open with that path as its
//! current working directory.
void show_fileop_buttons();
//! Shows the file operation buttons, if they have previously been
//! hidden. The rest of the widgets in the dialog will be resized
//! accordingly.
void hide_fileop_buttons();
//! Hides the file operation buttons that normally appear at the top of
//! the dialog. Useful if you wish to create a custom file selector,
//! based on GTK.FileSelection.
void complete( string pattern );
//! Will attempt to match pattern to a valid filename in the current
//! directory. If a match can be made, the matched filename will appear
//! in the text entry field of the file selection dialog. If a partial
//! match can be made, the "Files" list will contain those file names
//! which have been partially matched.


