COND_WIDGET(glarea);
PROGRAM(gl_area);
INHERIT(drawing_area);


ADD_INCLUDE(#include <gtkgl/gdkgl.h>);
ADD_INCLUDE(#include <gtkgl/gtkglarea.h>);

#include <gtkgl/gdkgl.h>
#include <gtkgl/gtkglarea.h>


COMPLEX_FUNCTION(create, intarray);
NAME_ARGS(gloptions);

COMPLEX_FUNCTION(make_current);

FUNCTION(swap_buffers, "function(void:object)");
{
  gdk_gl_swap_buffers( GTK_WIDGET(THIS->obj)->window );
  RETURN_THIS();
}


FUNCTION(wait_gl, "function(void:object)");
{
  gdk_gl_wait_gl();
  RETURN_THIS();
}

FUNCTION(wait_gdk, "function(void:object)");
{
  gdk_gl_wait_gdk();
  RETURN_THIS();
}

/* FUNCTION(use_gdk_font, "function(object, int, int, int )"); */
/* { */
/*   struct object *o; */
/*   int first, count, list_base; */
/*   get_all_args( "use_gdk_font", args, "%o%d%d%d",  */
/*                 &o, &first, &count, &list_base); */
/*   gdk_gl_use_gdk_font(get_gdkobjectclass( o, Font ),first,count,list_base); */
/* } */

CONSTANT(GDK_GL_NONE);
CONSTANT(GDK_GL_USE_GL);
CONSTANT(GDK_GL_BUFFER_SIZE);
CONSTANT(GDK_GL_LEVEL);
CONSTANT(GDK_GL_RGBA);
CONSTANT(GDK_GL_DOUBLEBUFFER);
CONSTANT(GDK_GL_STEREO);
CONSTANT(GDK_GL_AUX_BUFFERS);
CONSTANT(GDK_GL_RED_SIZE);
CONSTANT(GDK_GL_GREEN_SIZE);
CONSTANT(GDK_GL_BLUE_SIZE);
CONSTANT(GDK_GL_ALPHA_SIZE);
CONSTANT(GDK_GL_DEPTH_SIZE);
CONSTANT(GDK_GL_STENCIL_SIZE);
CONSTANT(GDK_GL_ACCUM_RED_SIZE);
CONSTANT(GDK_GL_ACCUM_GREEN_SIZE);
CONSTANT(GDK_GL_ACCUM_BLUE_SIZE);
CONSTANT(GDK_GL_ACCUM_ALPHA_SIZE);
CONSTANT(GDK_GL_X_VISUAL_TYPE_EXT);
CONSTANT(GDK_GL_TRANSPARENT_TYPE_EXT);
CONSTANT(GDK_GL_TRANSPARENT_INDEX_VALUE_EXT);
CONSTANT(GDK_GL_TRANSPARENT_RED_VALUE_EXT);
CONSTANT(GDK_GL_TRANSPARENT_GREEN_VALUE_EXT);
CONSTANT(GDK_GL_TRANSPARENT_BLUE_VALUE_EXT);
CONSTANT(GDK_GL_TRANSPARENT_ALPHA_VALUE_EXT);

END_COND_WIDGET(glarea);
