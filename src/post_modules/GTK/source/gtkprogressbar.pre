PROGRAM(progress_bar);
// A simple progress bar. Useful when you are doing things that take a long
// time. Try to always have an 'abort' button whenever it makes sence.
// IMG: GTK.ProgressBar()->update(0.1)
// IMG: GTK.ProgressBar()->set_show_text(1)->update(0.3)
// IMG: GTK.ProgressBar()->update(0.6)
// IMG: GTK.ProgressBar()->update(1.0)
INHERIT(progress);
COMPLEX_FUNCTION(create);
// Create a new progress bar.
// The default values are:<br>
// Min 0.0, max 1.0, current 0.0<br>
COMPLEX_FUNCTION(update, float);
NAME_ARGS(fraction);
// 0.0 is the minimum value, 1.0 is the maximum value.
COMPLEX_FUNCTION(set_bar_style, int);
NAME_ARGS(style);
// One of GTK.ProgressContinuous or GTK.ProgressDiscrete
COMPLEX_FUNCTION(set_discrete_blocks, int);
NAME_ARGS(blocks);
// The number of discrete blocks in the progress bar
COMPLEX_FUNCTION(set_activity_step, int);
NAME_ARGS(stepp);
// Include activity blocks (empty gaps in the progressbar, ala windows 98)
COMPLEX_FUNCTION(set_activity_blocks, int);
NAME_ARGS(blocks);
// The number of activity blocks
COMPLEX_FUNCTION(set_orientation, int);
NAME_ARGS(style);
// One of 
// GTK.ProgressLeftToRight, GTK.ProgressRightToLeft,
// GTK.ProgressBottomToTop or GTK.ProgressTopToBottom

CLASSMEMBER(activity_pos, int);
// The position of the progress meter in pixels.
CLASSMEMBER(activity_step, int);
// The step size of the activity indicator in pixels.
CLASSMEMBER(activity_blocks, int);
// The number of blocks that are set.
CLASSMEMBER(activity_dir, int);
// The current direction of the progress meter. 1 is forward and 0 is
// backwards. Usefull if you for some strange reason would like to
// know in what direction the activity indicator is swinging right
// now...
CLASSMEMBER(blocks, int);
// The total number of blocks.
CLASSMEMBER(orientation, int);
// The current orientation. GTK_PROGRESS_LEFT_TO_RIGHT, GTK_PROGRESS_RIGHT_TO_LEFT,
// GTK_PROGRESS_BOTTOM_TO_TOP or GTK_PROGRESS_TOP_TO_BOTTOM.
CLASSMEMBER(bar_style, int);
// The progress bar style. GTK_PROGRESS_CONTINUOUS or GTK_PROGRESS_DISCRETE.
