class radio_button;
inherit check_button;
// Radio buttons are similar to check buttons except they are grouped
// so that only one may be selected/depressed at a time. This is good
// for places in your application where you need to select from a
// short list of options.  <p> To connect the buttons, use another
// button in the desired group as the second argument to
// GTK.RadioButton().
// IMG: GTK.Radio_button("Button");
FUNCTION(create, "function(string|void,object|void:void)")
NAME_ARGS(title,groupmember);
//  Normal creation:<p>
// object GTK.RadioButton(string title) - First button (with label)<br>
// object GTK.RadioButton()->add(widget) - First button (with widget)<br>
// object GTK.RadioButton(title, another_radio_button) - Second to n:th button (with title)<br>
// object GTK.RadioButton(0,another_radio_button)->add(widget) - Second to n:th button (with widget)<br>
{
  GSList *mylist = NULL;
  gchar *label=NULL;
  struct object *o=NULL;
  if(args)
  {
    if(Pike_sp[-args].type == PIKE_T_STRING)
      label = (gchar *)Pike_sp[-args].u.string->str;
    if(args==2 && (Pike_sp[-1].type == PIKE_T_OBJECT))
	o = Pike_sp[-1].u.object;
  }

  pgtk_verify_not_inited();
  pgtk_verify_setup();

  if(o)
    mylist=gtk_radio_button_group(GTK_RADIO_BUTTON(get_gtkobject(o)));

  if(label)
    THIS->obj=GTK_OBJECT(gtk_radio_button_new_with_label(mylist,label));
  else
    THIS->obj=GTK_OBJECT(gtk_radio_button_new(mylist));
  pgtk__init_this_object();
}

FUNCTION(set_group, "function(object:object)")
NAME_ARGS(groupmember);
// the argument is another radio button to whose group this button
// should be added to. It is prefereable to use the second argument to
// the constructor instead, but if you for some reason want to move
// the button to another group, use this function.
{
  struct object *o=NULL;
  GSList *mylist;
  get_all_args("set_group", args, "%o", &o );

  mylist = gtk_radio_button_group( GTK_RADIO_BUTTON( get_gtkobject( o ) ));
  gtk_radio_button_set_group( GTK_RADIO_BUTTON( THIS->obj ), mylist );
  RETURN_THIS();
}

/* TODO: group, g_list of members */

