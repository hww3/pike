class toggle_button;
inherit button;
// Toggle buttons are derived from normal buttons and are very
// similar, except they will always be in one of two states,
// alternated by a click. They may be depressed, and when you click
// again, they will pop back up. Click again, and they will pop back
// down.
// <p>
// IMG: GTK.ToggleButton("Toggle button")
// IMG: GTK.ToggleButton("Toggle button")->set_active( 1 )
signal toggled;
FUNCTION(create, "function(string|void:void)");
NAME_ARGS(label);
// If you supply a string, a label will be created and inserted in the button.
// Otherwise, use -&gt;add(widget) to create the contents of the button.
{
  pgtk_verify_not_inited();
  pgtk_verify_setup();
  if(args)
  {
    char *s;
    get_all_args("GTK.Toggle_button", args, "%s", &s);
    THIS->obj = GTK_OBJECT( gtk_toggle_button_new_with_label( s ) );
  } else {
    THIS->obj = GTK_OBJECT( gtk_toggle_button_new( ) );
  }
  pgtk__init_this_object();
}
void set_mode( int mode );
// If true, draw indicator
void set_active( int activep );
// If activep is true, the toggle button will be activated.
member int active;
// returns 1 if the button is pressed, 0 otherwise.
void toggled();
// emulate a 'toggle' of the button. This will emit a 'toggled' signal.
