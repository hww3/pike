PROGRAM(alignment);
// The W(Alignment) widget controls the alignment and size of its
// child widget. It has four settings: xscale, yscale, xalign, and
// yalign.
// <p>
// The scale settings are used to specify how much the child widget
// should expand to fill the space allocated to the W(Alignment). The
// values can range from 0 (meaning the child doesn't expand at all)
// to 1 (meaning the child expands to fill all of the available
// space).
// <p>
// The align settings are used to place the child widget within the
// available area. The values range from 0 (top or left) to 1 (bottom
// or right). Of course, if the scale settings are both set to 1, the
// alignment settings have no effect.
//
// NOIMG
INHERIT(bin);

COMPLEX_FUNCTION(create, float, float, float, float);
NAME_ARGS(xalign,yalign,xscale,yscale);
// <table>
// <tr><td>xalign :</td>
// <td>the horizontal alignment of the child widget, from 0 (left) to 1 (right).</td></tr>
// <tr><td>                  yalign :</td>
// <td>the vertical alignment of the child widget, from 0 (top) to 1 (bottom).</td></tr>
// <tr><td>                  xscale :</td>
// <td>the amount that the child widget expands horizontally to fill up unused space, from 0 to 1. A value of 0 indicates that the child widget should never expand. A value of 1 indicates that the child widget will expand to fill all of the space allocated for the GTK.Alignment.</td></tr>
// <tr><td>                  yscale :</td>
// <td>the amount that the child widget expands vertically to fill up unused space, from 0 to 1. The values are similar to xscale.</td></tr>
// </table>


COMPLEX_FUNCTION(set, float, float, float, float);
NAME_ARGS(xalign,yalign,xscale,yscale);
// <table>
// <tr><td>xalign :</td>
// <td>the horizontal alignment of the child widget, from 0 (left) to 1 (right).</td></tr>
// <tr><td>                  yalign :</td>
// <td>the vertical alignment of the child widget, from 0 (top) to 1 (bottom).</td></tr>
// <tr><td>                  xscale :</td>
// <td>the amount that the child widget expands horizontally to fill up unused space, from 0 to 1. A value of 0 indicates that the child widget should never expand. A value of 1 indicates that the child widget will expand to fill all of the space allocated for the GTK.Alignment.</td></tr>
// <tr><td>                  yscale :</td>
// <td>the amount that the child widget expands vertically to fill up unused space, from 0 to 1. The values are similar to xscale.</td></tr>
// </table>

CLASSMEMBER(xalign, float);
// the horizontal alignment of the child widget, from 0 (left) to 1 (right).
CLASSMEMBER(yalign, float);
// the vertical alignment of the child widget, from 0 (top) to 1 (bottom).
CLASSMEMBER(xscale, float);
// the amount that the child widget expands horizontally to fill up
// unused space, from 0 to 1. A value of 0 indicates that the child
// widget should never expand. A value of 1 indicates that the child
// widget will expand to fill all of the space allocated for the
// GTK.Alignment.
CLASSMEMBER(yscale, float);
// the amount that the child widget expands vertically to fill up
// unused space, from 0 to 1. The values are similar to xscale.
