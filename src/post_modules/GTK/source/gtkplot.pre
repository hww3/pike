require gtkextra;
class plot;
inherit misc;
#define GTK_PLOT_DATASET(X) ((GtkPlotData *)X)
#define GtkPlotDataset GtkPlotData
#define GdkGc GdkGC
#define pgtk_GdkGc_program pgtk_GdkGC_program
// W(GtkPlot) is a widget for GTK+. It allows to draw high quality
// scientific plots in two dimensions with a look and feel very
// similar to Microcal Origin for Windows. The distribution includes
// W(GtkPlotLayout), a simple GtkLayout subclass, and a demo program
// showing two layered plots with different kind of curves. You can
// choose between a number of symbol types, lines, connectors
// -straight lines, steps, splines-, and change their attributes
// -color, size, width-. You can also plot functions, add error bars,
// edit legends, rotate and move axis titles, change axis properties,
// etc.
// <p>
//  W(GtkPlotCanvas) is a W(GtkPlotLayout) and allows to DnD plots,
//  points, and child objects (text, axis titles). You can move them
//  or resize your plots dragging with the mouse!

constant int GTK_PLOT_TRANSPARENT;
constant int GTK_PLOT_SCALE_LINEAR;
constant int GTK_PLOT_SCALE_LOG10;
constant int GTK_PLOT_SYMBOL_NONE;
constant int GTK_PLOT_SYMBOL_SQUARE;
constant int GTK_PLOT_SYMBOL_CIRCLE;
constant int GTK_PLOT_SYMBOL_UP_TRIANGLE;
constant int GTK_PLOT_SYMBOL_DOWN_TRIANGLE;
constant int GTK_PLOT_SYMBOL_DIAMOND;
constant int GTK_PLOT_SYMBOL_BAR;
constant int GTK_PLOT_SYMBOL_PLUS;
constant int GTK_PLOT_SYMBOL_CROSS;
constant int GTK_PLOT_SYMBOL_STAR;
constant int GTK_PLOT_SYMBOL_IMPULSE;
constant int GTK_PLOT_SYMBOL_EMPTY;
constant int GTK_PLOT_SYMBOL_FILLED;
constant int GTK_PLOT_SYMBOL_OPAQUE;
constant int GTK_PLOT_LINE_NONE;
constant int GTK_PLOT_LINE_DOTTED;
constant int GTK_PLOT_LINE_DASHED;
constant int GTK_PLOT_LINE_DOT_DASH;
constant int GTK_PLOT_LINE_DOT_DOT_DASH;
constant int GTK_PLOT_LINE_DOT_DASH_DASH;
constant int GTK_PLOT_CONNECT_NONE;
constant int GTK_PLOT_CONNECT_STRAIGHT;
constant int GTK_PLOT_CONNECT_SPLINE;
constant int GTK_PLOT_CONNECT_HV_STEP;
constant int GTK_PLOT_CONNECT_VH_STEP;
constant int GTK_PLOT_CONNECT_MIDDLE_STEP;
constant int GTK_PLOT_LABEL_NONE;
constant int GTK_PLOT_LABEL_LEFT;
constant int GTK_PLOT_LABEL_RIGHT;
constant int GTK_PLOT_LABEL_TOP;
constant int GTK_PLOT_LABEL_BOTTOM;
constant int GTK_PLOT_ERROR_DIV_ZERO;
constant int GTK_PLOT_ERROR_LOG_NEG;
constant int GTK_PLOT_AXIS_LEFT;
constant int GTK_PLOT_AXIS_RIGHT;
constant int GTK_PLOT_AXIS_TOP;
constant int GTK_PLOT_AXIS_BOTTOM;
constant int GTK_PLOT_LABEL_FLOAT;
constant int GTK_PLOT_LABEL_EXP;
constant int GTK_PLOT_TICKS_NONE;
constant int GTK_PLOT_TICKS_LEFT;
constant int GTK_PLOT_TICKS_RIGHT;
constant int GTK_PLOT_TICKS_UP;
constant int GTK_PLOT_TICKS_DOWN;

setmember int flags;
member int flags;

void create( ?GDK.Drawable drawable );
void set_drawable( GDK.Drawable drawable );
GDK.Drawable get_drawable();
void set_background( *GDK.Color );
void paint( GDK.Rectangle );
void refresh( GDK.Rectangle );
void move( float x, float y );
void resize( float w, float h );
void move_resize( float x, float y, float w, float h );
void set_xrange( float xmin, float xmax );
void set_yrange( float ymin, float ymax );
void set_range( float xmin, float xmax, float ymin, float ymax );
void set_xscale( int scale_type );
void set_yscale( int scale_type );
int get_xscale();
int get_yscale();
void put_text( float x, float y, int angle, string font, int height, GDK.Color fg, GDK.Color bg, int justification, string text );
void axis_set_visible( int axis, int visible );
int axis_get_visible( int axis );
void axis_show_title( int ais );
void axis_hide_title( int ais );
void axis_move_title( int axis, int angle, float x, float y );
void axis_justify_title( int axis, int justification);
void axis_set_attributes( int axis, int width, *GDK.Color color );
void axis_set_ticks( int orientation, float major_ticks, float minor_ticks );
void axis_set_ticks_length( int axis, int length );
void axis_set_ticks_width( int axis, int width ));
void axis_show_ticks( int axis, int major_mask, int minor_mask );
void axis_set_ticks_limits( int orientation, float begin, float end );
void axis_unset_ticks_limits( int orientation );
void axis_show_labels( int axis, int labels_mask );
void axis_labels_set_attributes( int axis, string font, int height, *GDK.Color foreground, *GDK.Color background );
void axis_labels_set_numbers( int axis, int stype, int precision );
void x0_set_visible( int visible );
int x0_get_visible(  );
void y0_set_visible( int visible );
int y0_get_visible(  );
void grids_set_visible( int vmajor, int vminor, int hmajor, int hminor );
void y0line_set_attributes( int style, int width, *GDK.Color color );
void x0line_set_attributes( int style, int width, *GDK.Color color );
void major_vgrid_set_attributes( int style, int width, *GDK.Color color );
void minor_vgrid_set_attributes( int style, int width, *GDK.Color color );
void major_hgrid_set_attributes( int style, int width, *GDK.Color color );
void minor_hgrid_set_attributes( int style, int width, *GDK.Color color );
void show_legends();
void hide_legends();
void show_legends_border( int show_shadow, int shadow_width );
void hide_legends_border();
void legends_move( float x, float y );
void legends_set_attributes(string font, int height, GDK.Color fg, GDK.Color bg);
void add_dataset( plot_dataset data );
void remove_dataset( plot_dataset data );
void draw_dataset( GDK.GC gc, plot_dataset data );


class plot_dataset;
#define GTK_PLOT_DATASET(X) ((GtkPlotData *)X)
#define GtkPlotDataset GtkPlotData
void create();
void set_points(doublearray x, doublearray y, doublearray dx, doublearray dy, int num_points);
void set_x( doublearray x );
void set_y( doublearray y );
void set_dx( doublearray dx );
void set_dy( doublearray dy );
void set_numpoints( int numpoints );
int get_numpoints( );
void set_symbol( int type, int style, int size, int line_width, *GDK.Color color);
void set_connector( int connector );
int get_connector( );
void set_line_attributes( int style, int width, *GDK.Color color);
void set_xy_attributes( int style, int width, *GDK.Color color );
void show_xerrbars();
void show_yerrbars();
void hide_xerrbars();
void hide_yerrbars();
void set_legend( string legend );
void show_legend();
void hide_legend();
void set_name( string nme );
#define gtk_plot_dataset_show gtk_plot_show_dataset
#define gtk_plot_dataset_hide gtk_plot_hide_dataset
void show();
void hide();
