/* -*- C -*- */
class GTK.Progress;
inherit GTK.Widget;
void set_show_text( int textp );
//! If true, write a text in the progress bar.
void set_text_alignment( float xalign, float yalign );
//! The location for the text in the progress bar.<br />
//! xalign is between 0.0 (leftmost) and 1.0 (rightmost)<br />
//! yalign is between 0.0 (topmost) and 1.0 (bottommost)<br />
//! <p>
//! Default is xalign == yalign == 0.5
//! </p>
void set_format_string( string format );
//!
//! More or less like sprintf.<p>
//! %[field width][character]</p><p>
//! 0&lt;=width&gt;=2</p><p>
//! Supported characters:
//! <blockquote><pre>
//! %: Insert a %<br />
//! p or P: The percentage completed, with 'digits' number of decimals
//! v or V: The actual value, with digits decimals.
//! l or L: The lower value (from the adjustment)
//! u or U: The higer value (from the adjustment)
//! %: Insert a %
//! </pre></blockquote>The default format is '%P%%'
//! </p>
void set_adjustment( GTK.Adjustment adjustment );
//! Sets the adjustment to use. See the adjustment documentation for more info
void configure( float value, float min, float max );
//! Sets the current value, the minimum value and the maximum value.
//! The default min and max are 0.0 and 1.0 respectively.
void set_percentage( float pct );
//! Sets the value (between 0.0 and 1.0). Uses the min and max values.
void set_activity_mode( int modep );
//! As well as indicating the amount of progress that has occurred, the
//! progress bar may be set to just indicate that there is some
//! activity. This can be useful in situations where progress cannot be
//! measured against a value range.<p>
//! Mode is:<br />
//! 1: active<br />
//! 0: inactive<br />
//! </p>
void set_value( float value );
//! Set the value.
float get_value();
//! Return the current value
string get_current_text();
//! Return the current text (see set_format_string)
string get_text_from_value( float value );
//! Formats 'value' and returns it as a text.
float get_current_percentage();
//! Returns a float between 0.0 and 1.0
float get_percentage_from_value( float value );
//! Returns a float between 0.0 and 1.0
member int show_text;
//! 1 if the text will be shown
member int activity_mode;
//! The currently set activity mode.
member float x_align;
//! The text alignment, 0.0 is leftmost, 1.0 is rightmost
member float y_align;
//! The text alignment, 0.0 is topmost, 1.0 is bottommost
member string format;
//! The format used to convert the value to a the text


