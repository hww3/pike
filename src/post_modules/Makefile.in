# $Id: Makefile.in,v 1.6 2002/01/27 17:51:27 mast Exp $

@make_variables@

MODULES=@subdirs@
MODULE_SEGMENTS=@MODULE_SEGMENTS@
MODULE_LINKOPTS=@MODULE_LINKOPTS@

all: linker_options modlist.h modlist_headers.h

$(MODULE_SEGMENTS) $(MODULE_LINKOPTS): modules

force:
	@:

$(MODULES) no : force
	@if [ "$@" = "no" ]; then :; else \
	  echo Making $@; \
	  ( cd $@ && \
	    (  rm remake >/dev/null 2>&1 || : ) && \
	    ( $(MAKE) $(MAKE_FLAGS) MODNAME=$@ || \
	      ( test -f remake && $(MAKE) $(MAKE_FLAGS) MODNAME=$@ ) ) \
	  ) || exit $$?; \
	fi

modules: $(MODULES)

modlist.h: $(MODULE_SEGMENTS)
	( for a in $(MODULES) no ; do \
	    if [ "$$a" = "no" ]; then :; else \
	      cat $$a/modlist_segment; \
	    fi; \
	  done ) >modlist.h

modlist_headers.h: $(MODULE_SEGMENTS)
	( for a in $(MODULES) no ; do \
	    if [ "$$a" = "no" ]; then :; else \
	      cat $$a/modlist_segment; \
	    fi; \
	  done \
	) | sed -e 's/^.*{.*,\(.*\),\(.*\).*}.*$$/void \1(void),\2(void);/' >modlist_headers.h

linker_options: $(MODULE_LINKOPTS)
	( for a in $(MODULES) no ; do \
	    if [ "$$a" = "no" ]; then :; else \
	      cat $$a/linker_options; \
	    fi; \
	  done \
	) >linker_options

Makefile: $(SRCDIR)/Makefile.in $(SRCDIR)/dependencies ./config.status
	CONFIG_FILES=Makefile CONFIG_HEADERS="" ./config.status
	touch remake
	@echo "Run make again" >&2
	@exit 1

$(SRCDIR)/configure: $(SRCDIR)/configure.in $(SRCDIR)/../aclocal.m4
	cd $(SRCDIR) && autoconf --localdir=$(SRCDIR)/..

config.status: $(SRCDIR)/configure
	CFLAGS="$(REAL_CFLAGS)" LDFLAGS="$(REAL_LDFLAGS)" CPPFLAGS="$(REAL_CPPFLAGS)" BUILDDIR="$(TMP_BUILDDIR)" BINDIR="$(TMP_BINDIR)" ./config.status --recheck

depend:
	@for a in $(MODULES) no ; do \
	  if test "$$a" = "no"; then :; else \
	    ( cd $$a && { \
	      rm -f remake; \
	      ${MAKE} $(MAKE_FLAGS) MODNAME=$$a depend || \
		if test -f remake; then ${MAKE} $(MAKE_FLAGS) MODNAME=$$a depend; else exit $$?; fi; \
	    }); \
	  fi; \
	done

install:
	@for a in $(MODULES) no ; do \
	  if [ "$$a" = "no" ]; then :; else \
	    ( cd $$a ; ${MAKE} $(MAKE_FLAGS) MODNAME=$$a install ) ; \
	  fi; \
	done

clean:
	@for a in $(MODULES) no ; do \
	  if [ "$$a" = "no" ]; then :; else \
	    ( cd $$a ; ${MAKE} $(MAKE_FLAGS) MODNAME=$$a clean ) ; \
	  fi; \
	done
	-rm -f linker_options modlist.h modlist_headers.h

verify:
	@for a in $(MODULES) no ; do \
	  if [ "$$a" = "no" ]; then :; else \
	    ( cd $$a ; \
	      echo verifying $$a ; \
	      ${MAKE} $(MAKE_FLAGS) MODNAME=$$a verify \
	    ) || exit $$? ; \
	  fi; \
	done

verbose_verify:
	@for a in $(MODULES) no ; do \
	  if [ "$$a" = "no" ]; then :; else \
	    ( cd $$a ; \
	      ${MAKE} $(MAKE_FLAGS) MODNAME=$$a verbose_verify \
	    ) || exit $$? ; \
	  fi; \
	done

fdtestsuites:
	@for a in $(MODULES) no ; do \
	  if [ "$$a" = "no" ]; then :; else \
	    echo $$a ; \
	    $(TMP_BINDIR)/mktestsuite $(SRCDIR)/$$a/testsuite.in >$$a/module_testsuite -DSRCDIR=$(SRCDIR)/$$a || exit $$? ; \
	  fi; \
	done	

testsuites:
	@for a in $(MODULES) no ; do \
	  if [ "$$a" = "no" ]; then :; else \
	    (cd $$a && $(MAKE) module_testsuite) ; \
	  fi; \
	done

extra_tests:
	@for a in $(MODULES) no ; do \
	  if [ "$$a" = "no" ]; then :; else \
	    ( cd $$a && \
	      ${MAKE} $(MAKE_FLAGS) MODNAME=$$a extra_tests \
	    ) || exit $$? ; \
	  fi; \
	done


@dependencies@
