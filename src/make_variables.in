# -*- Makefile -*-
#
# $Id: make_variables.in,v 1.19 2006/06/17 19:58:50 mast Exp $
#
# Note: This template is actually used only for make_variables in the
# subdirectories; the one created in the build base dir is just an
# unwanted by-product.

# There's magic to propagate variables to subdir configure scripts and
# to retain those variables when a subdir is reconfigured
# individually:
#
# Lines beginning with "#propagated_variables:" list such variables.
# They are available both as make variables and in the configure
# script environment. The PIKE_RETAIN_VARIABLES macro (called through
# AC_MODULE_INIT) reads them from the propagated_variables file if it
# exists, and assigns them in the environment only if they don't have
# any value already.
#
# Note: The easiest way to force full repropagation is to rerun the
# core configure script (e.g. through "make force_configure" in the
# top directory).
@propagated_variables@
#propagated_variables: CC CPP LDSHARED AR INSTALL
#propagated_variables: OPTIMIZE WARN
#propagated_variables: TMP_BUILDDIR TMP_BINDIR PIKE_SRC_DIR BUILD_BASE

@SET_MAKE@
prefix=@prefix@
exec_prefix=$(prefix)/bin
DEFINES=@CPPFLAGS@ @DEFS@
TMP_LIBDIR=$(TMP_BUILDDIR)/lib

DEFAULT_RUNPIKE=$(TMP_BUILDDIR)/tpike -DNOT_INSTALLED -DPRECOMPILED_SEARCH_MORE -m$(TMP_BUILDDIR)/master.pike $(PIKEOPTS)
USE_PIKE=pike $(PIKEOPTS)
RUNPIKE=$(@RUNPIKE@)

OTHERFLAGS=@CFLAGS@ $(OSFLAGS) $(OPTIMIZE) $(WARN) $(PROFIL)
NOOPTFLAGS=@CFLAGS@ @CPPFLAGS@ $(OSFLAGS) $(WARN) $(PROFIL)
SRCDIR=@srcdir@
PMOD_TARGETS=@PMOD_TARGETS@
make_variables_in=@make_variables_in@
MODULE_PMOD_IN=@MODULE_PMOD_IN@
MODULE_WRAPPER_PREFIX=@MODULE_WRAPPER_PREFIX@

MODNAME=@MODULE_NAME@
MODPATH=@MODULE_PATH@
MODDIR=@MODULE_DIR@

# End of make_variables.in
