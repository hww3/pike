typedef union
{
  int number;
  FLOAT_TYPE fnum;
  unsigned int address;		/* Address of an instruction */
  struct lpc_string *string;
  char *str;
  unsigned short type;
  struct node_s *n;
  struct efun *efun;
} YYSTYPE;
#define	F_ADD_256	258
#define	F_ADD_512	259
#define	F_ADD_768	260
#define	F_ADD_1024	261
#define	F_ADD_256X	262
#define	F_PREFIX_256	263
#define	F_PREFIX_512	264
#define	F_PREFIX_768	265
#define	F_PREFIX_1024	266
#define	F_PREFIX_CHARX256	267
#define	F_PREFIX_WORDX256	268
#define	F_PREFIX_24BITX256	269
#define	F_POP_VALUE	270
#define	F_POP_N_ELEMS	271
#define	F_MARK	272
#define	F_CALL_LFUN	273
#define	F_BRANCH	274
#define	F_BRANCH_WHEN_ZERO	275
#define	F_BRANCH_WHEN_NON_ZERO	276
#define	F_INC_LOOP	277
#define	F_DEC_LOOP	278
#define	F_INC_NEQ_LOOP	279
#define	F_DEC_NEQ_LOOP	280
#define	F_INDEX	281
#define	F_INDIRECT	282
#define	F_LTOSVAL	283
#define	F_LTOSVAL2	284
#define	F_PUSH_ARRAY	285
#define	F_RANGE	286
#define	F_COPY_VALUE	287
#define	F_LFUN	288
#define	F_GLOBAL	289
#define	F_LOCAL	290
#define	F_GLOBAL_LVALUE	291
#define	F_LOCAL_LVALUE	292
#define	F_CONSTANT	293
#define	F_FLOAT	294
#define	F_STRING	295
#define	F_NUMBER	296
#define	F_NEG_NUMBER	297
#define	F_CONST_1	298
#define	F_CONST0	299
#define	F_CONST1	300
#define	F_INC	301
#define	F_DEC	302
#define	F_POST_INC	303
#define	F_POST_DEC	304
#define	F_INC_AND_POP	305
#define	F_DEC_AND_POP	306
#define	F_RETURN	307
#define	F_DUMB_RETURN	308
#define	F_RETURN_0	309
#define	F_ASSIGN	310
#define	F_ASSIGN_AND_POP	311
#define	F_ASSIGN_LOCAL	312
#define	F_ASSIGN_LOCAL_AND_POP	313
#define	F_ASSIGN_GLOBAL	314
#define	F_ASSIGN_GLOBAL_AND_POP	315
#define	F_ADD	316
#define	F_SUBTRACT	317
#define	F_MULTIPLY	318
#define	F_DIVIDE	319
#define	F_MOD	320
#define	F_LT	321
#define	F_GT	322
#define	F_EQ	323
#define	F_GE	324
#define	F_LE	325
#define	F_NE	326
#define	F_NEGATE	327
#define	F_NOT	328
#define	F_COMPL	329
#define	F_AND	330
#define	F_OR	331
#define	F_XOR	332
#define	F_LSH	333
#define	F_RSH	334
#define	F_LAND	335
#define	F_LOR	336
#define	F_SWITCH	337
#define	F_SSCANF	338
#define	F_CATCH	339
#define	F_CAST	340
#define	F_FOREACH	341
#define	F_MAX_OPCODE	342
#define	F_ADD_EQ	343
#define	F_AND_EQ	344
#define	F_APPLY	345
#define	F_ARG_LIST	346
#define	F_ARRAY_ID	347
#define	F_ARROW	348
#define	F_BREAK	349
#define	F_CASE	350
#define	F_CLASS	351
#define	F_COLON_COLON	352
#define	F_COMMA	353
#define	F_CONTINUE	354
#define	F_DEFAULT	355
#define	F_DIV_EQ	356
#define	F_DO	357
#define	F_DOT_DOT	358
#define	F_DOT_DOT_DOT	359
#define	F_EFUN	360
#define	F_EFUN_CALL	361
#define	F_ELSE	362
#define	F_FLOAT_ID	363
#define	F_FOR	364
#define	F_FUNCTION_ID	365
#define	F_GAUGE	366
#define	F_IDENTIFIER	367
#define	F_IF	368
#define	F_INHERIT	369
#define	F_INLINE	370
#define	F_INT_ID	371
#define	F_LAMBDA	372
#define	F_LIST_ID	373
#define	F_LIST_END	374
#define	F_LIST_START	375
#define	F_LSH_EQ	376
#define	F_LVALUE_LIST	377
#define	F_MAPPING_ID	378
#define	F_MIXED_ID	379
#define	F_MOD_EQ	380
#define	F_MULT_EQ	381
#define	F_NO_MASK	382
#define	F_OBJECT_ID	383
#define	F_OR_EQ	384
#define	F_PRIVATE	385
#define	F_PROGRAM_ID	386
#define	F_PROTECTED	387
#define	F_PUBLIC	388
#define	F_RSH_EQ	389
#define	F_STATIC	390
#define	F_STATUS	391
#define	F_STRING_ID	392
#define	F_SUBSCRIPT	393
#define	F_SUB_EQ	394
#define	F_VAL_LVAL	395
#define	F_VARARGS	396
#define	F_VOID_ID	397
#define	F_WHILE	398
#define	F_XOR_EQ	399
#define	F_MAX_INSTR	400

