#!/bin/sh
# Runs Pike directly from the build directory.
#
# If the first argument is --gdb, Pike will be loaded inside a gdb
# session with the remaining arguments. If --gdb has a value, e.g.
# --gdb=run, the value will be passed as a command to be executed
# initially by gdb.

BUILDDIR="BUILDDIR"

if test $BUILDDIR = BUILDDIR; then
  echo Run make in the parent directory to generate this script.
  exit 1
fi

if expr x"$1" : 'x--gdb' >/dev/null; then
  gdbarg=`expr "$1" : '--gdb=\(.*\)'`
  shift
  args="set args '-m$BUILDDIR/master.pike'"
  for arg do
    arg=`sed -e s/\'/\'\"\'\"\'/g <<EOF
$arg
EOF`
    args="$args '$arg'"
  done
  if test -f .gdbinit; then
    mv .gdbinit .gdbinit.orig
    cp .gdbinit.orig .gdbinit
  fi
  echo $args >> .gdbinit
  if test x"$gdbarg" != x; then
    echo "$gdbarg" >> .gdbinit
  fi
  echo break pike_gdb_breakpoint >> .gdbinit
  gdb "$BUILDDIR/pike"
  rm .gdbinit
  test -f .gdbinit.orig && mv .gdbinit.orig .gdbinit
else
  exec "$BUILDDIR/pike" "-DPRECOMPILED_SEARCH_MORE" "-m$BUILDDIR/master.pike" "$@"
fi
